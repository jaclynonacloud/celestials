/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./ sync index.html$":
/*!***************************************!*\
  !*** . sync nonrecursive index.html$ ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./index.html\": \"./index.html\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./ sync index.html$\";\n\n//# sourceURL=webpack:///._sync_nonrecursive_index.html$?");

/***/ }),

/***/ "./ sync package.json$":
/*!*****************************************!*\
  !*** . sync nonrecursive package.json$ ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./package.json\": \"./package.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./ sync package.json$\";\n\n//# sourceURL=webpack:///._sync_nonrecursive_package.json$?");

/***/ }),

/***/ "./index.html":
/*!********************!*\
  !*** ./index.html ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("throw new Error(\"Module parse failed: Unexpected token (1:0)\\nYou may need an appropriate loader to handle this file type.\\n> <!DOCTYPE html>\\r\\n| <html lang=\\\"en\\\">\\r\\n| <head>\\r\");\n\n//# sourceURL=webpack:///./index.html?");

/***/ }),

/***/ "./js sync \\background.js$":
/*!**********************************************!*\
  !*** ./js sync nonrecursive \background.js$ ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./js sync \\\\background.js$\";\n\n//# sourceURL=webpack:///./js_sync_nonrecursive_\\background.js$?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! no static exports found */
/***/ (function(module) {

eval("!(function webpackMissingModule() { var e = new Error(\"Cannot find module './package.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n//# sourceURL=webpack:///./package.json?");

/***/ }),

/***/ "./res sync recursive \\.json$":
/*!**************************!*\
  !*** ./res sync \.json$ ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./celestials/anthony/anthony.json\": \"./res/celestials/anthony/anthony.json\",\n\t\"./celestials/solaris/solaris.json\": \"./res/celestials/solaris/solaris.json\",\n\t\"./celestials/victor/victor.json\": \"./res/celestials/victor/victor.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./res sync recursive \\\\.json$\";\n\n//# sourceURL=webpack:///./res_sync_\\.json$?");

/***/ }),

/***/ "./res sync recursive \\.png$":
/*!*************************!*\
  !*** ./res sync \.png$ ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./celestials/anthony/idle0.png\": \"./res/celestials/anthony/idle0.png\",\n\t\"./celestials/solaris/icon.png\": \"./res/celestials/solaris/icon.png\",\n\t\"./celestials/solaris/single.png\": \"./res/celestials/solaris/single.png\",\n\t\"./celestials/solaris/solaris.png\": \"./res/celestials/solaris/solaris.png\",\n\t\"./celestials/solaris/solaris_climb.png\": \"./res/celestials/solaris/solaris_climb.png\",\n\t\"./celestials/solaris/solaris_hang.png\": \"./res/celestials/solaris/solaris_hang.png\",\n\t\"./celestials/solaris/solaris_hold.png\": \"./res/celestials/solaris/solaris_hold.png\",\n\t\"./celestials/solaris/solaris_interaction.png\": \"./res/celestials/solaris/solaris_interaction.png\",\n\t\"./celestials/solaris/solaris_spawn.png\": \"./res/celestials/solaris/solaris_spawn.png\",\n\t\"./icons/lock.png\": \"./res/icons/lock.png\",\n\t\"./icons/scroll-arrow.png\": \"./res/icons/scroll-arrow.png\",\n\t\"./tray-icon.png\": \"./res/tray-icon.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./res sync recursive \\\\.png$\";\n\n//# sourceURL=webpack:///./res_sync_\\.png$?");

/***/ }),

/***/ "./res/celestials/anthony/anthony.json":
/*!*********************************************!*\
  !*** ./res/celestials/anthony/anthony.json ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module) {

eval("!(function webpackMissingModule() { var e = new Error(\"Cannot find module './celestials/anthony/anthony.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n//# sourceURL=webpack:///./res/celestials/anthony/anthony.json?");

/***/ }),

/***/ "./res/celestials/anthony/idle0.png":
/*!******************************************!*\
  !*** ./res/celestials/anthony/idle0.png ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/anthony/idle0.png\";\n\n//# sourceURL=webpack:///./res/celestials/anthony/idle0.png?");

/***/ }),

/***/ "./res/celestials/solaris/icon.png":
/*!*****************************************!*\
  !*** ./res/celestials/solaris/icon.png ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/icon.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/icon.png?");

/***/ }),

/***/ "./res/celestials/solaris/single.png":
/*!*******************************************!*\
  !*** ./res/celestials/solaris/single.png ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/single.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/single.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris.json":
/*!*********************************************!*\
  !*** ./res/celestials/solaris/solaris.json ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module) {

eval("!(function webpackMissingModule() { var e = new Error(\"Cannot find module './celestials/solaris/solaris.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris.json?");

/***/ }),

/***/ "./res/celestials/solaris/solaris.png":
/*!********************************************!*\
  !*** ./res/celestials/solaris/solaris.png ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris_climb.png":
/*!**************************************************!*\
  !*** ./res/celestials/solaris/solaris_climb.png ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris_climb.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris_climb.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris_hang.png":
/*!*************************************************!*\
  !*** ./res/celestials/solaris/solaris_hang.png ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris_hang.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris_hang.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris_hold.png":
/*!*************************************************!*\
  !*** ./res/celestials/solaris/solaris_hold.png ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris_hold.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris_hold.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris_interaction.png":
/*!********************************************************!*\
  !*** ./res/celestials/solaris/solaris_interaction.png ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris_interaction.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris_interaction.png?");

/***/ }),

/***/ "./res/celestials/solaris/solaris_spawn.png":
/*!**************************************************!*\
  !*** ./res/celestials/solaris/solaris_spawn.png ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/celestials/solaris/solaris_spawn.png\";\n\n//# sourceURL=webpack:///./res/celestials/solaris/solaris_spawn.png?");

/***/ }),

/***/ "./res/celestials/victor/victor.json":
/*!*******************************************!*\
  !*** ./res/celestials/victor/victor.json ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module) {

eval("!(function webpackMissingModule() { var e = new Error(\"Cannot find module './celestials/victor/victor.json'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\n//# sourceURL=webpack:///./res/celestials/victor/victor.json?");

/***/ }),

/***/ "./res/icons/lock.png":
/*!****************************!*\
  !*** ./res/icons/lock.png ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/icons/lock.png\";\n\n//# sourceURL=webpack:///./res/icons/lock.png?");

/***/ }),

/***/ "./res/icons/scroll-arrow.png":
/*!************************************!*\
  !*** ./res/icons/scroll-arrow.png ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/icons/scroll-arrow.png\";\n\n//# sourceURL=webpack:///./res/icons/scroll-arrow.png?");

/***/ }),

/***/ "./res/tray-icon.png":
/*!***************************!*\
  !*** ./res/tray-icon.png ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"res/tray-icon.png\";\n\n//# sourceURL=webpack:///./res/tray-icon.png?");

/***/ }),

/***/ "./styles sync \\.css$":
/*!*****************************************!*\
  !*** ./styles sync nonrecursive \.css$ ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./main.css\": \"./styles/main.css\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./styles sync \\\\.css$\";\n\n//# sourceURL=webpack:///./styles_sync_nonrecursive_\\.css$?");

/***/ }),

/***/ "./styles/main.css":
/*!*************************!*\
  !*** ./styles/main.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"styles/main.css\";\n\n//# sourceURL=webpack:///./styles/main.css?");

/***/ }),

/***/ "./ts/App.ts":
/*!*******************!*\
  !*** ./ts/App.ts ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar celestials;\r\n(function (celestials) {\r\n    var managers;\r\n    (function (managers) {\r\n        var InputManager = (function () {\r\n            function InputManager() {\r\n                InputManager._bindings = new celestials.Dictionary();\r\n            }\r\n            InputManager.addBinding = function (key, binding) {\r\n                if (InputManager._bindings.containsKey(key)) {\r\n                    console.log(\"Cannot build binding.  Key already has binding - \" + key + \".  Try removing it if you need to.\");\r\n                    return;\r\n                }\r\n                InputManager._bindings.add(key, binding);\r\n            };\r\n            InputManager.removeBinding = function (key) {\r\n                if (!InputManager._bindings.containsKey(key))\r\n                    return;\r\n                var binding = InputManager._bindings.getValue(key);\r\n                binding.kill();\r\n                InputManager._bindings.remove(key);\r\n            };\r\n            InputManager.updateBinding = function (key, binding) {\r\n                if (InputManager._bindings.containsKey(key))\r\n                    InputManager._bindings.setValue(key, binding);\r\n            };\r\n            InputManager.update = function () {\r\n                for (var _i = 0, _a = this._bindings.List; _i < _a.length; _i++) {\r\n                    var binding = _a[_i];\r\n                    binding.update();\r\n                }\r\n            };\r\n            InputManager.prototype._onMouseDown = function (e) {\r\n                console.log(\"CLICKED GLOBAL: \");\r\n                console.log(e.target);\r\n            };\r\n            Object.defineProperty(InputManager, \"Bindings\", {\r\n                get: function () { return InputManager._bindings; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return InputManager;\r\n        }());\r\n        managers.InputManager = InputManager;\r\n    })(managers = celestials.managers || (celestials.managers = {}));\r\n})(celestials || (celestials = {}));\r\n(function (celestials) {\r\n    var KeyBinding = (function () {\r\n        function KeyBinding(callback, state) {\r\n            var key = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                key[_i - 2] = arguments[_i];\r\n            }\r\n            this._callback = callback;\r\n            this._state = state;\r\n            this._keys = key;\r\n            this._keysPressed = Array();\r\n            for (var i = 0; i < this._keys.length; i++)\r\n                this._keysPressed[i] = false;\r\n            this._kDown = this._onKeyDown.bind(this);\r\n            this._kUp = this._onKeyUp.bind(this);\r\n            switch (this._state) {\r\n                case KeyBinding.State.Pressed:\r\n                case KeyBinding.State.Up:\r\n                case KeyBinding.State.Down:\r\n                    celestials.App.Window.addEventListener(\"keyup\", this._kUp);\r\n                    celestials.App.Window.addEventListener(\"keydown\", this._kDown);\r\n                    break;\r\n                default:\r\n                    console.log(\"Please use the Keybinding.State states to set a state to listen to.\");\r\n            }\r\n        }\r\n        Object.defineProperty(KeyBinding, \"State\", {\r\n            get: function () { return Object.freeze({ \"Down\": 0, \"Up\": 1, \"Pressed\": 2 }); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        KeyBinding.prototype.kill = function () {\r\n            celestials.App.Window.removeEventListener(\"keydown\", this._kDown);\r\n            celestials.App.Window.removeEventListener(\"keyup\", this._kUp);\r\n        };\r\n        KeyBinding.prototype.call = function () {\r\n            if (this._callback != null)\r\n                this._callback();\r\n        };\r\n        KeyBinding.prototype.checkBinding = function () {\r\n            for (var i = 0; i < this._keys.length; i++)\r\n                if (this._keysPressed[i] == false)\r\n                    return false;\r\n            this.call();\r\n            return true;\r\n        };\r\n        KeyBinding.prototype.update = function () {\r\n            if (this._state == KeyBinding.State.Pressed)\r\n                this.checkBinding();\r\n        };\r\n        KeyBinding.prototype._onKeyDown = function (e) {\r\n            var index = this._keys.indexOf(e.keyCode);\r\n            if (index != -1) {\r\n                if (this._keysPressed[index])\r\n                    return;\r\n                this._keysPressed[index] = true;\r\n                if (this._state == KeyBinding.State.Down)\r\n                    this.checkBinding();\r\n            }\r\n        };\r\n        KeyBinding.prototype._onKeyUp = function (e) {\r\n            var index = this._keys.indexOf(e.keyCode);\r\n            if (index != -1) {\r\n                if (this._state == KeyBinding.State.Up)\r\n                    this.checkBinding();\r\n                this._keysPressed[index] = false;\r\n            }\r\n        };\r\n        Object.defineProperty(KeyBinding.prototype, \"Callback\", {\r\n            get: function () { return this._callback; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return KeyBinding;\r\n    }());\r\n    celestials.KeyBinding = KeyBinding;\r\n    var Key = (function () {\r\n        function Key() {\r\n        }\r\n        Object.defineProperty(Key, \"Code\", {\r\n            get: function () {\r\n                return Object.freeze({\r\n                    \"backspace\": 8,\r\n                    \"tab\": 9,\r\n                    \"enter\": 13,\r\n                    \"shift\": 16,\r\n                    \"ctrl\": 17,\r\n                    \"alt\": 18,\r\n                    \"pause/break\": 19,\r\n                    \"caps lock\": 20,\r\n                    \"escape\": 27,\r\n                    \"page up\": 33,\r\n                    \"page down\": 34,\r\n                    \"end\": 35,\r\n                    \"home\": 36,\r\n                    \"left arrow\": 37,\r\n                    \"up arrow\": 38,\r\n                    \"right arrow\": 39,\r\n                    \"down arrow\": 40,\r\n                    \"insert\": 45,\r\n                    \"delete\": 46,\r\n                    \"0\": 48,\r\n                    \"1\": 49,\r\n                    \"2\": 50,\r\n                    \"3\": 51,\r\n                    \"4\": 52,\r\n                    \"5\": 53,\r\n                    \"6\": 54,\r\n                    \"7\": 55,\r\n                    \"8\": 56,\r\n                    \"9\": 57,\r\n                    \"a\": 65,\r\n                    \"b\": 66,\r\n                    \"c\": 67,\r\n                    \"d\": 68,\r\n                    \"e\": 69,\r\n                    \"f\": 70,\r\n                    \"g\": 71,\r\n                    \"h\": 72,\r\n                    \"i\": 73,\r\n                    \"j\": 74,\r\n                    \"k\": 75,\r\n                    \"l\": 76,\r\n                    \"m\": 77,\r\n                    \"n\": 78,\r\n                    \"o\": 79,\r\n                    \"p\": 80,\r\n                    \"q\": 81,\r\n                    \"r\": 82,\r\n                    \"s\": 83,\r\n                    \"t\": 84,\r\n                    \"u\": 85,\r\n                    \"v\": 86,\r\n                    \"w\": 87,\r\n                    \"x\": 88,\r\n                    \"y\": 89,\r\n                    \"z\": 90,\r\n                    \"left window key\": 91,\r\n                    \"right window key\": 92,\r\n                    \"select key\": 93,\r\n                    \"numpad 0\": 96,\r\n                    \"numpad 1\": 97,\r\n                    \"numpad 2\": 98,\r\n                    \"numpad 3\": 99,\r\n                    \"numpad 4\": 100,\r\n                    \"numpad 5\": 101,\r\n                    \"numpad 6\": 102,\r\n                    \"numpad 7\": 103,\r\n                    \"numpad 8 9\": 104,\r\n                    \"numpad\": 105,\r\n                    \"multiply\": 106,\r\n                    \"add\": 107,\r\n                    \"subtract\": 109,\r\n                    \"decimal point\": 110,\r\n                    \"divide\": 111,\r\n                    \"f1\": 112,\r\n                    \"f2\": 113,\r\n                    \"f3\": 114,\r\n                    \"f4\": 115,\r\n                    \"f5\": 116,\r\n                    \"f6\": 117,\r\n                    \"f7\": 118,\r\n                    \"f8\": 119,\r\n                    \"f9\": 120,\r\n                    \"f10\": 121,\r\n                    \"f11\": 122,\r\n                    \"f12\": 123,\r\n                    \"num lock\": 144,\r\n                    \"scroll lock\": 145,\r\n                    \"semi-colon\": 186,\r\n                    \"equal sign\": 187,\r\n                    \"comma\": 188,\r\n                    \"dash\": 189,\r\n                    \"period\": 190,\r\n                    \"forward slash\": 191,\r\n                    \"grave accent\": 192,\r\n                    \"open bracket\": 219,\r\n                    \"back slash\": 220,\r\n                    \"close braket\": 221,\r\n                    \"single quote\": 222\r\n                });\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ;\r\n        return Key;\r\n    }());\r\n    celestials.Key = Key;\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var systems;\r\n    (function (systems) {\r\n        var InputManager = celestials.managers.InputManager;\r\n        var Controls = (function () {\r\n            function Controls() {\r\n                Controls._instance = this;\r\n                this._openMenuKey = [celestials.Key.Code.w];\r\n                this._closeMenuKey = [celestials.Key.Code.q];\r\n                InputManager.addBinding(\"open menu\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._openMenu.bind(this), celestials.KeyBinding.State.Down].concat(this._openMenuKey)))());\r\n                InputManager.addBinding(\"close menu\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._closeMenu.bind(this), celestials.KeyBinding.State.Down].concat(this._closeMenuKey)))());\r\n            }\r\n            Controls.prototype._openMenu = function () {\r\n                console.log(\"Open menu!\");\r\n            };\r\n            Controls.prototype._closeMenu = function () {\r\n                console.log(\"Close menu!\");\r\n            };\r\n            return Controls;\r\n        }());\r\n        systems.Controls = Controls;\r\n    })(systems = celestials.systems || (celestials.systems = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var entities;\r\n    (function (entities) {\r\n        var Entity = (function () {\r\n            function Entity(name, node, data) {\r\n                if (data === void 0) { data = null; }\r\n                this._name = name;\r\n                this._node = node.cloneNode(true);\r\n                this._node.style.position = \"absolute\";\r\n                this._node.classList.remove(\"template\");\r\n                this._position = {\r\n                    x: 0,\r\n                    y: 0\r\n                };\r\n                this._registrationPoint = {\r\n                    x: 0.5,\r\n                    y: 1\r\n                };\r\n                this._direction = {\r\n                    x: 1,\r\n                    y: 1\r\n                };\r\n                this._data = data;\r\n                this._imagesLookup = new celestials.Dictionary();\r\n                this._isLoaded = false;\r\n                this._callbacksRegistry = new celestials.Dictionary();\r\n                if (this._data != null) {\r\n                    if (this._data.position != null)\r\n                        this._position = this._data.position;\r\n                    if (this._data.registrationPoint != null)\r\n                        this._registrationPoint = this._data.registrationPoint;\r\n                    if (this._data.direction != null)\r\n                        this._direction = this._data.direction;\r\n                }\r\n            }\r\n            Entity.prototype.addImage = function (key, src) {\r\n                if (this._imagesLookup.containsKey(key))\r\n                    return false;\r\n                this._imagesLookup.add(key, src);\r\n                return true;\r\n            };\r\n            Entity.prototype.getImage = function (key) {\r\n                if (this._imagesLookup.containsKey(key))\r\n                    return this._imagesLookup.getValue(key);\r\n            };\r\n            Entity.prototype.setName = function (name) {\r\n                this._name = name;\r\n            };\r\n            Entity.prototype.flipX = function () {\r\n                this._direction.x *= -1;\r\n                this.setDirectionX(this._direction.x);\r\n            };\r\n            Entity.prototype.setDirectionX = function (value) {\r\n                console.log(\"DIRECTION CHANGE: \" + value);\r\n                this._direction.x = value;\r\n                var deg = this._direction.x == 1 ? 0 : 180;\r\n                this._node.style.transform = \"rotateY(\" + deg + \"deg)\";\r\n            };\r\n            Entity.prototype.callListeners = function () {\r\n                for (var _i = 0, _a = this._callbacksRegistry.List; _i < _a.length; _i++) {\r\n                    var html = _a[_i];\r\n                    for (var _b = 0, html_1 = html; _b < html_1.length; _b++) {\r\n                        var func = html_1[_b];\r\n                        func();\r\n                    }\r\n                }\r\n            };\r\n            Entity.prototype.showRegistrationPoint = function (show) {\r\n                var regPointDiv = this._node.querySelector(\".coord\");\r\n                if (regPointDiv == null)\r\n                    return;\r\n                if (show)\r\n                    regPointDiv.classList.remove(\"hide\");\r\n                else\r\n                    regPointDiv.classList.add(\"hide\");\r\n            };\r\n            Entity.prototype.registerListener = function (node, func) {\r\n                if (this._callbacksRegistry.containsKey(node)) {\r\n                    this._callbacksRegistry.getValue(node).push(func);\r\n                }\r\n            };\r\n            Entity.prototype.removeListeners = function (node) {\r\n                if (this._callbacksRegistry.containsKey(node))\r\n                    this._callbacksRegistry.remove(node);\r\n            };\r\n            Entity.prototype.load = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        return [2, new Promise(function (resolve, reject) {\r\n                                try {\r\n                                    console.log(_this._position);\r\n                                    _this.X = _this._position.x;\r\n                                    _this.Y = _this._position.y;\r\n                                    resolve();\r\n                                }\r\n                                catch (e) {\r\n                                    reject();\r\n                                }\r\n                            })];\r\n                    });\r\n                });\r\n            };\r\n            Entity.prototype.unload = function () {\r\n            };\r\n            Object.defineProperty(Entity.prototype, \"Node\", {\r\n                get: function () { return this._node; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Name\", {\r\n                get: function () { return this._name; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Data\", {\r\n                get: function () { return this._data; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"X\", {\r\n                get: function () { return this._position.x; },\r\n                set: function (value) {\r\n                    this._position.x = value;\r\n                    this._node.style.left = this._position.x + \"px\";\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Y\", {\r\n                get: function () { return this._position.y; },\r\n                set: function (value) {\r\n                    this._position.y = value;\r\n                    this._node.style.top = this._position.y + \"px\";\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Direction\", {\r\n                get: function () { return this._direction; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"RegistrationPoint\", {\r\n                get: function () { return this._registrationPoint; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"RegistrationOffset\", {\r\n                get: function () {\r\n                    return {\r\n                        x: this.Width * this._registrationPoint.x,\r\n                        y: this.Height - (this.Height * this._registrationPoint.y)\r\n                    };\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Width\", {\r\n                get: function () {\r\n                    return this._width;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Height\", {\r\n                get: function () {\r\n                    return this._height;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"MainImage\", {\r\n                get: function () { return this._mainImage; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"IsLoaded\", {\r\n                get: function () {\r\n                    return this._isLoaded;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Entity.prototype, \"Bounds\", {\r\n                get: function () {\r\n                    return new celestials.Rect(this._position.x - this.RegistrationOffset.x, this._position.y - (this.Height - this.RegistrationOffset.y), this.Width, this.Height);\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Entity;\r\n        }());\r\n        entities.Entity = Entity;\r\n    })(entities = celestials.entities || (celestials.entities = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var Menu = (function () {\r\n            function Menu(node) {\r\n                this._node = node;\r\n                this._isShowing = false;\r\n                this._isDisabled = false;\r\n            }\r\n            Menu.prototype.show = function () {\r\n                this._node.classList.remove(\"hide\");\r\n                this._isShowing = true;\r\n            };\r\n            Menu.prototype.hide = function () {\r\n                this._node.classList.add(\"hide\");\r\n                this._isShowing = false;\r\n            };\r\n            Menu.prototype.remove = function () {\r\n                this._node.remove();\r\n                this._isShowing = false;\r\n            };\r\n            Menu.prototype.disable = function () {\r\n                this._isDisabled = true;\r\n            };\r\n            Menu.prototype.enable = function () {\r\n                this._isDisabled = false;\r\n            };\r\n            Object.defineProperty(Menu.prototype, \"Node\", {\r\n                get: function () { return this._node; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Menu.prototype, \"IsDisabled\", {\r\n                get: function () { return this._isDisabled; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Menu;\r\n        }());\r\n        ui.Menu = Menu;\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var OverlayMenu = (function (_super) {\r\n                __extends(OverlayMenu, _super);\r\n                function OverlayMenu(node, targetBounds) {\r\n                    var _this = _super.call(this, node) || this;\r\n                    _this._position = {\r\n                        x: 0,\r\n                        y: 0\r\n                    };\r\n                    _this._targetBounds = targetBounds;\r\n                    _this.show();\r\n                    return _this;\r\n                }\r\n                OverlayMenu.prototype.changeTargetBounds = function (bounds) {\r\n                    this._targetBounds = bounds;\r\n                };\r\n                OverlayMenu.prototype._keepInBounds = function () {\r\n                    var screenBounds = celestials.App.Bounds;\r\n                    var menuBounds = this.Bounds;\r\n                    var hoverLeft = menuBounds.Center.x > screenBounds.Center.x;\r\n                    var hoverUp = menuBounds.Center.y > screenBounds.Center.y;\r\n                    if (hoverLeft)\r\n                        this.X -= menuBounds.Width - this._targetBounds.Width * 0.1;\r\n                    else\r\n                        this.X += this._targetBounds.Width + this._targetBounds.Width * 0.1;\r\n                    if (hoverUp)\r\n                        this.Y -= menuBounds.Height - this._targetBounds.Height * 0.1;\r\n                    else\r\n                        this.Y += this._targetBounds.Height + this._targetBounds.Height * 0.1;\r\n                };\r\n                OverlayMenu.prototype.update = function () {\r\n                    if (this._targetBounds == null)\r\n                        return;\r\n                    this.X = this._targetBounds.Left;\r\n                    this.Y = this._targetBounds.Top;\r\n                    this._keepInBounds();\r\n                };\r\n                Object.defineProperty(OverlayMenu.prototype, \"Bounds\", {\r\n                    get: function () {\r\n                        return new celestials.Rect(this._position.x, this._position.y, this._node.getBoundingClientRect().width, this._node.getBoundingClientRect().height);\r\n                    },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(OverlayMenu.prototype, \"X\", {\r\n                    get: function () { return this._position.x; },\r\n                    set: function (value) {\r\n                        this._position.x = value;\r\n                        this._node.style.left = this._position.x + \"px\";\r\n                    },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(OverlayMenu.prototype, \"Y\", {\r\n                    get: function () { return this._position.y; },\r\n                    set: function (value) {\r\n                        this._position.y = value;\r\n                        this._node.style.top = this._position.y + \"px\";\r\n                    },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return OverlayMenu;\r\n            }(ui.Menu));\r\n            menus.OverlayMenu = OverlayMenu;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CelestialOverlay = (function (_super) {\r\n                __extends(CelestialOverlay, _super);\r\n                function CelestialOverlay(celestial, node, nameNode, sequenceNode) {\r\n                    var _this = _super.call(this, node || document.querySelector(\".overlay-menu.celestial\").cloneNode(true), celestial.Bounds) || this;\r\n                    _this._celestial = celestial;\r\n                    _this._nameNode = nameNode || _this._node.querySelector(\".name\");\r\n                    _this._sequenceNode = sequenceNode || _this._node.querySelector(\".sequence\");\r\n                    return _this;\r\n                }\r\n                CelestialOverlay.prototype.changeName = function (name) {\r\n                    this._nameNode.innerHTML = name;\r\n                };\r\n                CelestialOverlay.prototype.changeSequence = function (sequence) {\r\n                    this._sequenceNode.innerHTML = sequence;\r\n                };\r\n                CelestialOverlay.prototype.update = function () {\r\n                    this.changeTargetBounds(this._celestial.Bounds);\r\n                    _super.prototype.update.call(this);\r\n                };\r\n                return CelestialOverlay;\r\n            }(menus.OverlayMenu));\r\n            menus.CelestialOverlay = CelestialOverlay;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var entities;\r\n    (function (entities) {\r\n        var Celestial = (function (_super) {\r\n            __extends(Celestial, _super);\r\n            function Celestial(node, container, json) {\r\n                var _this = _super.call(this, json.name, node, json) || this;\r\n                _this._container = container;\r\n                _this._mainImage = _this._node.querySelector(\".main-image\");\r\n                _this._paused = false;\r\n                _this._isControlled = false;\r\n                _this._size = 0;\r\n                _this._spawnTick = 0;\r\n                _this._spawnOdds = 0;\r\n                _this._isSpawning = false;\r\n                _this._descendants = new Array();\r\n                _this._interactingWith = null;\r\n                _this._interactBurnout = 0;\r\n                _this._dateSpawned = new Date();\r\n                _this._spawnedBy = null;\r\n                _this._node.dataset.name = _this.Name;\r\n                console.log(\"Created: \" + _this.Name);\r\n                _this._eventsRegistry = new celestials.Dictionary();\r\n                _this._eventsRegistry.add(\"sequenceComplete\", _this._onSequenceComplete.bind(_this));\r\n                _this._eventsRegistry.add(\"stateChange\", _this._onStateChange.bind(_this));\r\n                _this._eventsRegistry.add(\"stateComplete\", _this._onStateComplete.bind(_this));\r\n                _this._eventsRegistry.add(\"wallHit\", _this._onWallHit.bind(_this));\r\n                _this._eventsRegistry.add(\"rightClick\", _this._onRightClicked.bind(_this));\r\n                return _this;\r\n            }\r\n            Celestial.prototype.draw = function (src) {\r\n                var _this = this;\r\n                if (src == this._mainImage.src)\r\n                    return new Promise(function (resolve, reject) { resolve(this._mainImage); });\r\n                return new Promise(function (resolve, reject) {\r\n                    var img = new Image();\r\n                    img.onload = function () {\r\n                        _this._mainImage.src = img.src;\r\n                        _this._width = img.naturalWidth * _this._scale;\r\n                        _this._height = img.naturalHeight * _this._scale;\r\n                        _this._mainImage.style.width = _this._width + \"px\";\r\n                        _this._mainImage.style.height = _this._height + \"px\";\r\n                        var x = \"-\" + _this.RegistrationOffset.x + \"px\";\r\n                        var y = \"-\" + _this.RegistrationOffset.y + \"px\";\r\n                        _this._mainImage.style.left = x;\r\n                        _this._mainImage.style.bottom = y;\r\n                        resolve(_this._mainImage);\r\n                    };\r\n                    img.onerror = function () { return reject(new Error(\"Image could not be loaded!\")); };\r\n                    img.src = src;\r\n                });\r\n            };\r\n            Celestial.prototype.drawCurrentFrame = function () {\r\n                if (this.getImage(this._sequencer.CurrentFrame.name) == this._mainImage.src)\r\n                    return new Promise(function (resolve, reject) { resolve(this._mainImage); });\r\n                return this.draw(this.getImage(this._sequencer.CurrentFrame.name));\r\n            };\r\n            Celestial.prototype.pause = function () {\r\n                this._paused = true;\r\n            };\r\n            Celestial.prototype.unpause = function () {\r\n                this._paused = false;\r\n            };\r\n            Celestial.prototype.remove = function () {\r\n                this.unload();\r\n                this._node.remove();\r\n                this._overlayMenu.remove();\r\n            };\r\n            Celestial.prototype.setName = function (name) {\r\n                _super.prototype.setName.call(this, name);\r\n                celestials.managers.CelestialsManager.callChangeCelestial(this);\r\n            };\r\n            Celestial.prototype.setSpawnParent = function (celestial) {\r\n                this._spawnedBy = celestial;\r\n            };\r\n            Celestial.prototype.setZIndex = function (index) {\r\n                this.setZIndexTemp(index);\r\n                this.Data.zIndex = index;\r\n            };\r\n            Celestial.prototype.setZIndexTemp = function (index) {\r\n                this._node.style.zIndex = \"\" + index;\r\n            };\r\n            Celestial.prototype.resetZIndex = function () {\r\n                this.setZIndexTemp(this.Data.zIndex);\r\n            };\r\n            Celestial.prototype.getIcon = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var data;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        if (this._imagesLookup.containsKey(\"icon\")) {\r\n                            return [2, new Promise(function (resolve, reject) { return resolve(_this._imagesLookup.getValue(\"icon\")); })];\r\n                        }\r\n                        data = this.Data;\r\n                        return [2, new Promise(function (resolve, reject) {\r\n                                var iconSrc = data.icon;\r\n                                if (iconSrc == null) {\r\n                                    if (data.images != null)\r\n                                        iconSrc = data.images[0].path;\r\n                                    else if (data.spritesheets != null)\r\n                                        iconSrc = data.spritesheets[0].path;\r\n                                }\r\n                                if (iconSrc != null) {\r\n                                    var img_1 = document.createElement(\"img\");\r\n                                    img_1.onload = function () {\r\n                                        console.log(\"loaded image!\");\r\n                                        if (!_this.addImage(\"icon\", img_1.src))\r\n                                            throw new Error(\"An image already exists belonging to \" + _this.Name + \" - icon.  Please choose a unique name.\");\r\n                                        resolve(img_1.src);\r\n                                    };\r\n                                    img_1.src = data.path + iconSrc;\r\n                                }\r\n                            })];\r\n                    });\r\n                });\r\n            };\r\n            Celestial.prototype.takeControl = function () {\r\n                this._isControlled = true;\r\n            };\r\n            Celestial.prototype.releaseControl = function () {\r\n                this._isControlled = false;\r\n            };\r\n            Celestial.prototype.trySpawn = function () {\r\n                this._spawnTick = 0;\r\n                if (this.Data.spawnChance == null)\r\n                    return;\r\n                console.log(this.Data.spawnChance);\r\n                console.log(\"LISTEN FOR SPAWNING!!!!!!!!\");\r\n                this._spawnOdds++;\r\n                var chance = celestials.randomRange(0, 100);\r\n                var spawnChance = this.Data.spawnChance;\r\n                var result = Math.abs(chance - this._spawnOdds);\r\n                console.log(\"SPAWN CHANCE: \", spawnChance, \" ODDS: \", this._spawnOdds, \" CHANCE: \", chance, \"COMB: \", result);\r\n                if (result < spawnChance) {\r\n                    console.log(\"SPAWNING FRIEND\");\r\n                    this.spawn();\r\n                }\r\n            };\r\n            Celestial.prototype.spawn = function () {\r\n                this._spawnOdds = 0;\r\n                this._isSpawning = true;\r\n                if (!this._logic.startState(celestials.engines.CelestialSequencer.STATE.Spawn))\r\n                    this.endSpawn();\r\n            };\r\n            Celestial.prototype.endSpawn = function (spawnChance) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var chance, lookup, rare, _i, _a, lin, odds, spawn;\r\n                    return __generator(this, function (_b) {\r\n                        switch (_b.label) {\r\n                            case 0:\r\n                                this._isSpawning = false;\r\n                                spawnChance = spawnChance || 50;\r\n                                console.log(\"MIGHT SPAWN\");\r\n                                chance = celestials.randomRange(0, 100);\r\n                                console.log(\"CHANCE: \", chance, \"SPAWN CHANCE: \", spawnChance);\r\n                                if (!(spawnChance > chance)) return [3, 2];\r\n                                console.log(\"WANT TO SPAWN!\");\r\n                                lookup = this.Lookup;\r\n                                rare = false;\r\n                                if (this.Data.spawnLineage != null) {\r\n                                    for (_i = 0, _a = this.Data.spawnLineage; _i < _a.length; _i++) {\r\n                                        lin = _a[_i];\r\n                                        odds = celestials.randomRange(0, 100);\r\n                                        if (lin.chance >= odds) {\r\n                                            if (celestials.managers.CelestialsManager.getTemplateByLookup(lin.lookup) != null) {\r\n                                                lookup = lin.lookup;\r\n                                                rare = lin.rare || false;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                console.log(\"MAX: \" + this.Data.maxDescendants + \", CURRENT: \" + this._descendants.length);\r\n                                if (this.Data.maxDescendants != null) {\r\n                                    if (this._descendants.length >= this.Data.maxDescendants && !rare) {\r\n                                        console.log(this.Name + \" has too many children!  Cannot spawn any more!\");\r\n                                        return [2];\r\n                                    }\r\n                                }\r\n                                return [4, celestials.managers.CelestialsManager.addCelestialByLookupAtPosition(lookup, this.X, this.Y)];\r\n                            case 1:\r\n                                spawn = _b.sent();\r\n                                if (spawn != null) {\r\n                                    spawn.setSpawnParent(this);\r\n                                    spawn.Physics.addForceX(celestials.randomRange(-100, 100));\r\n                                    spawn.Physics.addForceY(celestials.randomRange(-100, 100));\r\n                                    this._descendants.push(spawn);\r\n                                }\r\n                                _b.label = 2;\r\n                            case 2: return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            Celestial.prototype.askToInteractWith = function (celestial) {\r\n                console.log(\"I WANT TO TALK TO : \" + celestial.Name);\r\n                if (celestial.InteractingWith != null)\r\n                    return false;\r\n                if (celestial.InteractingWith == this)\r\n                    return false;\r\n                console.log(\"I AM LISTENING: \" + this.Name);\r\n                this._interactingWith = celestial;\r\n                if (this.Sequencer.CurrentState == celestials.engines.CelestialSequencer.STATE.Hold)\r\n                    return false;\r\n                if (celestial.Sequencer.CurrentState == celestials.engines.CelestialSequencer.STATE.Hold)\r\n                    return false;\r\n                if (this._interactBurnout > 0 && celestials.randomRange(0, 1) < 0.9)\r\n                    return false;\r\n                if (this._moods.UsesMood) {\r\n                    var chance = celestials.randomRange(0, 100);\r\n                    if (chance < this._moods.getMoodByName(celestials.engines.Moods.MOOD.Social).value)\r\n                        return false;\r\n                    else if (celestials.randomRange(0, 1) > 0.2)\r\n                        return false;\r\n                }\r\n                if (this._relationships != null) {\r\n                    var relationship = this._relationships.findRelationshipByCelestial(celestial);\r\n                    if (relationship != null) {\r\n                        var chance = celestials.randomRange(0, 100);\r\n                        if (chance > relationship.value)\r\n                            if (celestials.randomRange(0, 1) > 0.5)\r\n                                return false;\r\n                    }\r\n                }\r\n                var valueOfInteraction = this._relationships.getInteractValueWith(celestial);\r\n                celestial.Relationships.setInteraction(this, valueOfInteraction);\r\n                this.Relationships.setInteraction(celestial, valueOfInteraction);\r\n                this._moods.boost(celestials.engines.Moods.MOOD.Social, (valueOfInteraction * Math.max(1, this._relationships.Attachment)), true);\r\n                celestial.Moods.boost(celestials.engines.Moods.MOOD.Social, (valueOfInteraction * Math.max(1, this._relationships.Attachment)), true);\r\n                this.startInteraction(celestial);\r\n                celestial.startInteraction(this);\r\n                if (this.X < celestial.X) {\r\n                    this.setDirectionX(1);\r\n                    celestial.setDirectionX(-1);\r\n                }\r\n                else {\r\n                    this.setDirectionX(-1);\r\n                    celestial.setDirectionX(1);\r\n                }\r\n                return true;\r\n            };\r\n            Celestial.prototype.startInteraction = function (celestial) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var relationship, relationship;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                this._interactingWith = celestial;\r\n                                console.log(\"I AM STARTING AN INTERACTION WITH: \" + celestial.Name);\r\n                                this._interactBurnout = ((100 - this.Relationships.Attachment) * celestials.randomRange(0.7, 1.3)) * 10;\r\n                                console.log(\"BURNOUT: \" + this._interactBurnout);\r\n                                return [4, this._logic.startState(celestials.engines.CelestialSequencer.STATE.Interact)];\r\n                            case 1:\r\n                                if (_a.sent()) {\r\n                                    if (this._relationships != null) {\r\n                                        relationship = this._relationships.findRelationshipByCelestial(celestial);\r\n                                        if (relationship != null)\r\n                                            relationship.lastAction = celestial.Sequencer.CurrentSequence.name + \" with \" + celestial.Name;\r\n                                    }\r\n                                    if (celestial.Relationships != null) {\r\n                                        relationship = celestial.Relationships.findRelationshipByCelestial(this);\r\n                                        if (relationship != null)\r\n                                            relationship.lastAction = this.Sequencer.CurrentSequence.name + \" with \" + this.Name;\r\n                                    }\r\n                                }\r\n                                else\r\n                                    this._logic.startState(celestials.engines.CelestialSequencer.STATE.Idle);\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            Celestial.prototype.completeInteraction = function () {\r\n                if (this._interactingWith.InteractingWith != null) {\r\n                    this._interactingWith.InteractingWith.Logic.nextState();\r\n                }\r\n                this._interactingWith = null;\r\n            };\r\n            Celestial.prototype.removeInteractionCelestial = function () {\r\n                this._interactingWith = null;\r\n            };\r\n            Celestial.prototype.clone = function () {\r\n                var clone = new Celestial(celestials.managers.CelestialsManager.Template, this._container, JSON.parse(JSON.stringify(this._data)));\r\n                return clone;\r\n            };\r\n            Celestial.prototype.load = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var data_1, _a, path_1, images, spritesheets, name_1, lookup, promises, _loop_1, _i, images_1, imgData, _loop_2, _b, spritesheets_1, spritesheet, hueVariation, e_1;\r\n                                    var _this = this;\r\n                                    return __generator(this, function (_c) {\r\n                                        switch (_c.label) {\r\n                                            case 0: return [4, _super.prototype.load.call(this)];\r\n                                            case 1:\r\n                                                _c.sent();\r\n                                                _c.label = 2;\r\n                                            case 2:\r\n                                                _c.trys.push([2, 9, , 10]);\r\n                                                data_1 = this._data;\r\n                                                this._sequencer = new celestials.engines.CelestialSequencer(this);\r\n                                                this._physics = new celestials.engines.Physics(this);\r\n                                                this._moods = new celestials.engines.Moods(this);\r\n                                                this._relationships = new celestials.engines.Relationships(this);\r\n                                                this._logic = new celestials.logic.CelestialLogic(this, this.Data.logic || null);\r\n                                                this._scale = celestials.randomRange(data_1.scale.min, data_1.scale.max);\r\n                                                this._variation = celestials.randomRange(0, data_1.variation || 0);\r\n                                                if (this.Data.presets != null) {\r\n                                                    this.setName(this.Data.presets[celestials.randomRangeInt(0, this.Data.presets.length - 1)]);\r\n                                                }\r\n                                                _a = this.Data, path_1 = _a.path, images = _a.images, spritesheets = _a.spritesheets, name_1 = _a.name, lookup = _a.lookup;\r\n                                                promises = new Array();\r\n                                                if (images != null) {\r\n                                                    _loop_1 = function (imgData) {\r\n                                                        promises.push(new Promise(function (res, rej) {\r\n                                                            try {\r\n                                                                var img_2 = document.createElement(\"img\");\r\n                                                                img_2.onload = function () {\r\n                                                                    _this.addImage(imgData.name, img_2.src);\r\n                                                                    res();\r\n                                                                };\r\n                                                                img_2.src = path_1 + imgData.path;\r\n                                                            }\r\n                                                            catch (e) {\r\n                                                                rej();\r\n                                                            }\r\n                                                        }));\r\n                                                    };\r\n                                                    for (_i = 0, images_1 = images; _i < images_1.length; _i++) {\r\n                                                        imgData = images_1[_i];\r\n                                                        _loop_1(imgData);\r\n                                                    }\r\n                                                }\r\n                                                if (spritesheets != null) {\r\n                                                    _loop_2 = function (spritesheet) {\r\n                                                        promises.push(new Promise(function (res, rej) {\r\n                                                            try {\r\n                                                                var img_3 = document.createElement(\"img\");\r\n                                                                img_3.onload = function () {\r\n                                                                    var _loop_3 = function (frame) {\r\n                                                                        celestials.cropImage(img_3, frame.x, frame.y, frame.w, frame.h, function (crop) {\r\n                                                                            if (!_this.addImage(frame.name, crop.src))\r\n                                                                                throw new Error(\"An image already exists belonging to \" + _this.Name + \" - \" + frame.name + \".  Please choose a unique name.\");\r\n                                                                            res();\r\n                                                                        });\r\n                                                                    };\r\n                                                                    for (var _i = 0, _a = spritesheet.frames; _i < _a.length; _i++) {\r\n                                                                        var frame = _a[_i];\r\n                                                                        _loop_3(frame);\r\n                                                                    }\r\n                                                                };\r\n                                                                img_3.src = data_1.path + spritesheet.path;\r\n                                                            }\r\n                                                            catch (e) {\r\n                                                                rej();\r\n                                                            }\r\n                                                        }));\r\n                                                    };\r\n                                                    for (_b = 0, spritesheets_1 = spritesheets; _b < spritesheets_1.length; _b++) {\r\n                                                        spritesheet = spritesheets_1[_b];\r\n                                                        _loop_2(spritesheet);\r\n                                                    }\r\n                                                }\r\n                                                return [4, Promise.all(promises)];\r\n                                            case 3:\r\n                                                _c.sent();\r\n                                                console.log(\"loaded all images!\");\r\n                                                if (lookup == null)\r\n                                                    throw new Error(\"Celestial has no lookup property!\");\r\n                                                if (name_1 == null)\r\n                                                    throw new Error(\"Celestial has no name property!\");\r\n                                                if (images == null && spritesheets == null)\r\n                                                    throw new Error(\"No images/spritesheets were supplied.\");\r\n                                                this._container.appendChild(this._node);\r\n                                                console.log(this._imagesLookup.FullList);\r\n                                                return [4, this._moods.load()];\r\n                                            case 4:\r\n                                                _c.sent();\r\n                                                return [4, this._logic.load()];\r\n                                            case 5:\r\n                                                _c.sent();\r\n                                                celestials.systems.Collision.addToCollisionSystem(this);\r\n                                                this._collisionObject = celestials.systems.Collision.getCollisionObject(this);\r\n                                                this._node.querySelector(\".graphics\").ondragstart = function () { return false; };\r\n                                                hueVariation = celestials.randomRange(-this.GlobalVariation * 10, this.GlobalVariation * 10);\r\n                                                this._mainImage.style.filter = \"hue-rotate(\" + hueVariation + \"deg)\";\r\n                                                if (!(this.Data.icon != null)) return [3, 7];\r\n                                                return [4, new Promise(function (res, rej) {\r\n                                                        var iconImg = document.createElement(\"img\");\r\n                                                        iconImg.onload = function () {\r\n                                                            _this._icon = iconImg;\r\n                                                            _this._icon.style.filter = _this._mainImage.style.filter;\r\n                                                            res();\r\n                                                        };\r\n                                                        iconImg.onerror = function () { rej(\"Could not load icon on : \" + _this.Name); };\r\n                                                        iconImg.src = data_1.path + _this.Data.icon;\r\n                                                    })];\r\n                                            case 6:\r\n                                                _c.sent();\r\n                                                return [3, 8];\r\n                                            case 7:\r\n                                                this._icon = this.MainImage.cloneNode(false);\r\n                                                _c.label = 8;\r\n                                            case 8:\r\n                                                this._overlayMenu = new celestials.ui.menus.CelestialOverlay(this);\r\n                                                this._node.parentNode.appendChild(this._overlayMenu.Node);\r\n                                                console.log(\"LOADED ALL OF : \" + this.Name);\r\n                                                this._size = (this.Height / celestials.App.Bounds.Height) * this._scale;\r\n                                                resolve();\r\n                                                this._isLoaded = true;\r\n                                                this._sequencer.addSequenceCompleteListener(this._eventsRegistry.getValue(\"sequenceComplete\"));\r\n                                                this._sequencer.addStateChangeListener(this._eventsRegistry.getValue(\"stateChange\"));\r\n                                                this._sequencer.addStateCompleteListener(this._eventsRegistry.getValue(\"stateComplete\"));\r\n                                                this._physics.addWallHitListener(this._eventsRegistry.getValue(\"wallHit\"));\r\n                                                celestials.managers.MouseManager.listenForDrag(this.MainImage, function (x, y) {\r\n                                                    celestials.managers.CelestialsManager.onGrab(_this, x, y);\r\n                                                    _this._logic.startState(celestials.engines.CelestialSequencer.STATE.Hold);\r\n                                                }, function (x, y) { return celestials.managers.CelestialsManager.onDrag(_this, x, y); }, function (x, y) {\r\n                                                    celestials.managers.CelestialsManager.onDrop(_this, x, y);\r\n                                                });\r\n                                                celestials.managers.MouseManager.listenForRightClick(this.MainImage, function () { return celestials.ui.menus.CelestialContext.show(_this); });\r\n                                                return [3, 10];\r\n                                            case 9:\r\n                                                e_1 = _c.sent();\r\n                                                reject(new Error(\"Could not load Celestial. \\n\" + e_1));\r\n                                                return [3, 10];\r\n                                            case 10: return [2];\r\n                                        }\r\n                                    });\r\n                                }); })];\r\n                            case 1: return [2, _a.sent()];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            Celestial.prototype.unload = function () {\r\n                this._sequencer.removeSequenceCompleteListener();\r\n                this._sequencer.removeStateChangeListener();\r\n                this._sequencer.removeStateCompleteListener();\r\n                this._physics.removeWallHitListener();\r\n                this._node.removeEventListener(\"click\", this._eventsRegistry.getValue(\"click\"));\r\n                this._node.removeEventListener(\"contextmenu\", this._eventsRegistry.getValue(\"rightClick\"));\r\n            };\r\n            Celestial.prototype.update = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var lastPos, collidedWith;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (this._paused)\r\n                                    return [2];\r\n                                this._spawnTick++;\r\n                                if (this._spawnTick > celestials.managers.CelestialsManager.SpawnRate) {\r\n                                    this.trySpawn();\r\n                                }\r\n                                lastPos = { x: this.X, y: this.Y };\r\n                                return [4, this._logic.update()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [4, this._sequencer.update()];\r\n                            case 2:\r\n                                _a.sent();\r\n                                return [4, this.drawCurrentFrame()];\r\n                            case 3:\r\n                                _a.sent();\r\n                                return [4, this._physics.update()];\r\n                            case 4:\r\n                                _a.sent();\r\n                                return [4, this._moods.update()];\r\n                            case 5:\r\n                                _a.sent();\r\n                                if (this._interactBurnout <= 0) {\r\n                                    if (lastPos.x != this.X || lastPos.y != this.Y) {\r\n                                        collidedWith = celestials.systems.Collision.checkCollision(this._collisionObject);\r\n                                        if (collidedWith != null) {\r\n                                            if (!this.askToInteractWith(collidedWith))\r\n                                                this._interactBurnout = celestials.randomRange(0.8, 1.2) * 200;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                this._interactBurnout--;\r\n                                if (this._interactBurnout < 0)\r\n                                    this._interactBurnout = 0;\r\n                                this._overlayMenu.update();\r\n                                this._overlayMenu.changeName(this.Name);\r\n                                this._overlayMenu.changeSequence(this._sequencer.CurrentSequence.name);\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            Celestial.prototype._onSequenceComplete = function () {\r\n                console.log(\"SEQUENCE COMPLETE\");\r\n                if (this._isSpawning)\r\n                    this.endSpawn(this._sequencer.CurrentSequence.spawnChance);\r\n                if (this._interactingWith != null) {\r\n                    this.completeInteraction();\r\n                }\r\n                this._logic.next();\r\n            };\r\n            Celestial.prototype._onStateChange = function () {\r\n                this._logic.handleStateChange();\r\n            };\r\n            Celestial.prototype._onStateComplete = function () {\r\n                this._logic.handleStateComplete();\r\n            };\r\n            Celestial.prototype._onWallHit = function (which) {\r\n                console.log(\"Hit wall \" + which);\r\n                this._logic.handleWallHit(which);\r\n            };\r\n            Celestial.prototype._onRightClicked = function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                celestials.ui.menus.CelestialContext.show(this);\r\n            };\r\n            Object.defineProperty(Celestial.prototype, \"Lookup\", {\r\n                get: function () { return this.Data.lookup; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Data\", {\r\n                get: function () { return this._data; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Sequencer\", {\r\n                get: function () { return this._sequencer; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Physics\", {\r\n                get: function () { return this._physics; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Moods\", {\r\n                get: function () { return this._moods; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Relationships\", {\r\n                get: function () { return this._relationships; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Logic\", {\r\n                get: function () { return this._logic; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Icon\", {\r\n                get: function () { return this._icon; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Paused\", {\r\n                get: function () { return this._paused; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"IsControlled\", {\r\n                get: function () { return this._isControlled; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"DateSpawned\", {\r\n                get: function () { return this._dateSpawned; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Scale\", {\r\n                get: function () { return this._scale; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Variation\", {\r\n                get: function () { return this._variation; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"GlobalVariation\", {\r\n                get: function () { return this.Data.variation || 0; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Size\", {\r\n                get: function () { return this._size * celestials.App.Bounds.Height; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Mass\", {\r\n                get: function () {\r\n                    return this._size * this._physics.Gravity;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Age\", {\r\n                get: function () {\r\n                    return (((new Date()).getTime() - this._dateSpawned.getTime()) / 1000 / 60 / 60);\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"FavouriteSequence\", {\r\n                get: function () {\r\n                    var sequence = null;\r\n                    var name = \"None\";\r\n                    for (var _i = 0, _a = Object.keys(celestials.engines.CelestialSequencer.STATE); _i < _a.length; _i++) {\r\n                        var key = _a[_i];\r\n                        var state = celestials.engines.CelestialSequencer.STATE[key];\r\n                        var seq = this._sequencer.getStateByName(state);\r\n                        if (seq != null) {\r\n                            if (sequence == null) {\r\n                                sequence = seq;\r\n                                name = key;\r\n                            }\r\n                            else if (seq.attentionSpan > sequence.attentionSpan) {\r\n                                var canBeFavourite = (seq.canBeFavourite == undefined) ? true : seq.canBeFavourite;\r\n                                if (!canBeFavourite)\r\n                                    continue;\r\n                                sequence = seq;\r\n                                name = key;\r\n                            }\r\n                        }\r\n                    }\r\n                    return name;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"AvailableSequences\", {\r\n                get: function () {\r\n                    var sequences = new Array();\r\n                    for (var _i = 0, _a = Object.keys(celestials.engines.CelestialSequencer.STATE); _i < _a.length; _i++) {\r\n                        var key = _a[_i];\r\n                        var state = celestials.engines.CelestialSequencer.STATE[key];\r\n                        var seq = this._sequencer.getStateByName(state);\r\n                        if (seq != null) {\r\n                            sequences.push(key);\r\n                        }\r\n                    }\r\n                    return sequences;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"SpawnedBy\", {\r\n                get: function () { return this._spawnedBy; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"Descendants\", {\r\n                get: function () { return this._descendants; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Celestial.prototype, \"InteractingWith\", {\r\n                get: function () { return this._interactingWith; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Celestial;\r\n        }(entities.Entity));\r\n        entities.Celestial = Celestial;\r\n    })(entities = celestials.entities || (celestials.entities = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var List = (function () {\r\n                function List(node, template, maxItems) {\r\n                    this._node = node;\r\n                    this._template = template;\r\n                    this._maxItems = maxItems || -1;\r\n                    this._index = -1;\r\n                    this._template.classList.add(\"hide\");\r\n                    this._items = new Array();\r\n                    this.clear();\r\n                }\r\n                List.prototype.createItem = function (itemNode, bubbleSelect) {\r\n                    if (bubbleSelect === void 0) { bubbleSelect = true; }\r\n                    var item = new Item(itemNode || this._template.cloneNode(true));\r\n                    this.setupItem(item, bubbleSelect);\r\n                    return item;\r\n                };\r\n                List.prototype.setupItem = function (item, bubbleSelect) {\r\n                    var _this = this;\r\n                    if (bubbleSelect === void 0) { bubbleSelect = true; }\r\n                    item.Node.classList.remove(\"template\", \"hide\");\r\n                    if (bubbleSelect) {\r\n                        item.Node.addEventListener(\"click\", function () { return item.select(); });\r\n                    }\r\n                    item.addSelectListener(function (selected) {\r\n                        console.log(\"LESITNING TO BUTTON\");\r\n                        var index = _this._items.indexOf(selected);\r\n                        if (index != _this._index)\r\n                            _this.deselectItem(_this._index);\r\n                        _this._index = index;\r\n                        if (_this._onSelectCallback != null)\r\n                            _this._onSelectCallback(_this._index, item);\r\n                    });\r\n                };\r\n                List.prototype.addItemToList = function (item) {\r\n                    item.Node.classList.remove(\"hide\");\r\n                    this._items.push(item);\r\n                    if (this._maxItems != -1)\r\n                        if (this._items.length > this._maxItems)\r\n                            this.removeItemAt(this._items.length - 1);\r\n                    this._node.appendChild(item.Node);\r\n                };\r\n                List.prototype.removeItemAt = function (index, destroy) {\r\n                    if (destroy === void 0) { destroy = true; }\r\n                    var removedItem = this._items.splice(index, 1)[0];\r\n                    removedItem.Node.remove();\r\n                    if (destroy)\r\n                        removedItem = null;\r\n                };\r\n                List.prototype.removeItem = function (item, destroy) {\r\n                    if (destroy === void 0) { destroy = true; }\r\n                    var index = this._items.indexOf(item);\r\n                    if (index != -1)\r\n                        this.removeItemAt(index);\r\n                };\r\n                List.prototype.addItemAt = function (item, index) {\r\n                    if (index <= this._items.length - 1 && index >= 0) {\r\n                        this._node.insertBefore(item.Node, this._items[index].Node);\r\n                        if (this._items.indexOf(item) != -1)\r\n                            this._items.splice(this._items.indexOf(item), 1);\r\n                        this._items.splice(index, 0, item);\r\n                    }\r\n                    else {\r\n                        this.addItemToList(item);\r\n                    }\r\n                };\r\n                List.prototype.setItems = function (items) {\r\n                    this._items = items;\r\n                };\r\n                List.prototype.clear = function () {\r\n                    for (var i = this._items.length - 1; i >= 0; i--)\r\n                        this.removeItemAt(i);\r\n                    this._index = -1;\r\n                };\r\n                List.prototype.selectItem = function (index) {\r\n                    if (index < this._items.length) {\r\n                        this._index = index;\r\n                        this._items[index].select();\r\n                    }\r\n                };\r\n                List.prototype.deselectItem = function (index) {\r\n                    if (index < this._items.length && index != -1) {\r\n                        this._items[index].deselect();\r\n                    }\r\n                };\r\n                List.prototype.addSelectListener = function (callback) {\r\n                    this._onSelectCallback = callback;\r\n                };\r\n                List.prototype.removeSelectListener = function () {\r\n                    this._onSelectCallback = null;\r\n                };\r\n                Object.defineProperty(List.prototype, \"Items\", {\r\n                    get: function () { return this._items; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return List;\r\n            }());\r\n            components.List = List;\r\n            var Item = (function () {\r\n                function Item(node) {\r\n                    this._node = node;\r\n                }\r\n                Item.prototype.select = function () {\r\n                    this._node.classList.add(\"selected\");\r\n                    if (this._onSelectCallback != null)\r\n                        this._onSelectCallback(this);\r\n                };\r\n                Item.prototype.deselect = function () {\r\n                    this._node.classList.remove(\"selected\");\r\n                };\r\n                Item.prototype.wireSelector = function (element) {\r\n                    var _this = this;\r\n                    var node = element || this._node;\r\n                    node.addEventListener(\"mousedown\", function () {\r\n                        _this.select();\r\n                    });\r\n                };\r\n                Item.prototype.wireSelectEvent = function () {\r\n                    var _this = this;\r\n                    this._node.querySelector(\".btnDelete\").addEventListener(\"mousedown\", function () {\r\n                        _this.select();\r\n                    });\r\n                };\r\n                Item.prototype.addSelectListener = function (callback) {\r\n                    this._onSelectCallback = callback;\r\n                };\r\n                Item.prototype.removeSelectListener = function () {\r\n                    this._onSelectCallback = null;\r\n                };\r\n                Object.defineProperty(Item.prototype, \"Node\", {\r\n                    get: function () { return this._node; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return Item;\r\n            }());\r\n            components.Item = Item;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var systems;\r\n    (function (systems) {\r\n        var Notifications = (function () {\r\n            function Notifications() {\r\n            }\r\n            Object.defineProperty(Notifications, \"TYPE\", {\r\n                get: function () { return Object.freeze({ \"Normal\": \"\", \"Success\": \"success\", \"Fail\": \"fail\", \"Notify\": \"notify\" }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Notifications.addNotification = function (message, type, date, clickHandler) {\r\n                Notifications.Instance._notifications.push({\r\n                    message: message,\r\n                    type: type,\r\n                    date: date || new Date(),\r\n                    clickHandler: clickHandler\r\n                });\r\n                celestials.ui.menus.NotificationBar.addNotification(message, type, clickHandler);\r\n            };\r\n            Notifications.removeNotification = function (index) {\r\n                Notifications.Instance._notifications.splice(index, 1);\r\n            };\r\n            Object.defineProperty(Notifications, \"Instance\", {\r\n                get: function () {\r\n                    if (Notifications._instance == null) {\r\n                        Notifications._instance = new Notifications();\r\n                        Notifications._instance._notifications = new Array();\r\n                    }\r\n                    return Notifications._instance;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Notifications, \"Notifications\", {\r\n                get: function () { return Notifications.Instance._notifications; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Notifications;\r\n        }());\r\n        systems.Notifications = Notifications;\r\n    })(systems = celestials.systems || (celestials.systems = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var NotificationPanel = (function (_super) {\r\n                __extends(NotificationPanel, _super);\r\n                function NotificationPanel(node) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    NotificationPanel._instance = _this;\r\n                    _this._node.querySelector(\".ui.close\").addEventListener(\"click\", function () { return NotificationPanel._instance.hide(); });\r\n                    _this._itemsList = new ui.components.List(_this._node.querySelector(\".list\"), _this._node.querySelector(\".list .item.template\"));\r\n                    _this.hide();\r\n                    return _this;\r\n                }\r\n                NotificationPanel.show = function () {\r\n                    NotificationPanel._instance.show();\r\n                    NotificationPanel.update();\r\n                };\r\n                NotificationPanel.update = function () {\r\n                    var itemsList = NotificationPanel._instance._itemsList;\r\n                    itemsList.clear();\r\n                    var notifications = celestials.systems.Notifications.Notifications;\r\n                    for (var i = notifications.length - 1; i >= 0; i--) {\r\n                        var itemData = notifications[i];\r\n                        var item = itemsList.createItem();\r\n                        item.Node.classList.add(\"--\" + itemData.type);\r\n                        item.Node.querySelector(\".message\").innerHTML = itemData.message;\r\n                        if (itemData.clickHandler != null) {\r\n                            item.Node.style.cursor = 'pointer';\r\n                            item.addSelectListener(itemData.clickHandler);\r\n                        }\r\n                        var timeNode = item.Node.querySelector(\".time\");\r\n                        var dateOptions = { month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\r\n                        timeNode.innerHTML = itemData.date.toLocaleDateString('us-EN', dateOptions);\r\n                        itemsList.addItemToList(item);\r\n                    }\r\n                };\r\n                return NotificationPanel;\r\n            }(menus.OverlayMenu));\r\n            menus.NotificationPanel = NotificationPanel;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var NotificationBar = (function (_super) {\r\n                __extends(NotificationBar, _super);\r\n                function NotificationBar(node, nodeIdle, idleTime) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    NotificationBar._instance = _this;\r\n                    _this._node.querySelector(\".popout\").addEventListener(\"click\", function () {\r\n                        _this._clearIdle();\r\n                        _this._clearDuration();\r\n                        _this.hide();\r\n                        menus.NotificationPanel.show();\r\n                    });\r\n                    _this._itemsList = new ui.components.List(_this._node.querySelector(\".list\"), _this._node.querySelector(\".list .item.template\"), 5);\r\n                    console.log(\"IDLE\");\r\n                    console.log(nodeIdle);\r\n                    if (nodeIdle != null) {\r\n                        console.log(\"GRUE\");\r\n                        _this._idleTime = idleTime || NotificationBar.DEF_IDLE;\r\n                        nodeIdle.addEventListener(\"mouseenter\", _this._onIdleEnter.bind(_this));\r\n                        nodeIdle.addEventListener(\"mouseleave\", _this._onIdleExit.bind(_this));\r\n                    }\r\n                    _this._node.addEventListener(\"mouseenter\", function () { return _this._clearDuration(); });\r\n                    _this._node.addEventListener(\"mouseleave\", function () { return _this._startDurationTimer(NotificationBar.DEF_DURATION); });\r\n                    return _this;\r\n                }\r\n                Object.defineProperty(NotificationBar, \"DEF_IDLE\", {\r\n                    get: function () { return 1000; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(NotificationBar, \"DEF_DURATION\", {\r\n                    get: function () { return 3000; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                NotificationBar.show = function () {\r\n                    console.log(\"AM I DISABLED?\" + NotificationBar._instance._isDisabled);\r\n                    if (NotificationBar._instance._isDisabled)\r\n                        return;\r\n                    NotificationBar._instance.show();\r\n                };\r\n                NotificationBar.enable = function () {\r\n                    NotificationBar._instance.enable();\r\n                };\r\n                NotificationBar.disable = function () {\r\n                    NotificationBar._instance.disable();\r\n                    NotificationBar._instance.hide();\r\n                };\r\n                NotificationBar.addNotification = function (notification, type, clickCallback, duration) {\r\n                    var item = NotificationBar._instance._itemsList.createItem();\r\n                    item.Node.innerHTML = notification;\r\n                    item.Node.classList.add(\"show\");\r\n                    if (type != null && type != \"\")\r\n                        item.Node.classList.add(\"--\" + type);\r\n                    if (clickCallback != null) {\r\n                        item.Node.style.cursor = 'pointer';\r\n                        item.addSelectListener(clickCallback);\r\n                    }\r\n                    NotificationBar._instance._itemsList.addItemToList(item);\r\n                    NotificationBar.show();\r\n                    NotificationBar._instance._startDurationTimer(duration || notification.length * 0.1 * 1000);\r\n                    menus.NotificationPanel.update();\r\n                    setTimeout(function () { return item.Node.classList.remove(\"show\"); }, 2000);\r\n                };\r\n                NotificationBar.clearNotifications = function () {\r\n                    NotificationBar._instance._itemsList.clear();\r\n                };\r\n                NotificationBar.prototype._startDurationTimer = function (duration) {\r\n                    var _this = this;\r\n                    this._clearDuration();\r\n                    this._durationTimer = setTimeout(function () { return _this.hide(); }, duration);\r\n                };\r\n                NotificationBar.prototype._clearDuration = function () {\r\n                    if (this._durationTimer != null)\r\n                        celestials.App.Window.clearTimeout(this._durationTimer);\r\n                    this._durationTimer = null;\r\n                };\r\n                NotificationBar.prototype._clearIdle = function () {\r\n                    if (this._idleTimer != null)\r\n                        celestials.App.Window.clearTimeout(this._idleTimer);\r\n                    this._idleTimer = null;\r\n                };\r\n                NotificationBar.prototype._onIdleEnter = function () {\r\n                    if (this._idleTimer != null)\r\n                        return;\r\n                    this._idleTimer = setTimeout(function () { return NotificationBar.show(); }, this._idleTime);\r\n                    this._clearDuration();\r\n                };\r\n                NotificationBar.prototype._onIdleExit = function () {\r\n                    this._clearIdle();\r\n                };\r\n                Object.defineProperty(NotificationBar, \"Items\", {\r\n                    get: function () { return NotificationBar._instance._itemsList.Items; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return NotificationBar;\r\n            }(menus.OverlayMenu));\r\n            menus.NotificationBar = NotificationBar;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    function createImageFromFile(file, callback) {\r\n        var img = document.createElement(\"img\");\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            img.onload = function (ev) { return callback(img); };\r\n            img.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n    celestials.createImageFromFile = createImageFromFile;\r\n    function clamp(value, min, max) {\r\n        return (value < min) ? min : (value > max) ? max : value;\r\n    }\r\n    celestials.clamp = clamp;\r\n    function randomRange(min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n    celestials.randomRange = randomRange;\r\n    function randomRangeInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n    celestials.randomRangeInt = randomRangeInt;\r\n    function fetchJson(filename, callback) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, fetch(filename)\r\n                            .then(function (blob) { return blob.json(); })\r\n                            .then(function (json) { return callback(json); })\r\n                            .catch(function (e) { return console.log(\"Could not get file from \" + filename + \"\\n\" + e); })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    celestials.fetchJson = fetchJson;\r\n    function lerp(a, b, t) {\r\n        return (b - a) * t + a;\r\n    }\r\n    celestials.lerp = lerp;\r\n    function shuffleArray(array) {\r\n        var _a;\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            _a = [array[j], array[i]], array[i] = _a[0], array[j] = _a[1];\r\n        }\r\n    }\r\n    celestials.shuffleArray = shuffleArray;\r\n    var Dictionary = (function () {\r\n        function Dictionary() {\r\n            this._pairs = new Array();\r\n        }\r\n        Dictionary.prototype.add = function (key, value) {\r\n            this._pairs.push([key, value]);\r\n        };\r\n        Dictionary.prototype.remove = function (key) {\r\n            for (var i = 0; i < this._pairs.length; i++)\r\n                if (this._pairs[i][0] == key)\r\n                    this._pairs.splice(i, 1);\r\n        };\r\n        Dictionary.prototype.getValue = function (key) {\r\n            for (var i = 0; i < this._pairs.length; i++)\r\n                if (this._pairs[i][0] == key)\r\n                    return this._pairs[i][1];\r\n            return null;\r\n        };\r\n        Dictionary.prototype.setValue = function (key, value) {\r\n            for (var i = 0; i < this._pairs.length; i++)\r\n                if (this._pairs[i][0] == key)\r\n                    this._pairs[i][1] = value;\r\n        };\r\n        Dictionary.prototype.containsKey = function (key) {\r\n            for (var i = 0; i < this._pairs.length; i++)\r\n                if (this._pairs[i][0] == key)\r\n                    return true;\r\n            return false;\r\n        };\r\n        Dictionary.prototype.containsValue = function (value) {\r\n            for (var i = 0; i < this._pairs.length; i++)\r\n                if (this._pairs[i][1] == value)\r\n                    return true;\r\n            return false;\r\n        };\r\n        Object.defineProperty(Dictionary.prototype, \"List\", {\r\n            get: function () {\r\n                var list = new Array();\r\n                for (var i = 0; i < this._pairs.length; i++)\r\n                    list.push(this._pairs[i][1]);\r\n                return list;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Dictionary.prototype, \"FullList\", {\r\n            get: function () {\r\n                return this._pairs;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Dictionary;\r\n    }());\r\n    celestials.Dictionary = Dictionary;\r\n    var Queue = (function () {\r\n        function Queue() {\r\n            this._list = new Array();\r\n        }\r\n        Queue.prototype.enqueue = function (item) {\r\n            this._list.push(item);\r\n        };\r\n        Queue.prototype.dequeue = function () {\r\n            return this._list.splice(0, 1)[0];\r\n        };\r\n        Queue.prototype.clear = function () {\r\n            this._list = new Array();\r\n        };\r\n        Object.defineProperty(Queue.prototype, \"List\", {\r\n            get: function () { return this._list; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Queue;\r\n    }());\r\n    celestials.Queue = Queue;\r\n    var Rect = (function () {\r\n        function Rect(x, y, width, height) {\r\n            this._x = x;\r\n            this._y = y;\r\n            this._width = width;\r\n            this._height = height;\r\n        }\r\n        Rect.prototype.reset = function () {\r\n            this._x = 0;\r\n            this._y = 0;\r\n            this._width = 0;\r\n            this._height = 0;\r\n        };\r\n        Rect.prototype.toString = function () {\r\n            return \"Rect(x:\" + this._x + \", y:\" + this._y + \", w:\" + this._width + \", h:\" + this._height;\r\n        };\r\n        Object.defineProperty(Rect.prototype, \"X\", {\r\n            get: function () { return this._x; },\r\n            set: function (value) { this._x = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Y\", {\r\n            get: function () { return this._y; },\r\n            set: function (value) { this._y = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Width\", {\r\n            get: function () { return this._width; },\r\n            set: function (value) { this._width = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Height\", {\r\n            get: function () { return this._height; },\r\n            set: function (value) { this._height = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Left\", {\r\n            get: function () { return this._x; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Top\", {\r\n            get: function () { return this._y; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Right\", {\r\n            get: function () { return this._x + this._width; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Bottom\", {\r\n            get: function () { return this._y + this._height; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect.prototype, \"Center\", {\r\n            get: function () { return { x: this._x + this._width / 2, y: this._y + this._height / 2 }; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Rect, \"Empty\", {\r\n            get: function () { return new Rect(0, 0, 0, 0); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Rect;\r\n    }());\r\n    celestials.Rect = Rect;\r\n    function cropImage(img, x, y, w, h, callback) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var canvas, _a, ctx, imgDiv;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        canvas = document.createElement(\"canvas\");\r\n                        _a = canvas;\r\n                        return [4, \"tempCanvas\"];\r\n                    case 1:\r\n                        _a.id = _b.sent();\r\n                        canvas.width = w;\r\n                        canvas.height = h;\r\n                        document.body.appendChild(canvas);\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        ctx.drawImage(img, -x, -y);\r\n                        imgDiv = document.createElement(\"img\");\r\n                        imgDiv.onload = function () { return callback(imgDiv); };\r\n                        imgDiv.src = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\r\n                        canvas.remove();\r\n                        canvas = null;\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    celestials.cropImage = cropImage;\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var managers;\r\n    (function (managers) {\r\n        var Celestial = celestials.entities.Celestial;\r\n        var CelestialsManager = (function () {\r\n            function CelestialsManager() {\r\n                CelestialsManager._instance = this;\r\n                CelestialsManager._lookup = new celestials.Dictionary();\r\n                CelestialsManager._data = new celestials.Dictionary();\r\n                this._template = document.querySelector(\".template.celestial\");\r\n                this._container = document.querySelector(\".celestials\");\r\n                this._templates = new Array();\r\n                this._celestials = new Array();\r\n                this._changeRegistry = new Array();\r\n                this._spawnRate = CelestialsManager.DEF_SPAWNRATE;\r\n            }\r\n            CelestialsManager.prototype.setup = function (files) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _i, files_1, file;\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (files == null)\r\n                                    files = [\r\n                                        \"./res/celestials/anthony/anthony.json\",\r\n                                        \"./res/celestials/solaris/solaris.json\",\r\n                                        \"./res/celestials/victor/victor.json\"\r\n                                    ];\r\n                                _i = 0, files_1 = files;\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                if (!(_i < files_1.length)) return [3, 4];\r\n                                file = files_1[_i];\r\n                                return [4, celestials.fetchJson(file, function (json) {\r\n                                        var cel = new Celestial(_this._template, _this._container, json);\r\n                                        CelestialsManager.addTemplate(cel);\r\n                                    })];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                _i++;\r\n                                return [3, 1];\r\n                            case 4:\r\n                                if (!CelestialsManager._lookup.containsKey(\"solaris\")) return [3, 6];\r\n                                return [4, CelestialsManager.addCelestialByLookup(\"solaris\")];\r\n                            case 5:\r\n                                _a.sent();\r\n                                _a.label = 6;\r\n                            case 6:\r\n                                managers.MouseManager.listenForMouseOut(celestials.App.Node, function (x, y) { return managers.MouseManager.simluateMouseUp(celestials.App.Node); });\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialsManager.addTemplate = function (celestial) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!CelestialsManager._lookup.containsKey(celestial.Lookup)) {\r\n                                    CelestialsManager._lookup.add(celestial.Lookup, celestial);\r\n                                    CelestialsManager._data.add(celestial.Lookup, celestial.Data);\r\n                                }\r\n                                return [4, CelestialsManager._instance._templates.push(celestial)];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialsManager.getTemplateByLookup = function (lookup) {\r\n                if (CelestialsManager._lookup.containsKey(lookup))\r\n                    return CelestialsManager._lookup.getValue(lookup);\r\n                return null;\r\n            };\r\n            CelestialsManager.addCelestial = function (celestial, addedByLineage) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                addedByLineage = addedByLineage || false;\r\n                                return [4, new Promise(function (res, rej) { return __awaiter(_this, void 0, void 0, function () {\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    if (celestial.Data.maxSpawns != null) {\r\n                                                        if (CelestialsManager.countCelestialsOfType(celestial.Lookup) + 1 > celestial.Data.maxSpawns) {\r\n                                                            if (!addedByLineage)\r\n                                                                celestials.systems.Notifications.addNotification(\"Max spawns reached for \" + celestial.Name + \".\", celestials.systems.Notifications.TYPE.Fail);\r\n                                                            res(null);\r\n                                                        }\r\n                                                    }\r\n                                                    return [4, celestial.load()\r\n                                                            .then(function () {\r\n                                                            console.log(\"CREATED COPY\");\r\n                                                            CelestialsManager._instance._celestials.push(celestial);\r\n                                                            CelestialsManager.callChangeRegistry({ add: celestial });\r\n                                                            res(celestial);\r\n                                                        })];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    return [2];\r\n                                            }\r\n                                        });\r\n                                    }); })];\r\n                            case 1: return [2, _a.sent()];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialsManager.addCelestialByLookup = function (lookup, addedByLineage) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var celestial, copy;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                addedByLineage = addedByLineage || false;\r\n                                celestial = CelestialsManager._lookup.getValue(lookup);\r\n                                if (!(celestial != null)) return [3, 3];\r\n                                return [4, celestial.clone()];\r\n                            case 1:\r\n                                copy = _a.sent();\r\n                                return [4, this.addCelestial(copy, addedByLineage)];\r\n                            case 2: return [2, _a.sent()];\r\n                            case 3: return [2, null];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialsManager.addCelestialByLookupAtPosition = function (lookup, x, y, addedByLineage) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var celestial;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0: return [4, CelestialsManager.addCelestialByLookup(lookup, addedByLineage)];\r\n                            case 1:\r\n                                celestial = _a.sent();\r\n                                if (celestial == null)\r\n                                    return [2, null];\r\n                                celestial.X = x;\r\n                                celestial.Y = y + celestial.Height;\r\n                                return [2, celestial];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialsManager.countCelestialsOfType = function (lookup) {\r\n                var count = 0;\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    if (cel.Lookup == lookup)\r\n                        count++;\r\n                }\r\n                return count;\r\n            };\r\n            CelestialsManager.removeCelestial = function (celestial, callChangeRegistry) {\r\n                if (callChangeRegistry === void 0) { callChangeRegistry = true; }\r\n                var index = CelestialsManager._instance._celestials.indexOf(celestial);\r\n                if (index != -1) {\r\n                    var cel = CelestialsManager._instance._celestials.splice(index, 1)[0];\r\n                    if (callChangeRegistry)\r\n                        CelestialsManager.callChangeRegistry({ delete: cel });\r\n                    if (celestials.ui.menus.CelestialDetails.isShowing)\r\n                        if (celestials.ui.menus.CelestialDetails.CurrentCelestial == cel)\r\n                            celestials.ui.menus.CelestialDetails.hide();\r\n                    cel.remove();\r\n                }\r\n            };\r\n            CelestialsManager.removeAllCelestials = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var celestial = _a[_i];\r\n                    this.removeCelestial(celestial, false);\r\n                }\r\n                CelestialsManager.callChangeRegistry(null);\r\n            };\r\n            CelestialsManager.update = function () {\r\n                var instance = CelestialsManager._instance;\r\n                for (var _i = 0, _a = instance._celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    if (cel.IsLoaded) {\r\n                        cel.update();\r\n                    }\r\n                }\r\n            };\r\n            CelestialsManager.callChangeCelestial = function (celestial) {\r\n                CelestialsManager.callChangeRegistry({ change: celestial });\r\n            };\r\n            CelestialsManager.callChangeRegistry = function (change) {\r\n                for (var _i = 0, _a = CelestialsManager._instance._changeRegistry; _i < _a.length; _i++) {\r\n                    var func = _a[_i];\r\n                    func(change);\r\n                }\r\n            };\r\n            CelestialsManager.listenForCelestialChanges = function (func) {\r\n                CelestialsManager._instance._changeRegistry.push(func);\r\n            };\r\n            CelestialsManager.removeListenForCelestialChanges = function (func) {\r\n                var index = CelestialsManager._instance._changeRegistry.indexOf(func);\r\n                if (index != -1)\r\n                    CelestialsManager._instance._changeRegistry.splice(index, 1);\r\n            };\r\n            CelestialsManager.onGrab = function (cel, x, y) {\r\n                console.log(\"GRABBED\");\r\n                cel.Node.style.zIndex = '100';\r\n                cel.takeControl();\r\n                cel.Physics.zeroVelocity();\r\n            };\r\n            CelestialsManager.onDrag = function (cel, x, y) {\r\n                x = x;\r\n                y += (cel.Height * cel.RegistrationPoint.y);\r\n                cel.X = x;\r\n                cel.Y = y;\r\n            };\r\n            CelestialsManager.onDrop = function (cel, x, y) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _a, lastX, lastY, flingX, flingY;\r\n                    return __generator(this, function (_b) {\r\n                        console.log(\"DROPPED\");\r\n                        cel.releaseControl();\r\n                        cel.Physics.resetGravity();\r\n                        cel.Node.style.zIndex = \"\" + (cel.Data.zIndex || 1);\r\n                        _a = managers.MouseManager.LastMousePosition, lastX = _a.x, lastY = _a.y;\r\n                        flingX = ((x - lastX) / celestials.App.Bounds.Width) * celestials.App.Bounds.Width;\r\n                        flingY = ((y - lastY) / celestials.App.Bounds.Height) * celestials.App.Bounds.Height;\r\n                        cel.Physics.zeroVelocity();\r\n                        cel.Physics.addForceX(flingX * 1.2);\r\n                        cel.Physics.addForceY(flingY);\r\n                        console.log(\"FLING: \", flingX, flingY);\r\n                        console.log(cel.Physics.Velocity);\r\n                        if (flingX != 0) {\r\n                            if (flingX > 0)\r\n                                cel.setDirectionX(1);\r\n                            else\r\n                                cel.setDirectionX(-1);\r\n                        }\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            Object.defineProperty(CelestialsManager, \"Template\", {\r\n                get: function () { return CelestialsManager._instance._template; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialsManager, \"Templates\", {\r\n                get: function () { return CelestialsManager._instance._templates; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialsManager, \"Celestials\", {\r\n                get: function () { return CelestialsManager._instance._celestials; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialsManager, \"SpawnRate\", {\r\n                get: function () { return CelestialsManager._instance._spawnRate; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            CelestialsManager.DEF_SPAWNRATE = 30000;\r\n            return CelestialsManager;\r\n        }());\r\n        managers.CelestialsManager = CelestialsManager;\r\n    })(managers = celestials.managers || (celestials.managers = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var systems;\r\n    (function (systems) {\r\n        var InputManager = celestials.managers.InputManager;\r\n        var CelestialsManager = celestials.managers.CelestialsManager;\r\n        var Debugger = (function () {\r\n            function Debugger() {\r\n                Debugger._instance = this;\r\n                var randoVelocityKey = [celestials.Key.Code.a];\r\n                InputManager.addBinding(\"debug__velocity\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._randomVelocity.bind(this), celestials.KeyBinding.State.Down].concat(randoVelocityKey)))());\r\n                var leftKey = [celestials.Key.Code[\"left arrow\"]];\r\n                InputManager.addBinding(\"debug__left\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._sendLeft.bind(this), celestials.KeyBinding.State.Down].concat(leftKey)))());\r\n                var rightKey = [celestials.Key.Code[\"right arrow\"]];\r\n                InputManager.addBinding(\"debug__right\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._sendRight.bind(this), celestials.KeyBinding.State.Down].concat(rightKey)))());\r\n                var upKey = [celestials.Key.Code[\"up arrow\"]];\r\n                InputManager.addBinding(\"debug__up\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._sendUp.bind(this), celestials.KeyBinding.State.Down].concat(upKey)))());\r\n                var downKey = [celestials.Key.Code[\"down arrow\"]];\r\n                InputManager.addBinding(\"debug__down\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._sendDown.bind(this), celestials.KeyBinding.State.Down].concat(downKey)))());\r\n                var snapUpKey = [celestials.Key.Code.o];\r\n                InputManager.addBinding(\"debug__snapUp\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._snapToTop.bind(this), celestials.KeyBinding.State.Down].concat(snapUpKey)))());\r\n                var spawnCelestialKey = [celestials.Key.Code.z];\r\n                InputManager.addBinding(\"debug__spawnCelestial\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._spawnCelestial.bind(this), celestials.KeyBinding.State.Down].concat(spawnCelestialKey)))());\r\n                var flipCelestialXKey = [celestials.Key.Code.x];\r\n                InputManager.addBinding(\"debug__flipCelestialX\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._flipCelestialX.bind(this), celestials.KeyBinding.State.Down].concat(flipCelestialXKey)))());\r\n                var switchStateKey = [celestials.Key.Code.v];\r\n                InputManager.addBinding(\"debug__switchStateCelestial\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._switchState.bind(this), celestials.KeyBinding.State.Down].concat(switchStateKey)))());\r\n                var pauseKey = [celestials.Key.Code.p];\r\n                InputManager.addBinding(\"debug__pauseApp\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._togglePause.bind(this), celestials.KeyBinding.State.Down].concat(pauseKey)))());\r\n                var controlPanelKey = [celestials.Key.Code.c];\r\n                InputManager.addBinding(\"debug__openControlPanel\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._openControlPanel.bind(this), celestials.KeyBinding.State.Down].concat(controlPanelKey)))());\r\n                var celestialsPanelKey = [celestials.Key.Code.m];\r\n                InputManager.addBinding(\"debug__openCelestialsPanel\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._openCelestialsPanel.bind(this), celestials.KeyBinding.State.Down].concat(celestialsPanelKey)))());\r\n                var currentCelestialsPanelKey = [celestials.Key.Code.comma];\r\n                InputManager.addBinding(\"debug__openCurrentCelestialsPanel\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._openCurrentCelestialsPanel.bind(this), celestials.KeyBinding.State.Down].concat(currentCelestialsPanelKey)))());\r\n                var notificationPanelKey = [celestials.Key.Code.j];\r\n                InputManager.addBinding(\"debug__showNotificationPanel\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._openNotificationPanel.bind(this), celestials.KeyBinding.State.Down].concat(notificationPanelKey)))());\r\n                var addNotificationKey = [celestials.Key.Code.n];\r\n                InputManager.addBinding(\"debug__addNotification\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._addNotification.bind(this), celestials.KeyBinding.State.Down].concat(addNotificationKey)))());\r\n                var deleteLastCelestialKey = [celestials.Key.Code[\"numpad 0\"]];\r\n                InputManager.addBinding(\"debug__deleteLastCelestial\", new (celestials.KeyBinding.bind.apply(celestials.KeyBinding, [void 0, this._deleteLastCelestial.bind(this), celestials.KeyBinding.State.Down].concat(deleteLastCelestialKey)))());\r\n            }\r\n            Debugger.prototype._randomVelocity = function () {\r\n                console.log(\"Rando Vel\");\r\n                for (var i = 0; i < CelestialsManager.Celestials.length; i++) {\r\n                    var celestial = CelestialsManager.Celestials[i];\r\n                    var x = celestials.randomRange(-150, 150);\r\n                    var y = celestials.randomRange(-150, 0);\r\n                    celestial.Physics.addForceX(x);\r\n                    celestial.Physics.addForceY(y);\r\n                    var grav = celestials.randomRange(2, 15);\r\n                    celestial.Physics.setGravity(grav);\r\n                }\r\n            };\r\n            Debugger.prototype._sendLeft = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    cel.Physics.addForceX(-100);\r\n                    cel.takeControl();\r\n                }\r\n                setTimeout(function () {\r\n                    for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        cel.releaseControl();\r\n                        cel.Logic.updateState();\r\n                    }\r\n                }, 100);\r\n            };\r\n            Debugger.prototype._sendRight = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    cel.Physics.addForceX(100);\r\n                    cel.takeControl();\r\n                }\r\n                setTimeout(function () {\r\n                    for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        cel.releaseControl();\r\n                        cel.Logic.updateState();\r\n                    }\r\n                }, 100);\r\n            };\r\n            Debugger.prototype._sendUp = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    cel.Physics.addForceY(-200);\r\n                    cel.takeControl();\r\n                }\r\n                setTimeout(function () {\r\n                    for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        cel.releaseControl();\r\n                        cel.Logic.updateState();\r\n                    }\r\n                }, 100);\r\n            };\r\n            Debugger.prototype._sendDown = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    cel.Physics.addForceY(200);\r\n                    cel.takeControl();\r\n                }\r\n                setTimeout(function () {\r\n                    for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        cel.releaseControl();\r\n                        cel.Logic.updateState();\r\n                    }\r\n                }, 100);\r\n            };\r\n            Debugger.prototype._snapToTop = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var cel = _a[_i];\r\n                    cel.Physics.snapToTop();\r\n                }\r\n            };\r\n            Debugger.prototype._spawnCelestial = function () {\r\n                CelestialsManager.addCelestialByLookup(\"solaris\");\r\n            };\r\n            Debugger.prototype._flipCelestialX = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var celestial = _a[_i];\r\n                    celestial.flipX();\r\n                }\r\n            };\r\n            Debugger.prototype._switchState = function () {\r\n                for (var _i = 0, _a = CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                    var celestial = _a[_i];\r\n                    celestial.Sequencer.changeState(celestials.engines.CelestialSequencer.STATE.Walk);\r\n                }\r\n            };\r\n            Debugger.prototype._togglePause = function () {\r\n                if (celestials.App.Paused)\r\n                    celestials.App.resume();\r\n                else\r\n                    celestials.App.pause();\r\n            };\r\n            Debugger.prototype._openControlPanel = function () {\r\n                celestials.ui.menus.ControlPanel.show();\r\n            };\r\n            Debugger.prototype._openCelestialsPanel = function () {\r\n                celestials.ui.menus.CelestialsPanel.show();\r\n            };\r\n            Debugger.prototype._openCurrentCelestialsPanel = function () {\r\n                celestials.ui.menus.CurrentCelestialsPanel.show();\r\n            };\r\n            Debugger.prototype._openNotificationPanel = function () {\r\n                celestials.ui.menus.NotificationPanel.show();\r\n            };\r\n            Debugger.prototype._addNotification = function () {\r\n                systems.Notifications.addNotification(\"This is a test notification!\");\r\n            };\r\n            Debugger.prototype._deleteLastCelestial = function () {\r\n                celestials.managers.CelestialsManager.removeCelestial(celestials.managers.CelestialsManager.Celestials[celestials.managers.CelestialsManager.Celestials.length - 1]);\r\n            };\r\n            return Debugger;\r\n        }());\r\n        systems.Debugger = Debugger;\r\n    })(systems = celestials.systems || (celestials.systems = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var systems;\r\n    (function (systems) {\r\n        var Collision = (function () {\r\n            function Collision() {\r\n                Collision._instance = this;\r\n                this._objects = new Array();\r\n                this._usesCollision = true;\r\n                this._showCollisionBounds = true;\r\n            }\r\n            Collision.addToCollisionSystem = function (entity) {\r\n                var rect = entity.Bounds;\r\n                var visual = document.createElement(\"div\");\r\n                visual.classList.add(\"collision\");\r\n                celestials.App.Node.appendChild(visual);\r\n                Collision._instance._objects.push({ entity: entity, rect: rect, visual: visual, isOverlapping: false });\r\n            };\r\n            Collision.showCollisionBounds = function (show) {\r\n                Collision._instance._showCollisionBounds = show;\r\n                for (var _i = 0, _a = Collision._instance._objects; _i < _a.length; _i++) {\r\n                    var obj = _a[_i];\r\n                    if (show)\r\n                        obj.visual.classList.remove(\"hide\");\r\n                    else\r\n                        obj.visual.classList.add(\"hide\");\r\n                }\r\n            };\r\n            Collision.getCollisionObject = function (entity) {\r\n                for (var i = 0; i < Collision._instance._objects.length; i++)\r\n                    if (Collision._instance._objects[i].entity == entity)\r\n                        return Collision._instance._objects[i];\r\n            };\r\n            Collision.checkCollision = function (colObj) {\r\n                for (var _i = 0, _a = Collision._instance._objects; _i < _a.length; _i++) {\r\n                    var obj = _a[_i];\r\n                    if (obj.entity == colObj.entity)\r\n                        continue;\r\n                    if (Math.abs(obj.entity.X - colObj.entity.X) > 200)\r\n                        continue;\r\n                    if (Math.abs(obj.entity.Y - colObj.entity.Y) > 200)\r\n                        continue;\r\n                    if (Collision._instance._isColliding(obj.rect, colObj.rect))\r\n                        return obj.entity;\r\n                }\r\n                return null;\r\n            };\r\n            Collision.prototype._isColliding = function (a, b) {\r\n                return !(((a.Y + a.Height) < (b.X)) ||\r\n                    (a.Y > (b.Y + b.Height)) ||\r\n                    ((a.X + a.Width) < b.X) ||\r\n                    (a.X > (b.X + b.Width)));\r\n            };\r\n            Collision.prototype.load = function () {\r\n            };\r\n            Collision.prototype.unload = function () {\r\n            };\r\n            Collision.update = function () {\r\n                if (!Collision._instance._usesCollision)\r\n                    return;\r\n                var colSize = Collision.COLLISION_SIZE;\r\n                for (var _i = 0, _a = Collision._instance._objects; _i < _a.length; _i++) {\r\n                    var obj = _a[_i];\r\n                    var bounds = obj.entity.MainImage.getBoundingClientRect();\r\n                    obj.rect = new celestials.Rect(bounds.left - colSize, bounds.top - colSize, bounds.width + (colSize * 2), bounds.height + (colSize * 2));\r\n                    if (Collision._instance._showCollisionBounds) {\r\n                        obj.visual.style.left = obj.rect.X + \"px\";\r\n                        obj.visual.style.top = obj.rect.Y + \"px\";\r\n                        obj.visual.style.width = obj.rect.Width + \"px\";\r\n                        obj.visual.style.height = obj.rect.Height + \"px\";\r\n                    }\r\n                }\r\n            };\r\n            Collision.COLLISION_SIZE = 50;\r\n            return Collision;\r\n        }());\r\n        systems.Collision = Collision;\r\n    })(systems = celestials.systems || (celestials.systems = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var managers;\r\n    (function (managers) {\r\n        var MouseManager = (function () {\r\n            function MouseManager() {\r\n                MouseManager._mousePosition = { x: 0, y: 0 };\r\n                MouseManager._lastMousePosition = { x: 0, y: 0 };\r\n                MouseManager._registry = {\r\n                    mousedown: new celestials.Dictionary(),\r\n                    mouseup: new celestials.Dictionary(),\r\n                    mouseout: new celestials.Dictionary(),\r\n                    mouseover: new celestials.Dictionary(),\r\n                    rightclick: new celestials.Dictionary(),\r\n                    drag: new celestials.Dictionary()\r\n                };\r\n                celestials.App.Node.addEventListener(\"mousedown\", this._onMouseDown.bind(this));\r\n                celestials.App.Node.addEventListener(\"contextmenu\", this._onRightClick.bind(this));\r\n                celestials.App.Node.addEventListener(\"mousemove\", this._onMouseMove.bind(this));\r\n                celestials.App.Node.addEventListener(\"mouseup\", this._onMouseUp.bind(this));\r\n                celestials.App.Node.addEventListener(\"mouseenter\", this._onMouseOver.bind(this));\r\n                celestials.App.Node.addEventListener(\"mouseleave\", this._onMouseOut.bind(this));\r\n            }\r\n            MouseManager.listenForMouseDown = function (node, callback) {\r\n                MouseManager._registry.mousedown.add(node, callback);\r\n            };\r\n            MouseManager.listenForMouseUp = function (node, callback) {\r\n                MouseManager._registry.mouseup.add(node, callback);\r\n            };\r\n            MouseManager.listenForMouseOver = function (node, callback) {\r\n                MouseManager._registry.mouseover.add(node, callback);\r\n            };\r\n            MouseManager.listenForMouseOut = function (node, callback) {\r\n                MouseManager._registry.mouseout.add(node, callback);\r\n            };\r\n            MouseManager.listenForRightClick = function (node, callback) {\r\n                MouseManager._registry.rightclick.add(node, callback);\r\n            };\r\n            MouseManager.listenForDrag = function (node, grabCallback, dragCallback, dropCallback) {\r\n                MouseManager._registry.drag.add(node, { grabCallback: grabCallback, dragCallback: dragCallback, dropCallback: dropCallback });\r\n            };\r\n            MouseManager.startDrag = function (node) {\r\n                MouseManager._activeElement = node;\r\n            };\r\n            MouseManager.simluateMouseDown = function (node, x, y) {\r\n                var mouseEvent = new MouseEvent('mousedown', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                    clientX: x || MouseManager.MousePosition.x,\r\n                    clientY: y || MouseManager.MousePosition.y\r\n                });\r\n                node.dispatchEvent(mouseEvent);\r\n            };\r\n            MouseManager.simluateMouseUp = function (node, x, y) {\r\n                var mouseEvent = new MouseEvent('mouseup', {\r\n                    bubbles: true,\r\n                    cancelable: true,\r\n                    clientX: x || MouseManager.MousePosition.x,\r\n                    clientY: y || MouseManager.MousePosition.y\r\n                });\r\n                node.dispatchEvent(mouseEvent);\r\n            };\r\n            MouseManager.prototype._onMouseDown = function (e) {\r\n                if (e.button != 0)\r\n                    return;\r\n                var target = e.target.closest(\"[data-clickable]\");\r\n                if (target == null)\r\n                    return;\r\n                console.log(target);\r\n                var _a = MouseManager._registry, mousedown = _a.mousedown, drag = _a.drag;\r\n                if (drag.containsKey(target)) {\r\n                    var grabCallback = drag.getValue(target).grabCallback;\r\n                    if (grabCallback != null)\r\n                        grabCallback(e.clientX, e.clientY);\r\n                    MouseManager._activeElement = target;\r\n                    return;\r\n                }\r\n                if (mousedown.containsKey(target))\r\n                    mousedown.getValue(target)();\r\n            };\r\n            MouseManager.prototype._onRightClick = function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                var target = e.target.closest(\"[data-clickable]\");\r\n                if (target == null)\r\n                    return;\r\n                var rightclick = MouseManager._registry.rightclick;\r\n                if (rightclick.containsKey(target))\r\n                    rightclick.getValue(target)(e.clientX, e.clientY);\r\n            };\r\n            MouseManager.prototype._onMouseMove = function (e) {\r\n                MouseManager._lastMousePosition = MouseManager._mousePosition;\r\n                MouseManager._mousePosition = { x: e.clientX, y: e.clientY };\r\n                var drag = MouseManager._registry.drag;\r\n                if (MouseManager._activeElement != null) {\r\n                    if (drag.containsKey(MouseManager._activeElement)) {\r\n                        var dragCallback = drag.getValue(MouseManager._activeElement).dragCallback;\r\n                        if (dragCallback != null)\r\n                            dragCallback(e.clientX, e.clientY);\r\n                    }\r\n                }\r\n            };\r\n            MouseManager.prototype._onMouseUp = function (e) {\r\n                var target = e.target.closest(\"[data-clickable]\");\r\n                if (target == null)\r\n                    return;\r\n                var _a = MouseManager._registry, mouseup = _a.mouseup, drag = _a.drag;\r\n                if (MouseManager._activeElement != null) {\r\n                    if (drag.containsKey(MouseManager._activeElement)) {\r\n                        var dropCallback = drag.getValue(MouseManager._activeElement).dropCallback;\r\n                        if (dropCallback != null)\r\n                            dropCallback(e.clientX, e.clientY);\r\n                        MouseManager._activeElement = null;\r\n                        return;\r\n                    }\r\n                }\r\n                if (mouseup.containsKey(target))\r\n                    mouseup.getValue(target)(e.clientX, e.clientY);\r\n            };\r\n            MouseManager.prototype._onMouseOver = function (e) {\r\n                var target = e.target.closest(\"[data-clickable]\");\r\n                if (target == null)\r\n                    return;\r\n                var mouseover = MouseManager._registry.mouseover;\r\n                if (mouseover.containsKey(target))\r\n                    mouseover.getValue(target)(e.clientX, e.clientY);\r\n            };\r\n            MouseManager.prototype._onMouseOut = function (e) {\r\n                var target = e.target.closest(\"[data-clickable]\");\r\n                if (target == null)\r\n                    return;\r\n                var mouseout = MouseManager._registry.mouseout;\r\n                if (mouseout.containsKey(target))\r\n                    mouseout.getValue(target)(e.clientX, e.clientY);\r\n            };\r\n            Object.defineProperty(MouseManager, \"MousePosition\", {\r\n                get: function () { return MouseManager._mousePosition; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(MouseManager, \"LastMousePosition\", {\r\n                get: function () { return MouseManager._lastMousePosition; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(MouseManager, \"Registry\", {\r\n                get: function () { return MouseManager._registry; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return MouseManager;\r\n        }());\r\n        managers.MouseManager = MouseManager;\r\n    })(managers = celestials.managers || (celestials.managers = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var Dropdown = (function () {\r\n                function Dropdown(node, template) {\r\n                    this._node = node;\r\n                    this._itemTemplate = template;\r\n                    this._itemTemplate.classList.add(\"hide\");\r\n                    this._items = new Array();\r\n                }\r\n                Dropdown.prototype.createItem = function () {\r\n                    var item = this._itemTemplate.cloneNode(true);\r\n                    item.classList.remove(\"template\", \"hide\");\r\n                    return item;\r\n                };\r\n                Dropdown.prototype.addItem = function (node, callback) {\r\n                    var item = new components.Item(node);\r\n                    item.wireSelector(item.Node);\r\n                    item.addSelectListener(function (select) {\r\n                        callback();\r\n                    });\r\n                    this._items.push(item);\r\n                    this._node.appendChild(item.Node);\r\n                };\r\n                Dropdown.prototype.removeItemAt = function (index) {\r\n                    var item = this._items.splice(index, 1)[0];\r\n                    item.Node.remove();\r\n                    item = null;\r\n                };\r\n                Dropdown.prototype.clearItems = function () {\r\n                    for (var i = this._items.length - 1; i >= 0; i--)\r\n                        this.removeItemAt(i);\r\n                };\r\n                Dropdown.prototype.addSelectListener = function (callback) {\r\n                    this._selectListener = callback;\r\n                };\r\n                Dropdown.prototype.removeSelectListener = function () {\r\n                    this._selectListener = null;\r\n                };\r\n                Object.defineProperty(Dropdown.prototype, \"Items\", {\r\n                    get: function () { return this._items; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return Dropdown;\r\n            }());\r\n            components.Dropdown = Dropdown;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var MultiDropdown = (function (_super) {\r\n                __extends(MultiDropdown, _super);\r\n                function MultiDropdown(node, template, headerTemplate, indentNodeTemplate, indentTemplate) {\r\n                    var _this = _super.call(this, node, template) || this;\r\n                    _this._headerTemplate = headerTemplate;\r\n                    _this._indentNodeTemplate = indentNodeTemplate;\r\n                    _this._indentTemplate = indentTemplate || _this._itemTemplate;\r\n                    _this._headerTemplate.classList.add(\"hide\");\r\n                    _this._indentNodeTemplate.classList.add(\"hide\");\r\n                    _this._indentTemplate.classList.add(\"hide\");\r\n                    _this._indents = new Array();\r\n                    return _this;\r\n                }\r\n                MultiDropdown.prototype.createIndent = function () {\r\n                    var indent = this._indentNodeTemplate.cloneNode(true);\r\n                    indent.classList.remove(\"template\", \"hide\");\r\n                    var ul = document.createElement(\"ul\");\r\n                    this._indents.push(indent);\r\n                    return indent;\r\n                };\r\n                MultiDropdown.prototype.addItemToLastIndent = function (node, callback) {\r\n                    var item = new components.Item(node);\r\n                    item.wireSelector(item.Node);\r\n                    item.addSelectListener(function (select) {\r\n                        callback();\r\n                    });\r\n                    this._items.push(item);\r\n                    var indent = this._indents[this._indents.length - 1];\r\n                    if (indent instanceof HTMLUListElement) {\r\n                        indent.appendChild(item.Node);\r\n                    }\r\n                    else {\r\n                        var ul = indent.querySelector(\"ul\");\r\n                        ul.appendChild(item.Node);\r\n                    }\r\n                };\r\n                MultiDropdown.prototype.addLastIndent = function (title) {\r\n                    var titleNode = this._headerTemplate.cloneNode(true);\r\n                    titleNode.innerHTML = title;\r\n                    titleNode.classList.remove(\"template\", \"hide\");\r\n                    this._node.appendChild(titleNode);\r\n                    var titleIconNode = document.createElement(\"div\");\r\n                    titleIconNode.innerHTML = \"&#9655;\";\r\n                    titleNode.appendChild(titleIconNode);\r\n                    this._node.appendChild(this._indents[this._indents.length - 1]);\r\n                };\r\n                MultiDropdown.prototype.clear = function () {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var i, indent;\r\n                        return __generator(this, function (_a) {\r\n                            this.clearItems();\r\n                            for (i = this._indents.length - 1; i >= 0; i--) {\r\n                                indent = this._indents[i];\r\n                                this._indents.splice(i, 1);\r\n                                indent.parentNode.removeChild(indent);\r\n                                indent = null;\r\n                            }\r\n                            while (this._node.hasChildNodes()) {\r\n                                this._node.removeChild(this._node.lastChild);\r\n                            }\r\n                            return [2];\r\n                        });\r\n                    });\r\n                };\r\n                return MultiDropdown;\r\n            }(components.Dropdown));\r\n            components.MultiDropdown = MultiDropdown;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CelestialContext = (function () {\r\n                function CelestialContext(node) {\r\n                    var ctx = document.querySelector(\".context-menu.celestial\");\r\n                    CelestialContext._node = node;\r\n                    CelestialContext._nameNode = ctx.querySelector(\".name\");\r\n                    CelestialContext._typeNode = ctx.querySelector(\".type\");\r\n                    var statesNode = ctx.querySelector(\".states\");\r\n                    CelestialContext._statesDropdown = new ui.components.MultiDropdown(statesNode.querySelector(\".ctx-dropdown.template\"), statesNode.querySelector(\".ctx-item.template\"), statesNode.querySelector(\".ctx-dropdown-header.template\"), statesNode.querySelector(\".ctx-dropdown-2.template\"), statesNode.querySelector(\".ctx-dropdown-2 .ctx-item.template\"));\r\n                    var actionsNode = ctx.querySelector(\".actions\");\r\n                    CelestialContext._actionsDropdown = new ui.components.MultiDropdown(actionsNode.querySelector(\".ctx-dropdown.template\"), actionsNode.querySelector(\".ctx-item.template\"), actionsNode.querySelector(\".ctx-dropdown-header.template\"), actionsNode.querySelector(\".ctx-dropdown-2.template\"), actionsNode.querySelector(\".ctx-dropdown-2 .ctx-item.template\"));\r\n                    CelestialContext._eventsRegistry = new celestials.Dictionary();\r\n                    CelestialContext._eventsRegistry.add(\"closeContext\", CelestialContext._onClose.bind(this));\r\n                    CelestialContext.hide();\r\n                }\r\n                CelestialContext.show = function (celestial) {\r\n                    console.log(\"CEL: \" + celestial);\r\n                    if (celestial == null)\r\n                        return;\r\n                    CelestialContext._node.classList.remove(\"hide\");\r\n                    CelestialContext._nameNode.innerHTML = celestial.Name;\r\n                    CelestialContext._typeNode.innerHTML = celestial.Lookup;\r\n                    var statesDrop = CelestialContext._statesDropdown;\r\n                    statesDrop.clear();\r\n                    var _loop_4 = function (indentData) {\r\n                        var state = celestials.engines.CelestialSequencer.STATE[indentData];\r\n                        var sequences = celestial.Sequencer.getStateSequences(state);\r\n                        if (sequences == null)\r\n                            return \"continue\";\r\n                        statesDrop.createIndent();\r\n                        var _loop_5 = function (seq) {\r\n                            this_1._createIndentItem(statesDrop, seq.name, function () {\r\n                                celestial.Sequencer.changeState(state);\r\n                                celestial.Sequencer.changeSequence(celestial.Sequencer.getSequenceByName(seq.name));\r\n                                console.log(\"SEQUENCE: \" + seq.name);\r\n                                if (celestial.Sequencer.CurrentState == celestials.engines.CelestialSequencer.STATE.Spawn)\r\n                                    celestial.spawn();\r\n                            });\r\n                        };\r\n                        for (var _i = 0, sequences_1 = sequences; _i < sequences_1.length; _i++) {\r\n                            var seq = sequences_1[_i];\r\n                            _loop_5(seq);\r\n                        }\r\n                        statesDrop.addLastIndent(indentData);\r\n                    };\r\n                    var this_1 = this;\r\n                    for (var _i = 0, _a = Object.keys(celestials.engines.CelestialSequencer.STATE); _i < _a.length; _i++) {\r\n                        var indentData = _a[_i];\r\n                        _loop_4(indentData);\r\n                    }\r\n                    var actionsDrop = CelestialContext._actionsDropdown;\r\n                    actionsDrop.clear();\r\n                    actionsDrop.createIndent();\r\n                    this._createIndentItem(actionsDrop, \"Flip X\", function () { celestial.flipX(); });\r\n                    this._createIndentItem(actionsDrop, \"Nudge Left\", function () { celestial.Physics.addForceX(-50); });\r\n                    this._createIndentItem(actionsDrop, \"Nudge Right\", function () { celestial.Physics.addForceX(50); });\r\n                    this._createIndentItem(actionsDrop, \"Nudge Up\", function () { celestial.Physics.addForceY(-150); });\r\n                    this._createIndentItem(actionsDrop, \"Nudge Down\", function () { celestial.Physics.addForceY(50); });\r\n                    actionsDrop.addLastIndent(\"General\");\r\n                    actionsDrop.createIndent();\r\n                    this._createIndentItem(actionsDrop, \"Send to Front\", function () { return console.log(\"Send to FRONT\"); });\r\n                    this._createIndentItem(actionsDrop, \"Send to Back\", function () { return console.log(\"Send to BACK\"); });\r\n                    actionsDrop.addLastIndent(\"Sorting\");\r\n                    actionsDrop.createIndent();\r\n                    this._createIndentItem(actionsDrop, \"Pause/Unpause\", function () { (celestial.Paused) ? celestial.unpause() : celestial.pause(); });\r\n                    this._createIndentItem(actionsDrop, \"Copy\", function () { celestials.managers.CelestialsManager.addCelestialByLookup(celestial.Lookup); });\r\n                    this._createIndentItem(actionsDrop, \"Delete\", function () { celestials.managers.CelestialsManager.removeCelestial(celestial); });\r\n                    actionsDrop.addLastIndent(\"Control\");\r\n                    CelestialContext._keepOnScreen(celestial.Bounds);\r\n                    celestials.App.Node.addEventListener(\"click\", CelestialContext._eventsRegistry.getValue(\"closeContext\"));\r\n                };\r\n                CelestialContext.hide = function () {\r\n                    CelestialContext._node.classList.add(\"hide\");\r\n                };\r\n                CelestialContext._createIndentItem = function (dropdown, title, action) {\r\n                    var item = dropdown.createItem();\r\n                    item.innerHTML = title;\r\n                    var act = function () {\r\n                        action();\r\n                        CelestialContext.hide();\r\n                    };\r\n                    dropdown.addItemToLastIndent(item, act);\r\n                };\r\n                CelestialContext._keepOnScreen = function (celBounds) {\r\n                    var node = CelestialContext._node;\r\n                    var x = celBounds.Left;\r\n                    var y = celBounds.Top;\r\n                    if (x + node.offsetWidth > celestials.App.Bounds.Right)\r\n                        x = celestials.App.Bounds.Right - node.offsetWidth - 150;\r\n                    if (y + node.offsetHeight > celestials.App.Bounds.Bottom)\r\n                        y = celestials.App.Bounds.Bottom - node.offsetHeight - 150;\r\n                    node.style.left = x + \"px\";\r\n                    node.style.top = y + \"px\";\r\n                };\r\n                CelestialContext._onClose = function () {\r\n                    CelestialContext.hide();\r\n                    celestials.App.Node.removeEventListener(\"click\", CelestialContext._eventsRegistry.getValue(\"closeContext\"));\r\n                };\r\n                Object.defineProperty(CelestialContext, \"StatesDropdown\", {\r\n                    get: function () { return CelestialContext._statesDropdown; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return CelestialContext;\r\n            }());\r\n            menus.CelestialContext = CelestialContext;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var ApplicationContext = (function (_super) {\r\n                __extends(ApplicationContext, _super);\r\n                function ApplicationContext(node) {\r\n                    var _this = _super.call(this, node) || this;\r\n                    ApplicationContext._instance = _this;\r\n                    var ctx = document.querySelector(\".context-menu.application\");\r\n                    var celestialsNode = ctx.querySelector(\".celestials\");\r\n                    ApplicationContext._celestialsDropdown = new ui.components.MultiDropdown(celestialsNode.querySelector(\".ctx-dropdown.template\"), celestialsNode.querySelector(\".ctx-item.template\"), celestialsNode.querySelector(\".ctx-dropdown-header.template\"), celestialsNode.querySelector(\".ctx-dropdown-2.template\"), celestialsNode.querySelector(\".ctx-dropdown-2 .ctx-item.template\"));\r\n                    var actionsNode = ctx.querySelector(\".actions\");\r\n                    ApplicationContext._actionsDropdown = new ui.components.MultiDropdown(actionsNode.querySelector(\".ctx-dropdown.template\"), actionsNode.querySelector(\".ctx-item.template\"), actionsNode.querySelector(\".ctx-dropdown-header.template\"), actionsNode.querySelector(\".ctx-dropdown-2.template\"), actionsNode.querySelector(\".ctx-dropdown-2 .ctx-item.template\"));\r\n                    ApplicationContext._eventsRegistry = new celestials.Dictionary();\r\n                    celestials.managers.MouseManager.listenForRightClick(celestials.App.Node, function (x, y) { return ApplicationContext.showAt(x, y); });\r\n                    celestials.managers.MouseManager.listenForMouseDown(celestials.App.Node, function () { return ApplicationContext.hide(); });\r\n                    ApplicationContext.hide();\r\n                    return _this;\r\n                }\r\n                ApplicationContext.show = function () {\r\n                    ApplicationContext._instance.show();\r\n                    var celestialsDrop = ApplicationContext._celestialsDropdown;\r\n                    celestialsDrop.clear();\r\n                    celestialsDrop.createIndent();\r\n                    var _loop_6 = function (celestial) {\r\n                        this_2._createIndentItem(celestialsDrop, celestial.Lookup, function () {\r\n                            celestials.managers.CelestialsManager.addCelestialByLookup(celestial.Lookup);\r\n                        });\r\n                    };\r\n                    var this_2 = this;\r\n                    for (var _i = 0, _a = celestials.managers.CelestialsManager.Templates; _i < _a.length; _i++) {\r\n                        var celestial = _a[_i];\r\n                        _loop_6(celestial);\r\n                    }\r\n                    celestialsDrop.addLastIndent(\"Add Celestial\");\r\n                    var actionsDrop = ApplicationContext._actionsDropdown;\r\n                    actionsDrop.clear();\r\n                    actionsDrop.createIndent();\r\n                    this._createIndentItem(actionsDrop, \"Pause All\", function () { console.log(\"PAUSE ALL\"); });\r\n                    this._createIndentItem(actionsDrop, \"Unpause All\", function () { console.log(\"UNPAUSE ALL\"); });\r\n                    this._createIndentItem(actionsDrop, \"Delete All\", function () { celestials.managers.CelestialsManager.removeAllCelestials(); });\r\n                    actionsDrop.addLastIndent(\"Control\");\r\n                    celestials.App.Node.addEventListener(\"click\", ApplicationContext._eventsRegistry.getValue(\"closeContext\"));\r\n                };\r\n                ApplicationContext.hide = function () {\r\n                    ApplicationContext._instance.hide();\r\n                };\r\n                ApplicationContext._createIndentItem = function (dropdown, title, action) {\r\n                    var item = dropdown.createItem();\r\n                    item.innerHTML = title;\r\n                    var act = function () {\r\n                        action();\r\n                        ApplicationContext.hide();\r\n                    };\r\n                    dropdown.addItemToLastIndent(item, act);\r\n                };\r\n                ApplicationContext.showAt = function (x, y) {\r\n                    ApplicationContext._instance._node.style.left = x + \"px\";\r\n                    ApplicationContext._instance._node.style.top = y + \"px\";\r\n                    ApplicationContext.show();\r\n                };\r\n                Object.defineProperty(ApplicationContext, \"StatesDropdown\", {\r\n                    get: function () { return ApplicationContext._celestialsDropdown; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return ApplicationContext;\r\n            }(ui.Menu));\r\n            menus.ApplicationContext = ApplicationContext;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var ToggleGroup = (function () {\r\n                function ToggleGroup(inputNode, collapsableNode, changeListener) {\r\n                    this._inputNode = inputNode;\r\n                    this._collapsableNode = collapsableNode;\r\n                    this._changeListener = changeListener;\r\n                    this._collapsableHeight = (this._collapsableNode != null) ? this._collapsableNode.scrollHeight : 0;\r\n                    this._inputNode.addEventListener(\"change\", this._onToggleChanged.bind(this));\r\n                    this._onToggleChanged();\r\n                }\r\n                ToggleGroup.prototype.addChangeListener = function (callback) {\r\n                    this._changeListener = callback;\r\n                };\r\n                ToggleGroup.prototype.removeChangeListener = function () {\r\n                    this._changeListener = null;\r\n                };\r\n                ToggleGroup.prototype._onToggleChanged = function () {\r\n                    if (this._changeListener != null)\r\n                        this._changeListener(this._inputNode.checked);\r\n                    if (this._collapsableNode != null) {\r\n                        if (this._inputNode.checked) {\r\n                            this._collapsableNode.style.maxHeight = this._collapsableHeight + \"px\";\r\n                            this._collapsableNode.classList.remove(\"hide\");\r\n                        }\r\n                        else {\r\n                            this._collapsableNode.style.maxHeight = '0px';\r\n                            this._collapsableNode.classList.add(\"hide\");\r\n                        }\r\n                    }\r\n                };\r\n                return ToggleGroup;\r\n            }());\r\n            components.ToggleGroup = ToggleGroup;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var ControlPanel = (function () {\r\n                function ControlPanel(node) {\r\n                    ControlPanel._instance = this;\r\n                    this._node = node;\r\n                    this._eventsRegistry = new celestials.Dictionary();\r\n                    this._node.querySelector(\".ui.close\").addEventListener(\"click\", function () { return ControlPanel.hide(); });\r\n                    var useMoods = new ui.components.ToggleGroup(this._node.querySelector(\"[data-checkbox='use-moods']\"), null, this._onUseMoods.bind(this));\r\n                    var allowNotifications = new ui.components.ToggleGroup(this._node.querySelector(\"[data-checkbox=allow-notifications\"), null, this._onAllowNotifications.bind(this));\r\n                    var developerMode = new ui.components.ToggleGroup(this._node.querySelector(\"[data-checkbox=dev-mode]\"), this._node.querySelector(\"[data-checkbox-collapse=dev-mode]\"), this._onDevMode.bind(this));\r\n                    var showOverlays = new ui.components.ToggleGroup(this._node.querySelector(\"[data-checkbox='show-overlays']\"), null, this._onShowOverlays.bind(this));\r\n                    this._node.querySelector(\"[data-button='show-notifications']\").addEventListener(\"click\", this._onShowNotifications.bind(this));\r\n                    this._node.classList.remove(\"opacity-0\");\r\n                    ControlPanel.hide();\r\n                }\r\n                ControlPanel.show = function () {\r\n                    ControlPanel._instance._node.classList.remove(\"hide\");\r\n                };\r\n                ControlPanel.hide = function () {\r\n                    ControlPanel._instance._node.classList.add(\"hide\");\r\n                };\r\n                ControlPanel.prototype._onAllowNotifications = function (checked) {\r\n                    if (checked) {\r\n                        ui.menus.NotificationBar.enable();\r\n                        celestials.systems.Notifications.addNotification(\"Turned on notifications!\", celestials.systems.Notifications.TYPE.Notify, null, function () { return ControlPanel.show(); });\r\n                    }\r\n                    else {\r\n                        ui.menus.NotificationBar.disable();\r\n                    }\r\n                };\r\n                ControlPanel.prototype._onUseMoods = function (checked) {\r\n                    celestials.App.UsesMood = checked;\r\n                    if (checked)\r\n                        menus.CelestialDetails.showMood();\r\n                    else\r\n                        menus.CelestialDetails.hideMood();\r\n                };\r\n                ControlPanel.prototype._onDevMode = function (checked) {\r\n                    console.log(\"DEV MODE: \" + checked);\r\n                };\r\n                ControlPanel.prototype._onShowNotifications = function () {\r\n                    ui.menus.NotificationPanel.show();\r\n                };\r\n                ControlPanel.prototype._onShowOverlays = function (checked) {\r\n                    celestials.systems.Collision.showCollisionBounds(checked);\r\n                    for (var _i = 0, _a = celestials.managers.CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        cel.showRegistrationPoint(checked);\r\n                    }\r\n                };\r\n                return ControlPanel;\r\n            }());\r\n            menus.ControlPanel = ControlPanel;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var MultiList = (function (_super) {\r\n                __extends(MultiList, _super);\r\n                function MultiList(node, templates, maxItems) {\r\n                    var _this = _super.call(this, node, templates[0].template, maxItems) || this;\r\n                    _this._templates = templates;\r\n                    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\r\n                        var template = templates_1[_i];\r\n                        template.template.classList.add(\"hide\");\r\n                    }\r\n                    return _this;\r\n                }\r\n                MultiList.prototype.createItemFromLookup = function (templateLookup, bubbleSelect) {\r\n                    var _this = this;\r\n                    if (bubbleSelect === void 0) { bubbleSelect = true; }\r\n                    var template = this._getTemplateFromLookup(templateLookup);\r\n                    if (template == null)\r\n                        return;\r\n                    var item = new components.Item(template.template.cloneNode(true));\r\n                    item.Node.classList.remove(\"template\");\r\n                    item.Node.classList.add(\"hide\");\r\n                    if (bubbleSelect) {\r\n                        item.Node.addEventListener(\"click\", function () { return item.select(); });\r\n                    }\r\n                    item.addSelectListener(function (selected) {\r\n                        _this._index = _this.Items.indexOf(selected);\r\n                        if (_this._onSelectCallback != null)\r\n                            _this._onSelectCallback(_this._index);\r\n                    });\r\n                    return item;\r\n                };\r\n                MultiList.prototype._getTemplateFromLookup = function (lookup) {\r\n                    for (var _i = 0, _a = this._templates; _i < _a.length; _i++) {\r\n                        var template = _a[_i];\r\n                        if (template.lookup == lookup)\r\n                            return template;\r\n                    }\r\n                    return null;\r\n                };\r\n                return MultiList;\r\n            }(components.List));\r\n            components.MultiList = MultiList;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var Tooltip = (function (_super) {\r\n                __extends(Tooltip, _super);\r\n                function Tooltip(node) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    Tooltip._instance = _this;\r\n                    _this._tooltips = new Array();\r\n                    var tooltips = celestials.App.Node.querySelectorAll(\"[data-tooltip]\");\r\n                    for (var i = 0; i < tooltips.length; i++) {\r\n                        var tooltip = tooltips[i];\r\n                        Tooltip.addTooltip(tooltip);\r\n                    }\r\n                    Tooltip._instance.hide();\r\n                    return _this;\r\n                }\r\n                Object.defineProperty(Tooltip, \"DEF_DURATION\", {\r\n                    get: function () { return 1000; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(Tooltip, \"DEF_IDLE\", {\r\n                    get: function () { return 1000; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Tooltip.lookForTooltips = function (node) {\r\n                    var divs = node.querySelectorAll(\"*\");\r\n                    for (var i = 0; i < divs.length; i++) {\r\n                        var div = divs[i];\r\n                        if (div != null) {\r\n                            if (div.dataset.tooltip != null)\r\n                                Tooltip.addTooltip(div, div.dataset.tooltip);\r\n                        }\r\n                    }\r\n                };\r\n                Tooltip.addTooltip = function (tooltip, text) {\r\n                    if (Tooltip._instance._tooltips.indexOf(tooltip) - -1)\r\n                        return;\r\n                    Tooltip._instance._tooltips.push(tooltip);\r\n                    if (tooltip.dataset.tooltip == null) {\r\n                        if (text != null)\r\n                            tooltip.setAttribute('data-tooltip', text);\r\n                    }\r\n                    tooltip.addEventListener(\"mouseenter\", Tooltip._instance._onHover.bind(Tooltip._instance));\r\n                    tooltip.addEventListener(\"mouseleave\", Tooltip._instance._onHoverOut.bind(Tooltip._instance));\r\n                    console.log(\"ADDED TO TOOLTIPS\");\r\n                    console.log(tooltip);\r\n                };\r\n                Tooltip.showTooltipOnElement = function (text, element, duration, useDelay) {\r\n                    if (duration === void 0) { duration = Tooltip.DEF_DURATION; }\r\n                    if (useDelay === void 0) { useDelay = true; }\r\n                    Tooltip.showTooltip(text, element.offsetLeft, element.offsetTop, duration);\r\n                };\r\n                Tooltip.showTooltip = function (text, x, y, duration) {\r\n                    if (duration === void 0) { duration = Tooltip.DEF_DURATION; }\r\n                    Tooltip._instance._node.innerHTML = text;\r\n                    Tooltip._instance.show();\r\n                    x = x || celestials.App.MousePosition.x;\r\n                    y = y || celestials.App.MousePosition.y;\r\n                    y += 15;\r\n                    var width = Tooltip._instance._node.getBoundingClientRect().width;\r\n                    var height = Tooltip._instance._node.getBoundingClientRect().height;\r\n                    if (x + width > celestials.App.Bounds.Right)\r\n                        x = celestials.App.Bounds.Right - width;\r\n                    if (y + height > celestials.App.Bounds.Bottom)\r\n                        y = celestials.App.Bounds.Top - height;\r\n                    Tooltip._instance.X = x;\r\n                    Tooltip._instance.Y = y;\r\n                    Tooltip._instance._durationTimer = setTimeout(function () {\r\n                        Tooltip._instance.hide();\r\n                        Tooltip._instance.reset();\r\n                    }, duration);\r\n                };\r\n                Tooltip.getMessageDuration = function (message) {\r\n                    return message.length * 0.07 * 1000;\r\n                };\r\n                Tooltip.prototype.reset = function () {\r\n                    if (Tooltip._instance._durationTimer != null)\r\n                        celestials.App.Window.clearTimeout(Tooltip._instance._durationTimer);\r\n                    if (Tooltip._instance._idleTimer != null)\r\n                        celestials.App.Window.clearTimeout(Tooltip._instance._idleTimer);\r\n                };\r\n                Tooltip.prototype._onHover = function (e) {\r\n                    var element = e.target;\r\n                    if (element == null)\r\n                        return;\r\n                    if (element.dataset.tooltip == null)\r\n                        element = element.closest(\"[data-tooltip]\");\r\n                    var text = element.dataset.tooltip;\r\n                    this._idleTimer = setTimeout(function () {\r\n                        return Tooltip.showTooltip(element.dataset.tooltip, celestials.App.MousePosition.x, celestials.App.MousePosition.y, Tooltip.getMessageDuration(element.dataset.tooltip));\r\n                    }, Tooltip.DEF_IDLE);\r\n                };\r\n                Tooltip.prototype._onHoverOut = function (e) {\r\n                    var element = e.target;\r\n                    if (element == null)\r\n                        return;\r\n                    if (element.dataset.tooltip == null)\r\n                        element = element.closest(\"[data-tooltip]\");\r\n                    this.reset();\r\n                    this.hide();\r\n                };\r\n                return Tooltip;\r\n            }(menus.OverlayMenu));\r\n            menus.Tooltip = Tooltip;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials_1) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CelestialsPanel = (function (_super) {\r\n                __extends(CelestialsPanel, _super);\r\n                function CelestialsPanel(node) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    CelestialsPanel._instance = _this;\r\n                    _this._node.querySelector(\".ui.close\").addEventListener(\"click\", function () { return _this.hide(); });\r\n                    CelestialsPanel._celestialsList = new ui.components.MultiList(_this._node.querySelector(\".list\"), [\r\n                        { \"lookup\": \"normal\", \"template\": _this._node.querySelector(\".item.celestial\") },\r\n                        { \"lookup\": \"locked\", \"template\": _this._node.querySelector(\".item.celestial--locked\") }\r\n                    ]);\r\n                    _this.hide();\r\n                    return _this;\r\n                }\r\n                CelestialsPanel.show = function () {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var celestials, _loop_7, _i, celestials_2, cel;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    CelestialsPanel._instance.show();\r\n                                    CelestialsPanel._celestialsList.clear();\r\n                                    celestials = celestials_1.managers.CelestialsManager.Templates;\r\n                                    celestials = celestials.sort(function (a, b) {\r\n                                        var lookup = a.Lookup.localeCompare(b.Lookup);\r\n                                        if (a.Data.locked && b.Data.locked)\r\n                                            return lookup;\r\n                                        if (lookup < 0 && a.Data.locked)\r\n                                            return 1;\r\n                                        return lookup;\r\n                                    });\r\n                                    console.log(\"MAKE THE ICONS\");\r\n                                    _loop_7 = function (cel) {\r\n                                        var locked, item, message_1;\r\n                                        return __generator(this, function (_a) {\r\n                                            switch (_a.label) {\r\n                                                case 0:\r\n                                                    locked = cel.Data.locked || false;\r\n                                                    item = CelestialsPanel._celestialsList.createItemFromLookup((!locked) ? \"normal\" : \"locked\");\r\n                                                    if (!!locked) return [3, 2];\r\n                                                    item.Node.querySelector(\".name\").innerHTML = cel.Lookup;\r\n                                                    return [4, cel.getIcon()\r\n                                                            .then(function (src) { return item.Node.querySelector(\"img\").src = src; })];\r\n                                                case 1:\r\n                                                    _a.sent();\r\n                                                    menus.Tooltip.addTooltip(item.Node, \"Click to spawn \" + cel.Name + \"!\");\r\n                                                    celestials_1.managers.MouseManager.listenForMouseDown(item.Node, function (x, y) { return CelestialsPanel._instance._onCelestialsItemClicked(item, x, y); });\r\n                                                    item.Node.querySelector(\"img\").ondragstart = function () { return false; };\r\n                                                    return [3, 3];\r\n                                                case 2:\r\n                                                    message_1 = 'This celestial is currently locked.  Be patient!';\r\n                                                    celestials_1.managers.MouseManager.listenForMouseDown(item.Node, function (x, y) { return menus.Tooltip.showTooltip(message_1, x, y, menus.Tooltip.getMessageDuration(message_1)); });\r\n                                                    menus.Tooltip.addTooltip(item.Node, message_1);\r\n                                                    _a.label = 3;\r\n                                                case 3:\r\n                                                    CelestialsPanel._celestialsList.addItemToList(item);\r\n                                                    return [2];\r\n                                            }\r\n                                        });\r\n                                    };\r\n                                    _i = 0, celestials_2 = celestials;\r\n                                    _a.label = 1;\r\n                                case 1:\r\n                                    if (!(_i < celestials_2.length)) return [3, 4];\r\n                                    cel = celestials_2[_i];\r\n                                    return [5, _loop_7(cel)];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    _a.label = 3;\r\n                                case 3:\r\n                                    _i++;\r\n                                    return [3, 1];\r\n                                case 4: return [2];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                CelestialsPanel.prototype._onCelestialsItemClicked = function (item, x, y) {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var template, cel;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    console.log(\"CLICKED\");\r\n                                    template = item.Node.querySelector(\".name\").innerHTML;\r\n                                    return [4, celestials_1.managers.CelestialsManager.addCelestialByLookupAtPosition(template, x, y)];\r\n                                case 1:\r\n                                    cel = _a.sent();\r\n                                    if (cel != null) {\r\n                                        celestials_1.managers.CelestialsManager.onGrab(cel, x, y);\r\n                                        celestials_1.managers.MouseManager.startDrag(cel.Node);\r\n                                    }\r\n                                    return [2];\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                return CelestialsPanel;\r\n            }(menus.OverlayMenu));\r\n            menus.CelestialsPanel = CelestialsPanel;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials_1.ui || (celestials_1.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CurrentCelestialsPanel = (function (_super) {\r\n                __extends(CurrentCelestialsPanel, _super);\r\n                function CurrentCelestialsPanel(node) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP._instance = _this;\r\n                    CCP._instance._itemTemplate = _this._node.querySelector(\".item.celestial\");\r\n                    _this._node.querySelector(\".ui.close\").addEventListener(\"click\", function () { return CCP.hide(); });\r\n                    CCP._instance._itemList = new ui.components.List(_this._node.querySelector(\".list\"), _this._node.querySelector(\".item.celestial\"));\r\n                    CCP._instance._itemList.addSelectListener(function (index, item) { return CCP._onSelectItem(item); });\r\n                    var sortRadios = _this._node.querySelectorAll(\"input[name='sort']\");\r\n                    var _loop_8 = function (i) {\r\n                        sortRadios[i].addEventListener(\"change\", function () { return CCP._onRadioSelect(sortRadios[i].value); });\r\n                    };\r\n                    for (var i = 0; i < sortRadios.length; i++) {\r\n                        _loop_8(i);\r\n                    }\r\n                    CCP._instance._itemList.clear();\r\n                    for (var _i = 0, _a = celestials.managers.CelestialsManager.Celestials; _i < _a.length; _i++) {\r\n                        var cel = _a[_i];\r\n                        var item = CCP.createItem(cel);\r\n                        CCP._instance._itemList.addItemToList(item);\r\n                    }\r\n                    CCP.changeSortType('name');\r\n                    celestials.managers.CelestialsManager.listenForCelestialChanges(function (change) { return CCP._onCelestialChange(change); });\r\n                    CurrentCelestialsPanel.hide();\r\n                    return _this;\r\n                }\r\n                CurrentCelestialsPanel.show = function () {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP._instance.show();\r\n                    CCP.sortItems();\r\n                };\r\n                CurrentCelestialsPanel.hide = function () {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP._instance.hide();\r\n                    if (CCP._instance._selectedItem != null) {\r\n                        CCP._instance._selectedItem.deselect();\r\n                        CCP._instance._selectedItem = null;\r\n                    }\r\n                };\r\n                CurrentCelestialsPanel.selectCelestial = function (celestial) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    var item = CCP.findItemByCelestial(celestial);\r\n                    if (item == null)\r\n                        return;\r\n                    CCP._instance._itemList.selectItem(CCP._instance._itemList.Items.indexOf(item));\r\n                    item.Node.scrollIntoView();\r\n                };\r\n                CurrentCelestialsPanel.createItem = function (celestial) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    var item = new menus.CurrentCelestialsItem(CCP._instance._itemTemplate.cloneNode(true), celestial, function (item) { return CCP._onChangeItem(item); }, function (item) { return CCP._onRemoveItem(item); }, function (item) { return CCP._onUpdateItem(item); });\r\n                    CCP._instance._itemList.setupItem(item);\r\n                    return item;\r\n                };\r\n                CurrentCelestialsPanel.changeSortType = function (value) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP._instance._sortType = value;\r\n                    console.log(\"CHANGED TO: \" + value);\r\n                    CCP.sortItems();\r\n                    if (CCP._instance._selectedItem != null)\r\n                        CCP._instance._selectedItem.Node.scrollIntoView();\r\n                };\r\n                CurrentCelestialsPanel.findItemByCelestial = function (celestial) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    for (var _i = 0, _a = CCP._instance._itemList.Items; _i < _a.length; _i++) {\r\n                        var item = _a[_i];\r\n                        if (item.Celestial == celestial)\r\n                            return item;\r\n                    }\r\n                    return null;\r\n                };\r\n                CurrentCelestialsPanel.sortItem = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP._instance._itemList.removeItem(item, false);\r\n                    var index = CCP.getSortIndex(item);\r\n                    CCP._instance._itemList.addItemAt(item, index);\r\n                };\r\n                CurrentCelestialsPanel.getSortIndex = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    var items = CCP._instance._itemList.Items.map(function (item) { return item; });\r\n                    var index = -1;\r\n                    var sortType = CurrentCelestialsPanel._instance._sortType;\r\n                    for (var i = 0; i < items.length; i++) {\r\n                        index++;\r\n                        var compareCel = items[i].Celestial;\r\n                        if (compareCel == item.Celestial)\r\n                            continue;\r\n                        if (sortType == 'name')\r\n                            if (item.Celestial.Name.localeCompare(compareCel.Name) < 0)\r\n                                return index;\r\n                        if (sortType == 'type') {\r\n                            if (item.Celestial.Lookup.localeCompare(compareCel.Lookup) < 0)\r\n                                return index;\r\n                            if (item.Celestial.Name.localeCompare(compareCel.Name) < 0)\r\n                                return index;\r\n                        }\r\n                        if (sortType == 'date')\r\n                            if (item.Celestial.DateSpawned.getTime() > compareCel.DateSpawned.getTime())\r\n                                return index;\r\n                    }\r\n                    return index += 1;\r\n                };\r\n                CurrentCelestialsPanel.sortItems = function () {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    console.log(CCP._instance._itemList.Items.length);\r\n                    var items = CCP._instance._itemList.Items.map(function (item) { return item; });\r\n                    console.log(items);\r\n                    switch (CCP._instance._sortType) {\r\n                        case 'name':\r\n                            items = items.sort(function (a, b) {\r\n                                return a.Celestial.Name.localeCompare(b.Celestial.Name);\r\n                            });\r\n                            break;\r\n                        case 'type':\r\n                            items = items.sort(function (a, b) {\r\n                                return a.Celestial.Lookup.localeCompare(b.Celestial.Lookup);\r\n                            });\r\n                            break;\r\n                        case 'date':\r\n                            items = items.sort(function (a, b) {\r\n                                if (a.Celestial.DateSpawned.getTime() > b.Celestial.DateSpawned.getTime())\r\n                                    return -1;\r\n                                else if (a.Celestial.DateSpawned.getTime() < b.Celestial.DateSpawned.getTime())\r\n                                    return 1;\r\n                                return 0;\r\n                            });\r\n                            break;\r\n                    }\r\n                    CCP._instance._itemList.clear();\r\n                    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n                        var item = items_1[_i];\r\n                        CCP._instance._itemList.addItemToList(item);\r\n                    }\r\n                    CCP._instance._itemList.setItems(items);\r\n                };\r\n                CurrentCelestialsPanel._onSelectItem = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    if (CCP._instance._selectedItem == item)\r\n                        return;\r\n                    if (CCP._instance._selectedItem != null)\r\n                        CCP._instance._selectedItem.deselect();\r\n                    CCP._instance._selectedItem = item;\r\n                    if (menus.CelestialDetails.isShowing)\r\n                        menus.CelestialDetails.show(CCP._instance._selectedItem.Celestial);\r\n                };\r\n                CurrentCelestialsPanel._onRadioSelect = function (value) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP.changeSortType(value);\r\n                };\r\n                CurrentCelestialsPanel._onChangeItem = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP.sortItem(item);\r\n                };\r\n                CurrentCelestialsPanel._onRemoveItem = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    celestials.managers.CelestialsManager.removeCelestial(item.Celestial);\r\n                };\r\n                CurrentCelestialsPanel._onUpdateItem = function (item) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    CCP.sortItem(item);\r\n                };\r\n                CurrentCelestialsPanel._onCelestialChange = function (change) {\r\n                    var CCP = CurrentCelestialsPanel;\r\n                    if (change == null)\r\n                        return;\r\n                    if (change.delete != null) {\r\n                        var item = this.findItemByCelestial(change.delete);\r\n                        if (item != null)\r\n                            CCP._instance._itemList.removeItem(item, false);\r\n                    }\r\n                    if (change.add != null) {\r\n                        var item = CCP.createItem(change.add);\r\n                        CCP.sortItem(item);\r\n                    }\r\n                };\r\n                return CurrentCelestialsPanel;\r\n            }(menus.OverlayMenu));\r\n            menus.CurrentCelestialsPanel = CurrentCelestialsPanel;\r\n            ;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CelestialDetails = (function (_super) {\r\n                __extends(CelestialDetails, _super);\r\n                function CelestialDetails(node) {\r\n                    var _this = _super.call(this, node, null) || this;\r\n                    CelestialDetails._instance = _this;\r\n                    _this._node.querySelector(\".ui.close\").addEventListener(\"click\", function () { return CelestialDetails.hide(); });\r\n                    _this._node.querySelector(\".ui.view\").addEventListener(\"click\", function () { return _this._onShowInView(); });\r\n                    _this._staticElements = {\r\n                        lookup: _this._node.querySelector(\"[data-detail='lookup']\"),\r\n                        dateSpawned: _this._node.querySelector(\"[data-detail='date-spawned']\"),\r\n                        rarity: _this._node.querySelector(\"[data-detail='rarity']\"),\r\n                        favouriteAction: _this._node.querySelector(\"[data-detail='favourite-action']\"),\r\n                        availableActions: _this._node.querySelector(\"[data-detail='available-actions']\"),\r\n                        spawnedBy: _this._node.querySelector(\"[data-detail='spawned-by']\"),\r\n                        attentionSpan: _this._node.querySelector(\"[data-detail='attention-span']\"),\r\n                    };\r\n                    _this._activeElements = {\r\n                        name: _this._node.querySelector(\"[data-detail='name']\"),\r\n                        age: _this._node.querySelector(\"[data-detail='age']\"),\r\n                        size: _this._node.querySelector(\"[data-detail='size']\"),\r\n                        mass: _this._node.querySelector(\"[data-detail='mass']\"),\r\n                        currentAction: _this._node.querySelector(\"[data-detail='current-action']\"),\r\n                        descendants: _this._node.querySelector(\"[data-detail='descendants']\"),\r\n                        friends: _this._node.querySelector(\"[data-detail='friends']\"),\r\n                        enemies: _this._node.querySelector(\"[data-detail='enemies']\"),\r\n                        socialNeeds: _this._node.querySelector(\"[data-detail='social-need']\"),\r\n                        hungerNeeds: _this._node.querySelector(\"[data-detail='hunger-need']\"),\r\n                        restNeeds: _this._node.querySelector(\"[data-detail='rest-need']\"),\r\n                        screenshot: _this._node.querySelector(\"[data-detail='screenshot'\")\r\n                    };\r\n                    _this._moodToggle = {\r\n                        disable: _this._node.querySelector(\".mood .disabled\"),\r\n                        enable: _this._node.querySelector(\".mood .enabled\")\r\n                    };\r\n                    CelestialDetails.hide();\r\n                    CelestialDetails.hideMood();\r\n                    return _this;\r\n                }\r\n                CelestialDetails.show = function (celestial) {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var instance, dateSpawned, span;\r\n                        return __generator(this, function (_a) {\r\n                            CelestialDetails._instance.show();\r\n                            instance = CelestialDetails._instance;\r\n                            instance._celestial = celestial;\r\n                            instance._staticElements.lookup.innerHTML = celestial.Lookup;\r\n                            dateSpawned = celestial.DateSpawned;\r\n                            instance._staticElements.dateSpawned.innerHTML = dateSpawned.getMonth() + 1 + \"/\" + dateSpawned.getDate() + \"/\" + dateSpawned.getFullYear();\r\n                            instance._staticElements.rarity.innerHTML = \"TODO\";\r\n                            instance._staticElements.attentionSpan.innerHTML = celestial.Logic.AttentionSpan.toFixed(1) + \"%\";\r\n                            instance._staticElements.favouriteAction.innerHTML = celestial.FavouriteSequence;\r\n                            instance._staticElements.availableActions.innerHTML = celestial.AvailableSequences.join(\", \");\r\n                            if (celestial.SpawnedBy != null) {\r\n                                instance._staticElements.spawnedBy.innerHTML = \"\";\r\n                                span = document.createElement(\"span\");\r\n                                span.classList.add(\"link\");\r\n                                span.innerHTML = celestial.SpawnedBy.Name;\r\n                                instance._staticElements.spawnedBy.appendChild(span);\r\n                                span.addEventListener(\"click\", function () {\r\n                                    ui.menus.CelestialDetails.show(celestial.SpawnedBy);\r\n                                    ui.menus.CurrentCelestialsPanel.selectCelestial(celestial.SpawnedBy);\r\n                                });\r\n                            }\r\n                            else\r\n                                instance._staticElements.spawnedBy.innerHTML = \"User Action\";\r\n                            instance._rebuildList(celestial.Descendants, instance._lastDescendantsLength, instance._activeElements.descendants, true);\r\n                            instance._rebuildList(celestial.Relationships.Friends.map(function (value) { return value.celestial; }), instance._lastFriendsLength, instance._activeElements.friends, true);\r\n                            instance._rebuildList(celestial.Relationships.Enemies.map(function (value) { return value.celestial; }), instance._lastEnemiesLength, instance._activeElements.enemies, true);\r\n                            instance.update();\r\n                            instance._activeElements.screenshot.style.filter = celestial.MainImage.style.filter;\r\n                            instance._updateTimer = setInterval(instance.update.bind(instance), 100);\r\n                            return [2];\r\n                        });\r\n                    });\r\n                };\r\n                CelestialDetails.hide = function () {\r\n                    CelestialDetails._instance.hide();\r\n                    celestials.App.Window.clearInterval(CelestialDetails._instance._updateTimer);\r\n                };\r\n                CelestialDetails.showMood = function () {\r\n                    var instance = CelestialDetails._instance;\r\n                    instance._moodToggle.enable.classList.remove(\"hide\");\r\n                    instance._moodToggle.disable.classList.add(\"hide\");\r\n                };\r\n                CelestialDetails.hideMood = function () {\r\n                    var instance = CelestialDetails._instance;\r\n                    instance._moodToggle.disable.classList.remove(\"hide\");\r\n                    instance._moodToggle.enable.classList.add(\"hide\");\r\n                };\r\n                CelestialDetails.prototype._setProgress = function (bar, mood) {\r\n                    var value = mood.value;\r\n                    bar.style.width = value + \"%\";\r\n                    bar.parentElement.classList.remove(\"low\");\r\n                    bar.parentElement.classList.remove(\"high\");\r\n                    if (value < 20)\r\n                        bar.parentElement.classList.add(\"low\");\r\n                    else if (value > 80)\r\n                        bar.parentElement.classList.add(\"high\");\r\n                };\r\n                CelestialDetails.prototype._grabScreenshot = function (forceChange) {\r\n                    if (forceChange === void 0) { forceChange = false; }\r\n                    var instance = CelestialDetails._instance;\r\n                    var lastSrc = instance._activeElements.screenshot.src;\r\n                    var mainImage = instance._celestial.MainImage;\r\n                    var currSrc = mainImage.src;\r\n                    if (lastSrc != currSrc || forceChange) {\r\n                        instance._activeElements.screenshot.src = currSrc;\r\n                        this._activeElements.screenshot.style.width = mainImage.width + \"px\";\r\n                        this._activeElements.screenshot.style.height = mainImage.height + \"px\";\r\n                    }\r\n                };\r\n                CelestialDetails.prototype._rebuildDescendants = function (firstTime) {\r\n                    if (firstTime === void 0) { firstTime = false; }\r\n                    if (this._celestial == null)\r\n                        return;\r\n                    var descendants = this._celestial.Descendants;\r\n                    if (descendants.length != this._lastDescendantsLength || firstTime) {\r\n                        this._activeElements.descendants.innerHTML = \"\";\r\n                        var _loop_9 = function (i) {\r\n                            var desc = descendants[i];\r\n                            var span = document.createElement(\"span\");\r\n                            span.classList.add(\"link\");\r\n                            span.innerHTML = desc.Name;\r\n                            this_3._activeElements.descendants.appendChild(span);\r\n                            if (i < descendants.length - 1) {\r\n                                var commaSpan = document.createElement(\"span\");\r\n                                commaSpan.innerHTML = \", \";\r\n                                this_3._activeElements.descendants.appendChild(commaSpan);\r\n                            }\r\n                            span.addEventListener(\"click\", function () {\r\n                                ui.menus.CelestialDetails.show(desc);\r\n                                ui.menus.CurrentCelestialsPanel.selectCelestial(desc);\r\n                            });\r\n                        };\r\n                        var this_3 = this;\r\n                        for (var i = 0; i < descendants.length; i++) {\r\n                            _loop_9(i);\r\n                        }\r\n                    }\r\n                };\r\n                CelestialDetails.prototype._rebuildList = function (list, lastLength, container, firstTime) {\r\n                    if (firstTime === void 0) { firstTime = false; }\r\n                    if (this._celestial == null)\r\n                        return;\r\n                    if (list.length != lastLength || firstTime) {\r\n                        container.innerHTML = \"\";\r\n                        var _loop_10 = function (i) {\r\n                            var item = list[i];\r\n                            var span = document.createElement(\"span\");\r\n                            span.classList.add(\"link\");\r\n                            span.innerHTML = item.Name;\r\n                            container.appendChild(span);\r\n                            if (i < list.length - 1) {\r\n                                var commaSpan = document.createElement(\"span\");\r\n                                commaSpan.innerHTML = \", \";\r\n                                container.appendChild(commaSpan);\r\n                            }\r\n                            span.addEventListener(\"click\", function () {\r\n                                ui.menus.CelestialDetails.show(item);\r\n                                ui.menus.CurrentCelestialsPanel.selectCelestial(item);\r\n                            });\r\n                        };\r\n                        for (var i = 0; i < list.length; i++) {\r\n                            _loop_10(i);\r\n                        }\r\n                    }\r\n                };\r\n                CelestialDetails.prototype._onShowInView = function () {\r\n                    if (this._celestial != null)\r\n                        menus.CurrentCelestialsPanel.selectCelestial(this._celestial);\r\n                };\r\n                CelestialDetails.prototype.update = function () {\r\n                    this._activeElements.name.innerHTML = this._celestial.Name;\r\n                    this._staticElements.lookup.innerHTML = this._celestial.Lookup;\r\n                    this._activeElements.age.innerHTML = this._celestial.Age.toFixed(2);\r\n                    this._activeElements.size.innerHTML = this._celestial.Size.toFixed(2);\r\n                    this._activeElements.mass.innerHTML = this._celestial.Mass.toFixed(2) + \" souls\";\r\n                    this._activeElements.currentAction.innerHTML = this._celestial.Sequencer.CurrentSequence.name;\r\n                    this._rebuildList(this._celestial.Descendants, this._lastDescendantsLength, this._activeElements.descendants);\r\n                    this._rebuildList(this._celestial.Relationships.Friends.map(function (value) { return value.celestial; }), this._lastFriendsLength, this._activeElements.friends);\r\n                    this._rebuildList(this._celestial.Relationships.Enemies.map(function (value) { return value.celestial; }), this._lastEnemiesLength, this._activeElements.enemies);\r\n                    this._setProgress(this._activeElements.socialNeeds, this._celestial.Moods.getMoodByName(celestials.engines.Moods.MOOD.Social));\r\n                    this._setProgress(this._activeElements.hungerNeeds, this._celestial.Moods.getMoodByName(celestials.engines.Moods.MOOD.Hunger));\r\n                    this._setProgress(this._activeElements.restNeeds, this._celestial.Moods.getMoodByName(celestials.engines.Moods.MOOD.Rest));\r\n                    this._grabScreenshot();\r\n                    this._lastDescendantsLength = this._celestial.Descendants.length;\r\n                    this._lastFriendsLength = this._celestial.Relationships.Friends.length;\r\n                    this._lastEnemiesLength = this._celestial.Relationships.Enemies.length;\r\n                };\r\n                Object.defineProperty(CelestialDetails, \"isShowing\", {\r\n                    get: function () { return CelestialDetails._instance._isShowing; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                Object.defineProperty(CelestialDetails, \"CurrentCelestial\", {\r\n                    get: function () { return CelestialDetails._instance._celestial; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return CelestialDetails;\r\n            }(menus.OverlayMenu));\r\n            menus.CelestialDetails = CelestialDetails;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var App = (function () {\r\n        function App(win, node) {\r\n            App._instance = this;\r\n            App._window = win;\r\n            App._node = node;\r\n            App._paused = false;\r\n            App._usesMood = false;\r\n        }\r\n        App.setup = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var celestialsMan, controls, debug;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            console.log(\"SETUP\");\r\n                            App._bounds = new celestials.Rect(App._node.offsetLeft, App._node.offsetTop, App._node.offsetWidth, App._node.offsetHeight);\r\n                            return [4, new celestials.systems.Collision()];\r\n                        case 1:\r\n                            _a.sent();\r\n                            return [4, new celestials.managers.MouseManager()];\r\n                        case 2:\r\n                            _a.sent();\r\n                            return [4, new celestials.managers.InputManager()];\r\n                        case 3:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.Tooltip(document.querySelector(\".overlay-menu.tooltip\"))];\r\n                        case 4:\r\n                            _a.sent();\r\n                            return [4, new celestials.managers.CelestialsManager()];\r\n                        case 5:\r\n                            celestialsMan = _a.sent();\r\n                            return [4, celestialsMan.setup()];\r\n                        case 6:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.CelestialContext(document.querySelector(\".context-menu.celestial\"))];\r\n                        case 7:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.ApplicationContext(document.querySelector(\".context-menu.application\"))];\r\n                        case 8:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.NotificationBar(document.querySelector(\".overlay-menu.notifications-bar\"), document.querySelector(\".notifications-bar-bounds\"))];\r\n                        case 9:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.NotificationPanel(document.querySelector(\".overlay-menu.notifications-panel\"))];\r\n                        case 10:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.CelestialsPanel(document.querySelector(\".overlay-menu.celestials\"))];\r\n                        case 11:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.CurrentCelestialsPanel(document.querySelector(\".overlay-menu.current-celestials\"))];\r\n                        case 12:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.CelestialDetails(document.querySelector(\".overlay-menu.celestial-details\"))];\r\n                        case 13:\r\n                            _a.sent();\r\n                            return [4, new celestials.ui.menus.ControlPanel(document.querySelector(\".overlay-menu.control-panel\"))];\r\n                        case 14:\r\n                            _a.sent();\r\n                            celestials.systems.Notifications.addNotification(\"This is a test!\", celestials.systems.Notifications.TYPE.Notify);\r\n                            celestials.systems.Notifications.addNotification(\"This is a test for failure!\", celestials.systems.Notifications.TYPE.Fail);\r\n                            return [4, new celestials.systems.Controls()];\r\n                        case 15:\r\n                            controls = _a.sent();\r\n                            return [4, new celestials.systems.Debugger()];\r\n                        case 16:\r\n                            debug = _a.sent();\r\n                            setInterval(function () {\r\n                                if (App._paused)\r\n                                    return;\r\n                                celestials.managers.InputManager.update();\r\n                                celestials.managers.CelestialsManager.update();\r\n                                celestials.systems.Collision.update();\r\n                            }, 1000 / 30);\r\n                            return [2];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        App.pause = function () {\r\n            App._paused = true;\r\n        };\r\n        App.resume = function () {\r\n            App._paused = false;\r\n        };\r\n        Object.defineProperty(App, \"Window\", {\r\n            get: function () { return App._window; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(App, \"Node\", {\r\n            get: function () { return this._node; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(App, \"Bounds\", {\r\n            get: function () { return App._bounds; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(App, \"MousePosition\", {\r\n            get: function () { return celestials.managers.MouseManager.MousePosition; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(App, \"Paused\", {\r\n            get: function () { return App._paused; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(App, \"UsesMood\", {\r\n            get: function () { return App._usesMood; },\r\n            set: function (value) { App._usesMood = value; },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return App;\r\n    }());\r\n    celestials.App = App;\r\n    var _window = window;\r\n    function setupApp() {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        new App(window, document.querySelector(\".screen\"));\r\n                        return [4, App.setup()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _window.celestials = celestials.managers.CelestialsManager;\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    setupApp();\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var engines;\r\n    (function (engines) {\r\n        var Physics = (function () {\r\n            function Physics(entity) {\r\n                this._entity = entity;\r\n                this._gravity = Physics.DEF_GRAVITY;\r\n                this._usesGravity = true;\r\n                this._velocity = {\r\n                    x: 0,\r\n                    y: 0\r\n                };\r\n                this._degradeVelocity = 0.75;\r\n                if (this._entity.Data.physics != null) {\r\n                    var data = this._entity.Data.physics;\r\n                    if (data.gravity != null)\r\n                        this._gravity = data.gravity;\r\n                    if (data.degradeVelocity != null)\r\n                        this._degradeVelocity = data.degradeVelocity;\r\n                    if (data.usesGravity != null)\r\n                        this._usesGravity = data.usesGravity;\r\n                }\r\n                this._onWallHitListener = null;\r\n            }\r\n            Object.defineProperty(Physics, \"WALL\", {\r\n                get: function () { return Object.freeze({ \"Top\": 0, \"Right\": 1, \"Bottom\": 2, \"Left\": 3 }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Physics, \"DEF_GRAVITY\", {\r\n                get: function () { return 10; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Physics.prototype.addForceX = function (value) {\r\n                this._velocity.x += value;\r\n            };\r\n            Physics.prototype.addForceY = function (value) {\r\n                this._velocity.y += value;\r\n                this.update();\r\n            };\r\n            Physics.prototype.zeroVelocity = function () {\r\n                this._velocity.x = 0;\r\n                this._velocity.y = 0;\r\n                console.log(\"ZEROED OUT\");\r\n            };\r\n            Physics.prototype.setGravity = function (value) {\r\n                this._gravity = value;\r\n            };\r\n            Physics.prototype.resetGravity = function () {\r\n                this._gravity = this._entity.Data.physics.gravity || Physics.DEF_GRAVITY;\r\n            };\r\n            Physics.prototype.snapToLeft = function () {\r\n                this._entity.X = celestials.App.Bounds.Left + this._entity.RegistrationOffset.x;\r\n            };\r\n            Physics.prototype.snapToRight = function () {\r\n                this._entity.X = celestials.App.Bounds.Right - this._entity.Bounds.Width + this._entity.RegistrationOffset.x;\r\n            };\r\n            Physics.prototype.snapToTop = function () {\r\n                this._entity.Y = celestials.App.Bounds.Top + (this._entity.Bounds.Height - this._entity.RegistrationOffset.y);\r\n            };\r\n            Physics.prototype.keepInBounds = function () {\r\n                var screenBounds = celestials.App.Bounds;\r\n                var entityBounds = this._entity.Bounds;\r\n                var regOffset = this._entity.RegistrationOffset;\r\n                if (entityBounds.Left < screenBounds.Left) {\r\n                    this._entity.X = screenBounds.Left + regOffset.x;\r\n                    this.callWallHit(Physics.WALL.Left);\r\n                }\r\n                else if (entityBounds.Right > screenBounds.Right) {\r\n                    this._entity.X = screenBounds.Right - (entityBounds.Width - regOffset.x);\r\n                    this.callWallHit(Physics.WALL.Right);\r\n                }\r\n                if (entityBounds.Top < screenBounds.Top) {\r\n                    this._entity.Y = screenBounds.Top + (entityBounds.Height - regOffset.y);\r\n                    this.callWallHit(Physics.WALL.Top);\r\n                }\r\n                else if (entityBounds.Bottom > screenBounds.Bottom) {\r\n                    this._entity.Y = screenBounds.Bottom - regOffset.y;\r\n                    this.callWallHit(Physics.WALL.Bottom);\r\n                }\r\n            };\r\n            Physics.prototype.correctVelocity = function () {\r\n                var screenBounds = celestials.App.Bounds;\r\n                var entityBounds = this._entity.Bounds;\r\n                if (entityBounds.Left <= screenBounds.Left)\r\n                    if (this._velocity.x < 0)\r\n                        this._velocity.x = 0;\r\n                if (entityBounds.Right >= screenBounds.Right)\r\n                    if (this._velocity.x > 0)\r\n                        this._velocity.x = 0;\r\n                if (entityBounds.Top <= screenBounds.Top)\r\n                    if (this._velocity.y < 0)\r\n                        this._velocity.y = 0;\r\n                if (entityBounds.Bottom >= screenBounds.Bottom)\r\n                    if (this._velocity.y > 0)\r\n                        this._velocity.y = 0;\r\n            };\r\n            Physics.prototype.addWallHitListener = function (listener) {\r\n                this._onWallHitListener = listener;\r\n            };\r\n            Physics.prototype.removeWallHitListener = function () {\r\n                this._onWallHitListener = null;\r\n            };\r\n            Physics.prototype.callWallHit = function (wall) {\r\n                this._touchedWall = wall;\r\n                if (this._onWallHitListener != null)\r\n                    this._onWallHitListener(wall);\r\n            };\r\n            Physics.prototype.isTouchingWall = function () {\r\n                var walls = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    walls[_i] = arguments[_i];\r\n                }\r\n                var screenBounds = celestials.App.Bounds;\r\n                var entityBounds = this._entity.Bounds;\r\n                for (var _a = 0, walls_1 = walls; _a < walls_1.length; _a++) {\r\n                    var wall = walls_1[_a];\r\n                    switch (wall) {\r\n                        case Physics.WALL.Left:\r\n                            if (entityBounds.Left <= screenBounds.Left)\r\n                                return true;\r\n                            break;\r\n                        case Physics.WALL.Right:\r\n                            if (entityBounds.Right >= screenBounds.Right)\r\n                                return true;\r\n                            break;\r\n                        case Physics.WALL.Top:\r\n                            if (entityBounds.Top <= screenBounds.Top)\r\n                                return true;\r\n                            break;\r\n                        case Physics.WALL.Bottom:\r\n                            if (entityBounds.Bottom >= screenBounds.Bottom)\r\n                                return true;\r\n                            break;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            Physics.prototype.update = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                this._velocity.x *= this._degradeVelocity;\r\n                                this._velocity.y *= this._degradeVelocity;\r\n                                if (this._usesGravity) {\r\n                                    this._velocity.y += this._gravity;\r\n                                }\r\n                                return [4, this.correctVelocity()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                this._entity.X += this._velocity.x;\r\n                                this._entity.Y += this._velocity.y;\r\n                                return [4, this.keepInBounds()];\r\n                            case 2:\r\n                                _a.sent();\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            Object.defineProperty(Physics.prototype, \"Velocity\", {\r\n                get: function () { return { x: this._velocity.x, y: this._velocity.y }; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Physics.prototype, \"Gravity\", {\r\n                get: function () { return this._gravity; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Physics.prototype, \"LastTouchedWall\", {\r\n                get: function () { return this._touchedWall; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Physics;\r\n        }());\r\n        engines.Physics = Physics;\r\n    })(engines = celestials.engines || (celestials.engines = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var logic;\r\n    (function (logic) {\r\n        var Physics = celestials.engines.Physics;\r\n        var CelestialLogic = (function () {\r\n            function CelestialLogic(celestial, data) {\r\n                this._celestial = celestial;\r\n                this._updateRate = 1;\r\n                this._eagerness = 1;\r\n                this._attentionSpan = 50;\r\n                this._tick = 0;\r\n                this._updateTick = 0;\r\n                this._drawingFrame = false;\r\n                this._pauseIntegrityCheck = false;\r\n                if (data != null) {\r\n                    var updateRate = data.updateRate, eagerness = data.eagerness, attentionSpan = data.attentionSpan;\r\n                    if (updateRate != null)\r\n                        this._updateRate = celestials.clamp(updateRate, 1, 1000);\r\n                    if (eagerness != null)\r\n                        this._eagerness = celestials.clamp(eagerness, 1, 100);\r\n                    if (attentionSpan != null)\r\n                        this._attentionSpan = celestials.clamp(attentionSpan, 0, 100);\r\n                }\r\n            }\r\n            CelestialLogic.prototype.next = function () {\r\n                if (this._celestial.IsControlled)\r\n                    return;\r\n                this._tick += this._eagerness;\r\n                var locAttentionSpan = celestials.clamp(this._celestial.Sequencer.CurrentSequenceSet.attentionSpan || 100, 1, 100);\r\n                var attentionSpan = this._attentionSpan * (locAttentionSpan / 100);\r\n                var attention = celestials.randomRangeInt(this._tick, 100);\r\n                if ((attention > attentionSpan) || this._celestial.Sequencer.CurrentSequenceSet.runOnce || this._celestial.Sequencer.isCurrentState(celestials.engines.CelestialSequencer.STATE.Interact)) {\r\n                    this.nextState();\r\n                    this._tick = 0;\r\n                }\r\n                else {\r\n                    console.log(\"I'm not bored yet!\");\r\n                    var sequence = this._celestial.Sequencer.getRandomStateSequence(this._celestial.Sequencer.CurrentState);\r\n                    this._celestial.Sequencer.changeSequence(sequence);\r\n                }\r\n            };\r\n            CelestialLogic.prototype.nextState = function (state) {\r\n                if (state == null) {\r\n                    state = this._celestial.Sequencer.CurrentState;\r\n                    var nextStates = this._celestial.Sequencer.CurrentSequenceSet.transitionStates || celestials.engines.CelestialSequencer.DEFAULT_TRANSITIONAL_STATES;\r\n                    celestials.shuffleArray(nextStates);\r\n                    console.log(nextStates);\r\n                    var waitingForState = true;\r\n                    while (waitingForState) {\r\n                        for (var i = 0; i < nextStates.length; i++) {\r\n                            var stateName = celestials.engines.CelestialSequencer.STATE[nextStates[i]];\r\n                            if (this._celestial.Sequencer.changeState(stateName) != null) {\r\n                                waitingForState = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (waitingForState)\r\n                            throw new Error(\"The state: \" + state + \" does not have a transition state available.  Celestial \" + this._celestial.Name + \" is trapped!\");\r\n                    }\r\n                    console.log(\"Switched TO: \" + this._celestial.Sequencer.CurrentState);\r\n                    var sequence = this._celestial.Sequencer.getRandomStateSequence(this._celestial.Sequencer.CurrentState);\r\n                    this._celestial.Sequencer.changeSequence(sequence);\r\n                }\r\n            };\r\n            CelestialLogic.prototype.startState = function (stateName) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var state, sequence;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                this._pauseIntegrityCheck = true;\r\n                                return [4, this._celestial.Sequencer.changeState(stateName)];\r\n                            case 1:\r\n                                state = _a.sent();\r\n                                if (!(state != null)) return [3, 4];\r\n                                if (state != stateName) {\r\n                                    return [2, false];\r\n                                    this._pauseIntegrityCheck = false;\r\n                                }\r\n                                return [4, this._celestial.Sequencer.getRandomStateSequence(state)];\r\n                            case 2:\r\n                                sequence = _a.sent();\r\n                                if (!(sequence != null)) return [3, 4];\r\n                                return [4, this._celestial.Sequencer.changeSequence(sequence)];\r\n                            case 3:\r\n                                _a.sent();\r\n                                this._tick = 0;\r\n                                this._pauseIntegrityCheck = false;\r\n                                return [2, true];\r\n                            case 4:\r\n                                this._pauseIntegrityCheck = false;\r\n                                return [2, false];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype.tryEndState = function (stateName) {\r\n                if (this._celestial.Sequencer.isCurrentState(stateName))\r\n                    this.nextState();\r\n            };\r\n            CelestialLogic.prototype.handleWallHit = function (which) {\r\n                this._handleStateIntegrity(which);\r\n                if (which == Physics.WALL.Bottom && this._celestial.Sequencer.isCurrentState(celestials.engines.CelestialSequencer.STATE.Fall)) {\r\n                    if (!this.startState(celestials.engines.CelestialSequencer.STATE.Recover))\r\n                        this.next();\r\n                }\r\n            };\r\n            CelestialLogic.prototype.updateState = function () {\r\n                this._handleStateChange();\r\n            };\r\n            CelestialLogic.prototype.handleStateChange = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                this._pauseIntegrityCheck = true;\r\n                                this._celestial.Sequencer.reset();\r\n                                return [4, this._celestial.update()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                this.reset();\r\n                                return [4, this._handleStateChange()];\r\n                            case 2:\r\n                                _a.sent();\r\n                                return [4, this._handleStateNuance()];\r\n                            case 3:\r\n                                _a.sent();\r\n                                this._pauseIntegrityCheck = false;\r\n                                return [2];\r\n                        }\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype._handleStateChange = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var cs, lastState, currentState, lastTouchedWall;\r\n                    return __generator(this, function (_a) {\r\n                        cs = celestials.engines.CelestialSequencer;\r\n                        lastState = this._celestial.Sequencer.LastState;\r\n                        currentState = this._celestial.Sequencer.CurrentState;\r\n                        console.log(this._celestial.Sequencer.CurrentFrame.name);\r\n                        switch (currentState) {\r\n                            case cs.STATE.Idle:\r\n                            case cs.STATE.Walk:\r\n                                this._celestial.Physics.zeroVelocity();\r\n                            case cs.STATE.Fall:\r\n                                this._celestial.Physics.resetGravity();\r\n                                break;\r\n                            case cs.STATE.Climb:\r\n                                this._celestial.Physics.setGravity(0);\r\n                                this._celestial.Physics.zeroVelocity();\r\n                                lastTouchedWall = this._celestial.Physics.LastTouchedWall;\r\n                                if (lastTouchedWall != Physics.WALL.Left && lastTouchedWall != Physics.WALL.Right)\r\n                                    lastTouchedWall = (this._celestial.Bounds.Center.x < celestials.App.Bounds.Center.x) ? Physics.WALL.Left : Physics.WALL.Right;\r\n                                switch (lastTouchedWall) {\r\n                                    case Physics.WALL.Left:\r\n                                        this._celestial.Physics.snapToLeft();\r\n                                        this._celestial.setDirectionX(-1);\r\n                                        break;\r\n                                    case Physics.WALL.Right:\r\n                                        this._celestial.Physics.snapToRight();\r\n                                        this._celestial.setDirectionX(1);\r\n                                }\r\n                                break;\r\n                            case cs.STATE.Hang:\r\n                                this._celestial.Physics.zeroVelocity();\r\n                                this._celestial.Physics.setGravity(0);\r\n                                this._celestial.Physics.snapToTop();\r\n                                break;\r\n                            case cs.STATE.Hold:\r\n                                this._celestial.Physics.zeroVelocity();\r\n                                this._celestial.Physics.setGravity(0);\r\n                                break;\r\n                            case cs.STATE.Spawn:\r\n                            case cs.STATE.Interact:\r\n                                this._celestial.Physics.zeroVelocity();\r\n                                this._celestial.Physics.resetGravity();\r\n                                break;\r\n                        }\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype._handleStateNuance = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var cs, lastState, currentState;\r\n                    return __generator(this, function (_a) {\r\n                        cs = celestials.engines.CelestialSequencer;\r\n                        lastState = this._celestial.Sequencer.LastState;\r\n                        currentState = this._celestial.Sequencer.CurrentState;\r\n                        console.log(lastState, currentState);\r\n                        if (lastState == cs.STATE.Climb && currentState == cs.STATE.Hang) {\r\n                            console.log(\"I AM USING THE NUANCE\");\r\n                            this._celestial.Physics.addForceX(celestials.randomRange(20, 30) * this._celestial.Direction.x);\r\n                        }\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype._handleStateIntegrity = function (wallHit) {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var cs, lastState, currentState;\r\n                    return __generator(this, function (_a) {\r\n                        cs = celestials.engines.CelestialSequencer;\r\n                        lastState = this._celestial.Sequencer.LastState;\r\n                        currentState = this._celestial.Sequencer.CurrentState;\r\n                        if (this._celestial.IsControlled) {\r\n                            if (this._celestial.Physics.isTouchingWall(celestials.engines.Physics.WALL.Top))\r\n                                if (this._tryToHang(celestials.engines.Physics.WALL.Top))\r\n                                    return [2];\r\n                            if (this._celestial.Physics.isTouchingWall(Physics.WALL.Left, Physics.WALL.Right)) {\r\n                                if (!this._tryToClimb(wallHit))\r\n                                    this._celestial.flipX();\r\n                                return [2];\r\n                            }\r\n                        }\r\n                        switch (currentState) {\r\n                            case cs.STATE.Walk:\r\n                            case cs.STATE.Idle:\r\n                            case cs.STATE.Fall:\r\n                                if (!this._tryToClimb(wallHit))\r\n                                    this._celestial.flipX();\r\n                                break;\r\n                            case cs.STATE.Climb:\r\n                                if (this._tryToHang(wallHit))\r\n                                    break;\r\n                                if (!this._celestial.Physics.isTouchingWall(Physics.WALL.Left, Physics.WALL.Right)) {\r\n                                    this.nextState();\r\n                                    break;\r\n                                }\r\n                                if (this._celestial.Physics.isTouchingWall(Physics.WALL.Left) && this._celestial.Direction.x != -1) {\r\n                                    this.nextState();\r\n                                    break;\r\n                                }\r\n                                if (this._celestial.Physics.isTouchingWall(Physics.WALL.Right) && this._celestial.Direction.x != 1) {\r\n                                    this.nextState();\r\n                                    break;\r\n                                }\r\n                                break;\r\n                            case cs.STATE.Hang:\r\n                                if (wallHit != null)\r\n                                    if (wallHit == Physics.WALL.Left || wallHit == Physics.WALL.Right)\r\n                                        this._celestial.flipX();\r\n                                if (wallHit == null)\r\n                                    if (this._celestial.Bounds.Top > celestials.App.Bounds.Top)\r\n                                        this.nextState();\r\n                                break;\r\n                            case cs.STATE.Recover:\r\n                                if (this._celestial.Bounds.Bottom < celestials.App.Bounds.Bottom)\r\n                                    this.nextState();\r\n                                break;\r\n                            case cs.STATE.Hold:\r\n                                if (this._celestial.Physics.isTouchingWall(celestials.engines.Physics.WALL.Top))\r\n                                    this._tryToHang(celestials.engines.Physics.WALL.Top);\r\n                                else if (!this._celestial.IsControlled) {\r\n                                    if (!this._celestial.Physics.isTouchingWall(celestials.engines.Physics.WALL.Bottom)) {\r\n                                        if (!this.startState(celestials.engines.CelestialSequencer.STATE.Fall))\r\n                                            this.nextState();\r\n                                    }\r\n                                    else\r\n                                        this.nextState();\r\n                                }\r\n                                break;\r\n                            case cs.STATE.Fall:\r\n                                if (this._celestial.Physics.isTouchingWall(celestials.engines.Physics.WALL.Top)) {\r\n                                    this._tryToHang(celestials.engines.Physics.WALL.Top);\r\n                                }\r\n                                break;\r\n                        }\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype.handleStateComplete = function () {\r\n                var state = this._celestial.Sequencer.CurrentState;\r\n                var funcName = \"_complete\" + state[0].toUpperCase() + state.substr(1);\r\n                if (this[funcName] != null) {\r\n                    this._celestial.Physics.resetGravity();\r\n                    this[funcName]();\r\n                }\r\n            };\r\n            CelestialLogic.prototype.reset = function () {\r\n                this._tick = 0;\r\n            };\r\n            CelestialLogic.prototype.load = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    var _this = this;\r\n                    return __generator(this, function (_a) {\r\n                        return [2, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var state, sequence, e_2;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            _a.trys.push([0, 2, , 3]);\r\n                                            this._attentionSpan = celestials.clamp(this._attentionSpan + celestials.randomRange(-this._celestial.Variation, this._celestial.Variation), 0, 100);\r\n                                            state = this._celestial.Sequencer.changeState(celestials.engines.CelestialSequencer.STATE.Fall, celestials.engines.CelestialSequencer.STATE.Idle);\r\n                                            console.log(\"STATE: \" + state);\r\n                                            console.log(this._celestial.Sequencer.Sequences);\r\n                                            sequence = this._celestial.Sequencer.getRandomStateSequence(state);\r\n                                            this._celestial.Sequencer.changeSequence(sequence);\r\n                                            return [4, this._celestial.drawCurrentFrame()];\r\n                                        case 1:\r\n                                            _a.sent();\r\n                                            console.log(\"LOADED FIRST LOGIC\");\r\n                                            resolve();\r\n                                            return [3, 3];\r\n                                        case 2:\r\n                                            e_2 = _a.sent();\r\n                                            reject(new Error(\"Could not load Logic on \" + this._celestial.Name + \"\\n\" + e_2));\r\n                                            return [3, 3];\r\n                                        case 3: return [2];\r\n                                    }\r\n                                });\r\n                            }); })];\r\n                    });\r\n                });\r\n            };\r\n            CelestialLogic.prototype.unload = function () {\r\n            };\r\n            CelestialLogic.prototype.update = function () {\r\n                var _this = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    var state = _this._celestial.Sequencer.CurrentState;\r\n                    if (!_this._celestial.IsControlled) {\r\n                        var funcName = \"_handle\" + state[0].toUpperCase() + state.substr(1);\r\n                        if (_this[funcName] != null)\r\n                            _this[funcName]();\r\n                        if (!_this._pauseIntegrityCheck)\r\n                            _this._handleStateIntegrity();\r\n                    }\r\n                    else {\r\n                        _this._celestial.Physics.setGravity(0);\r\n                        if (_this._celestial.Sequencer.isCurrentState(celestials.engines.CelestialSequencer.STATE.Hold))\r\n                            _this._handleHolds();\r\n                    }\r\n                    resolve();\r\n                });\r\n            };\r\n            CelestialLogic.prototype._handleIdles = function () {\r\n            };\r\n            CelestialLogic.prototype._completeIdles = function () {\r\n            };\r\n            CelestialLogic.prototype._handleWalks = function () {\r\n                var frame = this._celestial.Sequencer.CurrentFrame;\r\n                var moveSpeed = frame.moveSpeed || 0;\r\n                var jumpForce = frame.jumpForce || 0;\r\n                this._celestial.Physics.addForceX(moveSpeed * this._celestial.Direction.x);\r\n                this._celestial.Physics.addForceY(-jumpForce);\r\n            };\r\n            CelestialLogic.prototype._completeWalks = function () {\r\n            };\r\n            CelestialLogic.prototype._handleClimbs = function () {\r\n                var frame = this._celestial.Sequencer.CurrentFrame;\r\n                var moveSpeed = frame.moveSpeed || 10;\r\n                this._celestial.Physics.addForceY(-moveSpeed);\r\n            };\r\n            CelestialLogic.prototype._completeClimbs = function () {\r\n                switch (this._celestial.Physics.LastTouchedWall) {\r\n                    case Physics.WALL.Left:\r\n                        this._celestial.Physics.addForceX(celestials.randomRange(35, 80));\r\n                        this._celestial.flipX();\r\n                        break;\r\n                    case Physics.WALL.Right:\r\n                        this._celestial.Physics.addForceX(celestials.randomRange(-35, -80));\r\n                        this._celestial.flipX();\r\n                        break;\r\n                }\r\n            };\r\n            CelestialLogic.prototype._handleHangs = function () {\r\n                var frame = this._celestial.Sequencer.CurrentFrame;\r\n                this._celestial.Physics.setGravity(0);\r\n                var moveSpeed = frame.moveSpeed || 2;\r\n                this._celestial.Physics.addForceX(moveSpeed * this._celestial.Direction.x);\r\n            };\r\n            CelestialLogic.prototype._handleFalls = function () {\r\n                var frame = this._celestial.Sequencer.CurrentFrame;\r\n            };\r\n            CelestialLogic.prototype._handleHolds = function () {\r\n                var frame = this._celestial.Sequencer.CurrentFrame;\r\n            };\r\n            CelestialLogic.prototype._completeHolds = function () {\r\n            };\r\n            CelestialLogic.prototype._tryToFlipX = function () {\r\n                var random = celestials.randomRange(0, 1);\r\n                var wantToFlipX = celestials.lerp((this._eagerness * 5), 100, random);\r\n                if (wantToFlipX > this._attentionSpan)\r\n                    this._celestial.flipX();\r\n            };\r\n            CelestialLogic.prototype._tryToClimb = function (wallHit) {\r\n                if (wallHit != null) {\r\n                    if (wallHit == Physics.WALL.Left || wallHit == Physics.WALL.Right) {\r\n                        if (celestials.randomRange(0, 1) > this._celestial.Sequencer.CurrentSequenceSet.attentionSpan || 100 / 100) {\r\n                            var state = this._celestial.Sequencer.changeState(celestials.engines.CelestialSequencer.STATE.Climb);\r\n                            if (state != celestials.engines.CelestialSequencer.STATE.Climb)\r\n                                return false;\r\n                            var sequence = this._celestial.Sequencer.getRandomStateSequence(state);\r\n                            if (sequence != null) {\r\n                                this._celestial.Sequencer.changeSequence(sequence);\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            CelestialLogic.prototype._tryToHang = function (wallHit) {\r\n                console.log(\"SHOULD I HANG? \", wallHit);\r\n                if (wallHit == null)\r\n                    return false;\r\n                if (wallHit != Physics.WALL.Top)\r\n                    return false;\r\n                console.log(\"TEST RANGE\");\r\n                if (celestials.randomRange(0, 1) > 0) {\r\n                    var state = this._celestial.Sequencer.changeState(celestials.engines.CelestialSequencer.STATE.Hang);\r\n                    if (state != celestials.engines.CelestialSequencer.STATE.Hang)\r\n                        return false;\r\n                    var sequence = this._celestial.Sequencer.getRandomStateSequence(state);\r\n                    if (sequence != null) {\r\n                        this._celestial.Sequencer.changeSequence(sequence);\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            Object.defineProperty(CelestialLogic.prototype, \"AttentionSpan\", {\r\n                get: function () { return this._attentionSpan; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return CelestialLogic;\r\n        }());\r\n        logic.CelestialLogic = CelestialLogic;\r\n    })(logic = celestials.logic || (celestials.logic = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var engines;\r\n    (function (engines) {\r\n        var CelestialSequencer = (function () {\r\n            function CelestialSequencer(celestial) {\r\n                this._celestial = celestial;\r\n                this.reset();\r\n                if (this.Data.sequences != null) {\r\n                    this._sequences = this.Data.sequences;\r\n                    this._updateRate = this._sequences.updateRate || 1;\r\n                }\r\n            }\r\n            Object.defineProperty(CelestialSequencer, \"STATE\", {\r\n                get: function () {\r\n                    return Object.freeze({\r\n                        \"Idle\": \"idles\",\r\n                        \"Walk\": \"walks\",\r\n                        \"Climb\": \"climbs\",\r\n                        \"Hang\": \"hangs\",\r\n                        \"Fall\": \"falls\",\r\n                        \"Recover\": \"recovers\",\r\n                        \"Hold\": \"holds\",\r\n                        \"Spawn\": \"spawns\",\r\n                        \"Interact\": \"interactions\"\r\n                    });\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer, \"DEFAULT_TRANSITIONAL_STATES\", {\r\n                get: function () { return [\"Idle\", \"Walk\"]; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            CelestialSequencer.prototype.reset = function () {\r\n                this._frameIndex = 0;\r\n                this._holdIndex = 0;\r\n                this._totalIndex = 0;\r\n            };\r\n            CelestialSequencer.prototype.changeState = function (state, fallback) {\r\n                if (state === void 0) { state = CelestialSequencer.STATE.Idle; }\r\n                if (this._currentState != null)\r\n                    this.completeState();\r\n                this._lastState = this._currentState || \"\";\r\n                var sequences = (this._sequences[state] != null) ? this._sequences[state].sequences : null;\r\n                if (sequences == null && fallback != null)\r\n                    return this._changeToFallbackState(fallback);\r\n                else if (sequences == null && fallback == null)\r\n                    return null;\r\n                this._currentState = state;\r\n                if (this._stateChangeListener != null)\r\n                    this._stateChangeListener();\r\n                return this._currentState;\r\n            };\r\n            CelestialSequencer.prototype._changeToFallbackState = function (state) {\r\n                return this.changeState(state);\r\n            };\r\n            CelestialSequencer.prototype.getStateByName = function (state) {\r\n                if (this._sequences[state] != null)\r\n                    return this._sequences[state];\r\n                return null;\r\n            };\r\n            CelestialSequencer.prototype.getRandomState = function (omitCurrentState) {\r\n                if (omitCurrentState === void 0) { omitCurrentState = true; }\r\n                var keys = Object.keys(CelestialSequencer.STATE);\r\n                if (keys.length <= 1)\r\n                    return this._currentState;\r\n                var state = CelestialSequencer.STATE[keys[celestials.randomRangeInt(0, keys.length - 1)]];\r\n                if (omitCurrentState && state == this._currentState)\r\n                    return this.getRandomState(true);\r\n                if (this._sequences[state].special)\r\n                    return this.getRandomState(omitCurrentState);\r\n                return state;\r\n            };\r\n            CelestialSequencer.prototype.getStateSequences = function (state) {\r\n                return (this._sequences[state] != null) ? this._sequences[state].sequences : null;\r\n            };\r\n            CelestialSequencer.prototype.getRandomStateSequence = function (state) {\r\n                var sequences = this._sequences[state].sequences;\r\n                if (sequences.length > 0)\r\n                    return sequences[celestials.randomRangeInt(0, sequences.length - 1)];\r\n                return null;\r\n            };\r\n            CelestialSequencer.prototype.getSequenceByName = function (name) {\r\n                var sequences = this._sequences[this._currentState].sequences;\r\n                for (var _i = 0, sequences_2 = sequences; _i < sequences_2.length; _i++) {\r\n                    var seq = sequences_2[_i];\r\n                    if (seq.name == name)\r\n                        return seq;\r\n                }\r\n                return null;\r\n            };\r\n            CelestialSequencer.prototype.changeSequence = function (sequence) {\r\n                if (sequence == null)\r\n                    return;\r\n                this.reset();\r\n                this._currentSequence = sequence;\r\n                console.log(\"CHANGED SEQUENCE: \" + this._currentSequence.name);\r\n            };\r\n            CelestialSequencer.prototype.completeSequence = function () {\r\n                if (this._sequenceCompleteListener != null)\r\n                    this._sequenceCompleteListener();\r\n            };\r\n            CelestialSequencer.prototype.completeState = function () {\r\n                console.log(\"COMPLETED STATE: \" + this._currentState);\r\n                if (this._stateCompleteListener != null)\r\n                    this._stateCompleteListener();\r\n            };\r\n            CelestialSequencer.prototype.isCurrentState = function () {\r\n                var states = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    states[_i] = arguments[_i];\r\n                }\r\n                for (var _a = 0, states_1 = states; _a < states_1.length; _a++) {\r\n                    var state = states_1[_a];\r\n                    if (this._currentState == state)\r\n                        return true;\r\n                }\r\n                return false;\r\n            };\r\n            CelestialSequencer.prototype.addSequenceCompleteListener = function (listener) {\r\n                this._sequenceCompleteListener = listener;\r\n            };\r\n            CelestialSequencer.prototype.removeSequenceCompleteListener = function () {\r\n                this._sequenceCompleteListener = null;\r\n            };\r\n            CelestialSequencer.prototype.addStateChangeListener = function (listener) {\r\n                this._stateChangeListener = listener;\r\n            };\r\n            CelestialSequencer.prototype.removeStateChangeListener = function () {\r\n                this._stateChangeListener = null;\r\n            };\r\n            CelestialSequencer.prototype.addStateCompleteListener = function (listener) {\r\n                this._stateCompleteListener = listener;\r\n            };\r\n            CelestialSequencer.prototype.removeStateCompleteListener = function () {\r\n                this._stateCompleteListener = null;\r\n            };\r\n            CelestialSequencer.prototype.update = function () {\r\n                var _this = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    try {\r\n                        _this._holdIndex++;\r\n                        _this._totalIndex++;\r\n                        if (_this._holdIndex > _this._currentSequence.frames[_this._frameIndex].hold * _this._updateRate) {\r\n                            _this._frameIndex++;\r\n                            _this._holdIndex = 0;\r\n                        }\r\n                        if (_this._frameIndex > _this._currentSequence.frames.length - 1) {\r\n                            if (_this.CurrentSequenceSet.runOnce)\r\n                                _this.completeSequence();\r\n                            if (_this._currentSequence.looping) {\r\n                                _this._frameIndex = 0;\r\n                            }\r\n                            else\r\n                                _this.completeSequence();\r\n                        }\r\n                        if (_this._totalIndex > _this._currentSequence.duration * _this._updateRate) {\r\n                            _this.completeSequence();\r\n                        }\r\n                        resolve();\r\n                    }\r\n                    catch (e) {\r\n                        reject(console.log(\"PROBLEM WITH SEQUENCER ON \" + _this._celestial.Name + \"\\n\" + e));\r\n                    }\r\n                });\r\n            };\r\n            Object.defineProperty(CelestialSequencer.prototype, \"Data\", {\r\n                get: function () { return this._celestial.Data; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"Sequences\", {\r\n                get: function () { return this._sequences; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"CurrentState\", {\r\n                get: function () { return this._currentState; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"LastState\", {\r\n                get: function () { return this._lastState; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"CurrentSequence\", {\r\n                get: function () { return this._currentSequence; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"CurrentFrame\", {\r\n                get: function () { return this._currentSequence.frames[this._frameIndex]; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(CelestialSequencer.prototype, \"CurrentSequenceSet\", {\r\n                get: function () { return this._sequences[this._currentState]; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return CelestialSequencer;\r\n        }());\r\n        engines.CelestialSequencer = CelestialSequencer;\r\n    })(engines = celestials.engines || (celestials.engines = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var engines;\r\n    (function (engines) {\r\n        var Moods = (function () {\r\n            function Moods(celestial) {\r\n                this._celestial = celestial;\r\n                this._moods = this._celestial.Data.moods;\r\n                this._moods = this._celestial.Data.moods ||\r\n                    {\r\n                        social: { value: 100, decay: 0 },\r\n                        hunger: { value: 100, decay: 0 },\r\n                        rest: { value: 100, decay: 0 }\r\n                    };\r\n                this._usesMood = false;\r\n                this._updateTick = 0;\r\n                this._onMoodChange = null;\r\n            }\r\n            Object.defineProperty(Moods, \"MOOD\", {\r\n                get: function () { return Object.freeze({ \"Social\": \"social\", \"Hunger\": \"hunger\", \"Rest\": \"rest\" }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Moods.prototype.decay = function () {\r\n                if (!this._usesMood)\r\n                    return;\r\n                for (var _i = 0, _a = Object.keys(Moods.MOOD); _i < _a.length; _i++) {\r\n                    var key = _a[_i];\r\n                    var mood = this._moods[Moods.MOOD[key]];\r\n                    if (mood != null) {\r\n                        mood.value = celestials.clamp(mood.value - (mood.decay * this._celestial.Variation), 1, 100);\r\n                    }\r\n                }\r\n            };\r\n            Moods.prototype.boost = function (moodName, value, useRandomness) {\r\n                if (useRandomness === void 0) { useRandomness = false; }\r\n                if (!this._usesMood)\r\n                    return;\r\n                var mood = this.getMoodByName(moodName);\r\n                if (mood != null) {\r\n                    if (value != null) {\r\n                        if (useRandomness) {\r\n                            var seed = celestials.randomRange(0.5, 1.5);\r\n                            var attachment = this._celestial.Relationships.Attachment / 100;\r\n                            value = celestials.clamp(((attachment + seed) / 2) * value, 1, 100);\r\n                        }\r\n                        mood.value = celestials.clamp(mood.value + value, 1, 100);\r\n                    }\r\n                }\r\n                else {\r\n                    var seed = celestials.randomRange(0.5, 1.5);\r\n                    var attachment = this._celestial.Relationships.Attachment / 100;\r\n                    value = celestials.clamp(((attachment + seed) / 2) * (mood.decay * 3), 1, 100);\r\n                }\r\n            };\r\n            Moods.prototype.getMoodByName = function (name) {\r\n                if (this._moods == null)\r\n                    return { value: 0, decay: 0 };\r\n                var mood = this._moods[name];\r\n                return mood || { value: 0, decay: 0 };\r\n            };\r\n            Moods.prototype.addMoodListener = function (callback) {\r\n                this._onMoodChange = callback;\r\n            };\r\n            Moods.prototype.removeMoodListener = function () {\r\n                this._onMoodChange = null;\r\n            };\r\n            Moods.prototype.load = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        this._usesMood = celestials.App.UsesMood;\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            Moods.prototype.unload = function () {\r\n            };\r\n            Moods.prototype.update = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        if (!this._usesMood)\r\n                            return [2];\r\n                        if (this._moods == null)\r\n                            return [2];\r\n                        if (this._updateTick > (this._moods.updateRate || 200)) {\r\n                            this._updateTick = 0;\r\n                            this.decay();\r\n                        }\r\n                        this._updateTick++;\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            Object.defineProperty(Moods.prototype, \"UsesMood\", {\r\n                get: function () { return this._usesMood; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Moods;\r\n        }());\r\n        engines.Moods = Moods;\r\n    })(engines = celestials.engines || (celestials.engines = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var engines;\r\n    (function (engines) {\r\n        var Relationships = (function () {\r\n            function Relationships(celestial) {\r\n                this._celestial = celestial;\r\n                this._relationshipsData = this._celestial.Data.relationships;\r\n                this._usesRelationships = false;\r\n                this._updateTick = 0;\r\n                this._relationshipsListener = null;\r\n                if (this._relationshipsData == null) {\r\n                    this._relationshipsData = {\r\n                        updateRate: 200,\r\n                        neutral: 50,\r\n                        attachment: 0,\r\n                        friends: [],\r\n                        enemies: []\r\n                    };\r\n                }\r\n                this._relationships = new Array();\r\n            }\r\n            Object.defineProperty(Relationships, \"MOOD\", {\r\n                get: function () { return Object.freeze({ \"Social\": \"social\", \"Hunger\": \"hunger\", \"Rest\": \"rest\" }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Relationships.prototype.getInteractValueWith = function (celestial, action) {\r\n                var seed = celestials.randomRange(-1, 1);\r\n                var goodRelationship = this._isGoodRelationshipType(celestial);\r\n                var interpersonal = (this._getRelationshipValue(celestial) == 0) ? 0 : (this._getRelationshipValue(celestial) - 50) / 100;\r\n                var interactionStrength = (seed * interpersonal) + (seed * ((goodRelationship) ? 1 : -1)) + seed;\r\n                interactionStrength *= (celestials.randomRange(0.5, 1.5) * this._relationshipsData.aggression || 1);\r\n                interactionStrength *= 10;\r\n                return interactionStrength;\r\n            };\r\n            Relationships.prototype.setInteraction = function (celestial, value, action) {\r\n                console.log(\"THIS INTERACTION IS WORTH: \" + value + \", with: \" + celestial.Name);\r\n                var relation = this.findRelationshipByCelestial(celestial);\r\n                if (relation == null) {\r\n                    this._relationships.push({\r\n                        celestial: celestial,\r\n                        value: this._relationshipsData.neutral + value,\r\n                        lastAction: action || \"None\"\r\n                    });\r\n                }\r\n                else {\r\n                    relation.value = celestials.clamp(relation.value + value, 0, 100);\r\n                }\r\n            };\r\n            Relationships.prototype._isGoodRelationshipType = function (celestial) {\r\n                if (this._relationshipsData.friends != null)\r\n                    for (var _i = 0, _a = this._relationshipsData.friends; _i < _a.length; _i++) {\r\n                        var f = _a[_i];\r\n                        if (f == celestial.Lookup)\r\n                            return true;\r\n                    }\r\n                if (this._relationshipsData.enemies != null)\r\n                    for (var _b = 0, _c = this._relationshipsData.enemies; _b < _c.length; _b++) {\r\n                        var e = _c[_b];\r\n                        if (e == celestial.Lookup)\r\n                            return false;\r\n                    }\r\n                return true;\r\n            };\r\n            Relationships.prototype._getRelationshipValue = function (celestial) {\r\n                for (var _i = 0, _a = this._relationships; _i < _a.length; _i++) {\r\n                    var rel = _a[_i];\r\n                    if (rel.celestial == celestial)\r\n                        return rel.value;\r\n                }\r\n                return 0;\r\n            };\r\n            Relationships.prototype.findRelationshipByCelestial = function (celestial) {\r\n                for (var _i = 0, _a = this._relationships; _i < _a.length; _i++) {\r\n                    var rel = _a[_i];\r\n                    if (rel.celestial == celestial)\r\n                        return rel;\r\n                }\r\n                return null;\r\n            };\r\n            Relationships.prototype.addRelationshipsListener = function (callback) {\r\n                this._relationshipsListener = callback;\r\n            };\r\n            Relationships.prototype.removeRelationshipsListener = function () {\r\n                this._relationshipsListener = null;\r\n            };\r\n            Relationships.prototype.load = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            Relationships.prototype.unload = function () {\r\n            };\r\n            Relationships.prototype.update = function () {\r\n                return __awaiter(this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        if (!this._usesRelationships)\r\n                            return [2];\r\n                        return [2];\r\n                    });\r\n                });\r\n            };\r\n            Object.defineProperty(Relationships.prototype, \"Attachment\", {\r\n                get: function () { return celestials.clamp(this._relationshipsData.attachment || 0, 0, 100); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Relationships.prototype, \"Relationships\", {\r\n                get: function () { return this._relationships; },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Relationships.prototype, \"Friends\", {\r\n                get: function () { return this._relationships.filter(function (value) { return value.value > 75; }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            Object.defineProperty(Relationships.prototype, \"Enemies\", {\r\n                get: function () { return this._relationships.filter(function (value) { return value.value < 20; }); },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n            return Relationships;\r\n        }());\r\n        engines.Relationships = Relationships;\r\n    })(engines = celestials.engines || (celestials.engines = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var InputConfirm = (function () {\r\n                function InputConfirm(node, confirmNode, changeListener, confirmListener, cancelListener, options) {\r\n                    this._node = node;\r\n                    this._confirmNode = confirmNode;\r\n                    this._changeListener = changeListener;\r\n                    this._confirmListener = confirmListener;\r\n                    this._cancelListener = cancelListener;\r\n                    this._options = options;\r\n                    this._node.addEventListener(\"keydown\", this._onChange.bind(this));\r\n                    if (this._confirmNode != null)\r\n                        this._confirmNode.addEventListener(\"mousedown\", this._onConfirm.bind(this));\r\n                }\r\n                InputConfirm.prototype.cancel = function () {\r\n                    console.log(\"CANCELLING\");\r\n                    if (this._cancelListener != null)\r\n                        this._cancelListener(this._node.value);\r\n                };\r\n                InputConfirm.prototype.addChangeListener = function (callback) {\r\n                    this._changeListener = callback;\r\n                };\r\n                InputConfirm.prototype.removeChangeListener = function () {\r\n                    this._changeListener = null;\r\n                };\r\n                InputConfirm.prototype.addConfirmListener = function (callback) {\r\n                    this._confirmListener = callback;\r\n                };\r\n                InputConfirm.prototype.removeConfirmListener = function () {\r\n                    this._confirmListener = null;\r\n                };\r\n                InputConfirm.prototype.addCancelListener = function (callback) {\r\n                    this._cancelListener = callback;\r\n                };\r\n                InputConfirm.prototype.removeCancelListener = function () {\r\n                    this._cancelListener = null;\r\n                };\r\n                InputConfirm.prototype._onChange = function (e) {\r\n                    if (this._changeListener != null)\r\n                        this._changeListener(this._node.value);\r\n                    console.log(\"MY KEY: \" + e.key);\r\n                    if (this._options != null) {\r\n                        if (this._options.confirmWithEnterKey && e.key == \"Enter\")\r\n                            this._onConfirm();\r\n                        if (this._options.cancelWithEscapeKey && e.key == \"Escape\")\r\n                            this.cancel();\r\n                    }\r\n                };\r\n                InputConfirm.prototype._onLoseFocus = function (e) {\r\n                    this.cancel();\r\n                };\r\n                InputConfirm.prototype._onConfirm = function () {\r\n                    console.log(\"CONFIRMED!: \" + this._node.value);\r\n                    if (this._confirmListener != null)\r\n                        this._confirmListener(this._node.value);\r\n                };\r\n                return InputConfirm;\r\n            }());\r\n            components.InputConfirm = InputConfirm;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var components;\r\n        (function (components) {\r\n            var YesNoConfirm = (function () {\r\n                function YesNoConfirm(yesNode, noNode, yesListener, noListener) {\r\n                    this._yesNode = yesNode;\r\n                    this._noNode = noNode;\r\n                    this._yesListener = yesListener;\r\n                    this._noListener = noListener;\r\n                    this._yesNode.addEventListener(\"mousedown\", this._onYes.bind(this));\r\n                    this._noNode.addEventListener(\"mousedown\", this._onNo.bind(this));\r\n                }\r\n                YesNoConfirm.prototype.addYesListener = function (callback) {\r\n                    this._yesListener = callback;\r\n                };\r\n                YesNoConfirm.prototype.removeYesListener = function () {\r\n                    this._yesListener = null;\r\n                };\r\n                YesNoConfirm.prototype.addNoListener = function (callback) {\r\n                    this._noListener = callback;\r\n                };\r\n                YesNoConfirm.prototype.removeNoListener = function () {\r\n                    this._noListener = null;\r\n                };\r\n                YesNoConfirm.prototype._onYes = function () {\r\n                    if (this._yesListener != null)\r\n                        this._yesListener();\r\n                };\r\n                YesNoConfirm.prototype._onNo = function () {\r\n                    if (this._noListener != null)\r\n                        this._noListener();\r\n                };\r\n                return YesNoConfirm;\r\n            }());\r\n            components.YesNoConfirm = YesNoConfirm;\r\n        })(components = ui.components || (ui.components = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var ui;\r\n    (function (ui) {\r\n        var menus;\r\n        (function (menus) {\r\n            var CurrentCelestialsItem = (function (_super) {\r\n                __extends(CurrentCelestialsItem, _super);\r\n                function CurrentCelestialsItem(node, cel, changeListener, removeListener, updateListener) {\r\n                    var _this = _super.call(this, node) || this;\r\n                    _this._celestial = cel;\r\n                    _this._changeListener = changeListener;\r\n                    _this._removeListener = removeListener;\r\n                    _this._updateListener = updateListener;\r\n                    _this.updateData();\r\n                    _this.loadIcon();\r\n                    menus.Tooltip.lookForTooltips(_this.Node);\r\n                    _this._registry = {\r\n                        onInfo: _this._onInfo.bind(_this),\r\n                        onEdit: _this._onEdit.bind(_this),\r\n                        onDelete: _this._onDelete.bind(_this),\r\n                        onCelestialChange: _this._onCelestialChange.bind(_this)\r\n                    };\r\n                    _this._buttons = {\r\n                        infoButton: _this.Node.querySelector(\".item.info\"),\r\n                        editButton: _this.Node.querySelector(\".item.edit\"),\r\n                        deleteButton: _this.Node.querySelector(\".item.delete\")\r\n                    };\r\n                    var _a = _this._buttons, infoButton = _a.infoButton, editButton = _a.editButton, deleteButton = _a.deleteButton;\r\n                    infoButton.addEventListener(\"mousedown\", _this._registry.onInfo);\r\n                    editButton.addEventListener(\"mousedown\", _this._registry.onEdit);\r\n                    deleteButton.addEventListener(\"mousedown\", _this._registry.onDelete);\r\n                    new ui.components.YesNoConfirm(_this.Node.querySelector(\".confirm .icon.confirm\"), _this.Node.querySelector(\".confirm .icon.delete\"), function () {\r\n                        _this.callRemove();\r\n                    }, function () {\r\n                        _this.closeDeletePanel();\r\n                    });\r\n                    new ui.components.InputConfirm(_this.Node.querySelector(\".edit-name input\"), _this.Node.querySelector(\".edit-name .confirm\"), null, function (name) {\r\n                        cel.setName(name);\r\n                        _this.closeEditPanel();\r\n                        _this.Node.querySelector(\".name\").innerHTML = cel.Name;\r\n                        _this.callChange();\r\n                    }, function () { return _this.closeEditPanel(); }, { confirmWithEnterKey: true, cancelWithEscapeKey: true });\r\n                    return _this;\r\n                }\r\n                CurrentCelestialsItem.prototype.deselect = function () {\r\n                    _super.prototype.deselect.call(this);\r\n                    this.closeEditPanel();\r\n                    this.closeDeletePanel();\r\n                };\r\n                CurrentCelestialsItem.prototype.updateData = function () {\r\n                    this.Node.querySelector(\".name\").innerHTML = this._celestial.Name;\r\n                    this.Node.querySelector(\".type\").innerHTML = this._celestial.Lookup;\r\n                    var dateOptions = { month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\r\n                    this.Node.querySelector(\".date\").innerHTML = this._celestial.DateSpawned.toLocaleDateString('us-EN', dateOptions);\r\n                };\r\n                CurrentCelestialsItem.prototype.loadIcon = function () {\r\n                    return __awaiter(this, void 0, void 0, function () {\r\n                        var image;\r\n                        return __generator(this, function (_a) {\r\n                            image = this.Node.querySelector(\"img\");\r\n                            image.src = this._celestial.Icon.src;\r\n                            image.style.filter = this._celestial.Icon.style.filter;\r\n                            return [2];\r\n                        });\r\n                    });\r\n                };\r\n                CurrentCelestialsItem.prototype.openEditPanel = function () {\r\n                    this.Node.querySelector(\".item.edit\").classList.add(\"selected\");\r\n                    var inputDiv = this.Node.querySelector(\".edit-name input\");\r\n                    console.log(\"FOCUS\");\r\n                    console.log(inputDiv);\r\n                    window.setTimeout(function () { return inputDiv.focus(); }, 0);\r\n                };\r\n                CurrentCelestialsItem.prototype.closeEditPanel = function () {\r\n                    this.Node.querySelector(\".item.edit\").classList.remove(\"selected\");\r\n                };\r\n                CurrentCelestialsItem.prototype.openDeletePanel = function () {\r\n                    console.log(\"OPEN ME\");\r\n                    this.Node.querySelector(\".item.delete\").classList.add(\"selected\");\r\n                };\r\n                CurrentCelestialsItem.prototype.closeDeletePanel = function () {\r\n                    console.log(\"CLOSE ME\");\r\n                    this.Node.querySelector(\".item.delete\").classList.remove(\"selected\");\r\n                };\r\n                CurrentCelestialsItem.prototype.callChange = function () {\r\n                    if (this._changeListener != null)\r\n                        this._changeListener(this);\r\n                };\r\n                CurrentCelestialsItem.prototype.callRemove = function () {\r\n                    if (this._removeListener != null)\r\n                        this._removeListener(this);\r\n                };\r\n                CurrentCelestialsItem.prototype.callUpdate = function () {\r\n                    if (this._updateListener != null)\r\n                        this._updateListener(this);\r\n                };\r\n                CurrentCelestialsItem.prototype._onInfo = function () {\r\n                    menus.CelestialDetails.show(this._celestial);\r\n                };\r\n                CurrentCelestialsItem.prototype._onEdit = function () {\r\n                    var inputDiv = this.Node.querySelector(\".edit-name input\");\r\n                    inputDiv.value = this._celestial.Name;\r\n                    this.openEditPanel();\r\n                };\r\n                CurrentCelestialsItem.prototype._onDelete = function () {\r\n                    this.openDeletePanel();\r\n                };\r\n                CurrentCelestialsItem.prototype._onCelestialChange = function () {\r\n                    this.updateData();\r\n                    this.callUpdate();\r\n                };\r\n                Object.defineProperty(CurrentCelestialsItem.prototype, \"Celestial\", {\r\n                    get: function () { return this._celestial; },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n                return CurrentCelestialsItem;\r\n            }(ui.components.Item));\r\n            menus.CurrentCelestialsItem = CurrentCelestialsItem;\r\n        })(menus = ui.menus || (ui.menus = {}));\r\n    })(ui = celestials.ui || (celestials.ui = {}));\r\n})(celestials || (celestials = {}));\r\nvar celestials;\r\n(function (celestials) {\r\n    var systems;\r\n    (function (systems) {\r\n        var Weather = (function () {\r\n            function Weather() {\r\n            }\r\n            return Weather;\r\n        }());\r\n        systems.Weather = Weather;\r\n    })(systems = celestials.systems || (celestials.systems = {}));\r\n})(celestials || (celestials = {}));\r\n\n\n//# sourceURL=webpack:///./ts/App.ts?");

/***/ }),

/***/ "./webpack.dev.js":
/*!************************!*\
  !*** ./webpack.dev.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Load globally into all modules.\r\n__webpack_require__(\"./res sync recursive \\\\.png$\");\r\n__webpack_require__(\"./res sync recursive \\\\.json$\");\r\n__webpack_require__(\"./ sync index.html$\");\r\n__webpack_require__(\"./ sync package.json$\");\r\n__webpack_require__(\"./styles sync \\\\.css$\");\r\n__webpack_require__(\"./js sync \\\\background.js$\");\r\n\r\n\r\n// require('./js/background.js');\n\n//# sourceURL=webpack:///./webpack.dev.js?");

/***/ }),

/***/ 0:
/*!******************************************!*\
  !*** multi ./webpack.dev.js ./ts/App.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./webpack.dev.js */\"./webpack.dev.js\");\nmodule.exports = __webpack_require__(/*! ./ts/App.ts */\"./ts/App.ts\");\n\n\n//# sourceURL=webpack:///multi_./webpack.dev.js_./ts/App.ts?");

/***/ })

/******/ });